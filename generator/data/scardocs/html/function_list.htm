<!--This file has been generated from function_list.xsl.  DO NOT EDIT.-->
<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <link href="scardoc.css" rel="stylesheet" type="text/css" charset="utf-8">
    <title>ScarDoc - Function List</title>
  </head>
  <body><span class="subtitle">Function List</span><p>
      <p><a name="Group_AI Production Scoring Functions"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>AI Production Scoring Functions</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="AIProductionScoring_AlliedCombatFitness"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_AlliedCombatFitness( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> minFitness, <span class="arg">Real</span> maxFitness, <span class="arg">Integer</span> aiArmyType, <span class="arg">Boolean</span> highFitnessIsGood )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a AlliedCombatFitness scoring function. </p>
                <p>Returns 1.0 to 0.0, based on how the allied combat fitness is. 1.0 if the allied fitness is at or below minFitness, 0.0 if fitness is above the maxFitness, smooth transition in between. If highFitnessIsGood, returns 0.0 to 1.0 instead. 0.0 if at or below minFitness and 1.0 if at or above maxFitness.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (550) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_AlliedCombatFitnessVsStrongestEnemy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_AlliedCombatFitnessVsStrongestEnemy( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> minFitness, <span class="arg">Real</span> maxFitness, <span class="arg">Integer</span> aiArmyType, <span class="arg">Boolean</span> highFitnessIsGood )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a AlliedCombatFitness scoring function (versus strongest enemy). </p>
                <p>Returns 1.0 to 0.0, based on how the allied combat fitness is. 1.0 if the fitness is at or below minFitness, 0.0 if fitness is above the maxFitness, smooth transition in between. If highFitnessIsGood, returns 0.0 to 1.0 instead. 0.0 if at or below minFitness and 1.0 if at or above maxFitness.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (581) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_AlliedCombatFitnessVsWeakestEnemy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_AlliedCombatFitnessVsWeakestEnemy( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> minFitness, <span class="arg">Real</span> maxFitness, <span class="arg">Integer</span> aiArmyType, <span class="arg">Boolean</span> highFitnessIsGood )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a AlliedCombatFitness scoring function (versus the weakest enemy). </p>
                <p>Returns 1.0 to 0.0, based on how the allied combat fitness is. 1.0 if the fitness is at or below minFitness, 0.0 if fitness is above the maxFitness, smooth transition in between. If highFitnessIsGood, returns 0.0 to 1.0 instead. 0.0 if at or below minFitness and 1.0 if at or above maxFitness.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (612) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_AmountOfResourceNeeded"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_AmountOfResourceNeeded( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> maxResources )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an AmountOfResourceNeeded scoring function. </p>
                <p>If this building is a dropoff, this returns a value between 0 and 1 indicating how much of that resources is needed. Any amount &gt;= maxResources will result in a value of 1.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (777) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_CanPushProductionScoringFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_CanPushProductionScoringFunction( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if now is an appropriate time to be making scoring functions. </p>
                <p>Score functions should only be made within functions referenced by ProductionGroups</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (57) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_ClampedScoringFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_ClampedScoringFunction( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> min, <span class="arg">Real</span> max, <span class="arg">ScoringFunction*</span> innerScoringFunction )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a ClampedScoringFunction scoring function. </p>
                <p>Clamps the returned value of the inner scoring function</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (639) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_CounterScore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_CounterScore( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> baseScoreContributuion )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a CounterScore scoring function </p>
                <p>If a item is a chosen counter it will get the score = (baseScoreContributuion + (1 - baseScoreContributuion) * counter score)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (130) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_DeficiencyScore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_DeficiencyScore( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> weight )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a DropOffScore scoring function. </p>
                <p>Returns positive score if drop off is required to either serve gathering of a resource or improve existing gathering</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (433) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_EntityCombatUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_EntityCombatUpgrade( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a EntityCombatUpgrade scoring function. </p>
                <p>Returns positive score if entity's combat fitness is improved. The aforementioned entity is the entity that the upgrade is being produce on.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (455) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_IncreaseOverTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_IncreaseOverTime( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> minGameTime, <span class="arg">Real</span> increasePerSecond )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a MinimumGameTime scoring function. </p>
                <p>minGameTime is time from start in seconds. Returns 0.0 until minGameTime has passed, 1.0f after.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (311) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_InverseRandomIntScore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_InverseRandomIntScore( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an InverseRandomIntScore scoring function. </p>
                <p>Returns either 0.0f or 1.0f (inverse of RandomIntScore) based on a random number picked at the start of the game</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (766) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_IslandNeedingExpansionBase"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_IslandNeedingExpansionBase( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an IslandNeedingExpansionBase scoring function. </p>
                <p>Returns 1.0f if there is an island requiring an expansion base</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (718) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_LackOfSecuredResourceDeposits"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_LackOfSecuredResourceDeposits( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">ResourceType</span> resourceType, <span class="arg">Real</span> scarceAmount, <span class="arg">Real</span> wellOffAmount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a LackOfSecuredResourceDeposits scoring function. </p>
                <p>Returns between 0 and 1, 1 if the total sum of secured resource deposits is less or equal to scarce amount, 0 if the amount is equal to or greater than well off amount, lerps in between</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (692) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_LuaScoringFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_LuaScoringFunction( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">LuaFunction</span> scoringFunction )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a LuaScoringFunction scoring function. </p>
                <p>Takes a reference to a lua function. Lua function will be called and passed AIPlayer and Pbg. Lua function is expected to return a value &gt;= 0.0 DO NOT call any methods that do stuff to the AIPlayer in your referenced lua function. The referenced lua function must exist within the player's lua context</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (492) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_MaximumGameTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_MaximumGameTime( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> maxGameTime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a MaximumGameTime scoring function. </p>
                <p>minGameTime is time from start in seconds. Returns 1.0 until maxGameTime has passed, 0.0f after.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (297) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_MaxPopCapPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_MaxPopCapPercentage( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> targetPopulationPercentageAlive, <span class="arg">Boolean</span> groupPopulation )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a MaxPopCapPercentage scoring function </p>
                <p>targetPopulationPercentageAlive should be in range 0.0 -&gt; 1.0. Return 1.0f as long as the combined population of the production item /group does not exceed a percentage of the player's max pop cap. If groupPopulation == true then all members of the item's Production Group are counted towards the current population to be compared against the target population.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (669) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_MaxScoringFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_MaxScoringFunction( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">vector&lt; ScoringFunction*&gt;</span> innerScoringFunction )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a MaxScoringFunction scoring function. </p>
                <p>Returns the max value of the inner scoring functions</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (652) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_MaxWeaponDamage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_MaxWeaponDamage( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> maxDamage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a MaxWeaponDamage scoring function. </p>
                <p>Units max weapon damage is normalized by max damage. (returns between 0.0 and 1.0)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (322) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_MilitaryPlayerUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_MilitaryPlayerUpgrade( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> upgradeExponent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a MilitaryPlayerUpgrade scoring function. </p>
                <p>Quantifies how a player upgrade will improve the current army's combat fitness. Result = 1 - (1  - combat_fitness_improvment)^upgradeExponent</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (275) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_MinimumGameTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_MinimumGameTime( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> minGameTime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a MinimumGameTime scoring function. </p>
                <p>minGameTime is time from start in seconds. Returns 0.0 until minGameTime has passed, 1.0f after.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (286) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_MultipleProduced"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_MultipleProduced( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> additionalFactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a MultipleProduced scoring function </p>
                <p>Item will get a score of 1 +(additionalFactor * number of additional produced)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (141) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_MultiplyListScoringFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_MultiplyListScoringFunction( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">vector&lt; ScoringFunction*&gt;</span> innerScoringFunction )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a MultiplyListScoringFunction scoring function. </p>
                <p>Takes a list of scoring functions and multiplies them together. This scoring function can be paired with MaxScoringFunction to generate OR scoring expressions, such as Max(IslandNeedingExpansionBase, (ProductionQueueContention * TimeToAcquire))</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (808) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_NavalTransportRequired"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_NavalTransportRequired( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a NavalTransportRequired scoring function. </p>
                <p>Returns 0.0 -&gt; 1.0, depending on strategic island decisions that would require transport</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (708) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_NotProducedEver"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_NotProducedEver( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an NotProducedEver scoring function. </p>
                <p>Returns 1.0f has never been produced, 0.0f if it has been produced</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (745) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_NotProducedRecently"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_NotProducedRecently( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> timePeriodSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an NotProducedRecently scoring function. </p>
                <p>Returns 1.0f if the item was not produced within the time period supplied, 0.0f otherwise</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (728) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_OnlyProduceOneAtATime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_OnlyProduceOneAtATime( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a OnlyProduceOneAtATime scoring function. </p>
                <p>Returns 0.0 while another item of the same type is being produced</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (409) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_PlannedPlacementScore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_PlannedPlacementScore( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> minPlacementScore )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a PlannedPlacementScore scoring function. </p>
                <p>Returns the value of the planned placement, returns 0.0 if no planned placement Will return 0.0 if placement score is below minPlacementScore. Set minPlacementScore &lt; 0.0 to ignore this minimum filtering.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (263) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_PlayerGatheringUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_PlayerGatheringUpgrade( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> improvementScalingFactor, <span class="arg">Real</span> approxDistToDeposit )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a PlayerGatheringUpgrade scoring function </p>
                <p>Result is gatheringImprovment * improvementScalingFactor</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (237) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_PlayersOnDifferentIslands"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_PlayersOnDifferentIslands( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an AIPlayersOnDifferentIslands scoring function. </p>
                <p>Returns 1.0 if any players are on different pathfinding islands, 0 if they are all on the same island</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (334) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_PopCapGenerator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_PopCapGenerator( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a PopCapGenerator scoring function. </p>
                <p>Returns 1.0 score if the item generates required pop cap</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (503) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_PopulationPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_PopulationPercentage( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> targetPopulationPercentageAlive, <span class="arg">Real</span> scoreDropOffFactor, <span class="arg">Boolean</span> groupPopulation, <span class="arg">Boolean</span> useSquadPopulation )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a PopulationPercentage scoring function </p>
                <p>targetPopulationPercentageAlive should be in range 0.0 -&gt; 1.0. Score will approach zero as an item's population (as a percentage of the global population) approaches the target, i.e. score =  1.0f - (currentPercentage / target)^dropOffFactor;  The global population is number of squads or structures belonging to the player alive. If groupPopulation == true then all members of the item's Production Group are counted towards the current population to be compared against the global population. if useSquadPopulation == true, number of squads will be used in calculation instead of checking if the item pbg corresponds to a squad or building</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (107) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_PresenceOfEnemyTypes"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_PresenceOfEnemyTypes( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> weights, <span class="arg">Boolean</span> squadTypes )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a PresenceOfEnemyTypes scoring function </p>
                <p>Every time a unit type is observed it's weight is added to the return value of this scoring function. if squadTypes == false, then entity types assumed. Max return value is 1.0</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (380) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_PresenceOfMyTypes"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_PresenceOfMyTypes( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> weights, <span class="arg">Boolean</span> squadTypes )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a PresenceOfMyTypes scoring function </p>
                <p>Every time a unit type is observed it's weight is added to the return value of this scoring function. if squadTypes == false, then entity types assumed. Max return value is 1.0</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (391) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_PresenceOfUpgradeableSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_PresenceOfUpgradeableSquads( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> weight )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a PresenceOfUpgradeableSquads scoring function. </p>
                <p>For each player squad that this upgrade applies to the score is increased by the weight to a max of 1.0.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (398) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_ProductionQueueContention"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_ProductionQueueContention( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> contentionThreshold, <span class="arg">Real</span> normalFactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a ProductionQueueContention scoring function. </p>
                <p>Returns a score of productionQueueContention / normalFactor. productionQueueContention is the number of contentions recorded for the associated item (which is a production building), normalFactor is clamped &gt;= 1</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (518) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_RandomIntScore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_RandomIntScore( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an RandomIntScore scoring function. </p>
                <p>Returns either 0.0f or 1.0f based on a random number picked at the start of the game</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (755) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_RemainingPersonnelPopCap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_RemainingPersonnelPopCap( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> requiredRemainingPop )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an RemainingPersonnelPopCap scoring function. </p>
                <p>Returns 1.0f if there is enough remaining personnel pop cap, 0.0f otherwise</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (789) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_ResourceGeneratorScore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_ResourceGeneratorScore( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> depletionTimeThreshold )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a ResourceGeneratorScore scoring function. </p>
                <p>Gives positive score if the item produces required resources</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (531) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_ScarcityAndDeficiencyScore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_ScarcityAndDeficiencyScore( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a DropOffScore scoring function. </p>
                <p>Returns positive score if drop off is required to either serve gathering of a resource or improve existing gathering</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (421) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_ShouldConsiderLimitedNaval"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_ShouldConsiderLimitedNaval( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an AIShouldConsiderLimitedNaval scoring function. </p>
                <p>Returns 1.0 if there are large bodies of water on the map</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (163) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_ShouldConsiderNaval"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_ShouldConsiderNaval( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an AIShouldConsiderNaval scoring function. </p>
                <p>Returns 1.0 if players start on different islands or there are large bodies of water on the map</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (152) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_ShouldNotConsiderNaval"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_ShouldNotConsiderNaval( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Boolean</span> shouldIncludeLimitedNaval )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns 1 if not a naval map, 0 otherwise </p>
                <p>If shouldIncludeLimitedNaval is true, limited naval maps return 1, otherwise limited naval maps return 0</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (821) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_StrategicIntention"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_StrategicIntention( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> weights )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a StrategicIntention scoring function </p>
                <p>Weights table format: { ["weight name"] = weight, } The score is the sum of current intention values * weight, divided by the sum of weights Ex: (currentSiegeIntention* siegeIntentionWeight)/siegeIntentionWeight</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (178) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_TierUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_TierUpgrade( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a TierUpgrade scoring function. </p>
                <p>Returns 1.0f if the given BuildInfo is a Player Upgrade that unlocks higher tier of existing units</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (248) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_TimeToAcquire"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_TimeToAcquire( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> maxTimeSeconds, <span class="arg">Boolean</span> includeTimeToGather, <span class="arg">Boolean</span> includeTimeToBuildThis, <span class="arg">Boolean</span> includeTimeToBuildRequirements )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a TimeToAcquire scoring function </p>
                <p>TimeToAcquire returns values between 0 and 1 and penalizes things that need lots of resources or prerequisites to be produced. Score will approach 0.01 as the time to build something approaches maxTimeSeconds. Time to build something is the sum of the time to gather the outstanding resources, time to build the item, and time to build the requirements of the item</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (222) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_TradeRouteExistsScore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_TradeRouteExistsScore( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Boolean</span> landRoute )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a ResourceDesireVsIncome scoring function. </p>
                <p>Returns 0.0 if no safe trade routes exist, 1.0 otherwise.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (466) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_UnderCountLimit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_UnderCountLimit( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Integer</span> maxAlive, <span class="arg">Integer</span> maxEverProduced, <span class="arg">Boolean</span> groupPopulation )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a UnderCountLimit scoring function </p>
                <p>Keeps an item within limits. If groupPopulation == true then all members of the item's Production Group are counted towards the current population to be compared against the limit.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (72) </b></td>
            </tr>
          </table>
        </p><a name="AIProductionScoring_UnderCountLimitFromStateModel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIProductionScoring_UnderCountLimitFromStateModel( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">String</span> keyMaxAlive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a UnderCountLimit scoring function </p>
                <p>Keeps an item within limits. If groupPopulation == true then all members of the item's Production Group are counted towards the current population to be compared against the limit.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIProductionScoring.cpp] (86) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_AI StateModel Functions"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>AI StateModel Functions</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="AIPlayer_GetStateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetStateModelBool( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a boolean value from the AIPlayer's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (75) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetStateModelFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetStateModelFloat( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a float value from the AIPlayer's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (87) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetStateModelInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetStateModelInt( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer value from the AIPlayer's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (81) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetStateModelPBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetStateModelPBG( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a PropertyBagGroup value from the AIPlayer's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (93) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetStateModelTargetListEntries"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetStateModelTargetListEntries( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of targets from the AIPlayer's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (101) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_ClearStateModelEnumTableTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_ClearStateModelEnumTableTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a TargetHandle value in the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (474) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_ClearStateModelTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_ClearStateModelTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a TargetHandle value in the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (364) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelBool( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a boolean value from the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (138) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelEntityTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Entity value from the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (176) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelEnumTableBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelEnumTableBool( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a boolean value from the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (223) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelEnumTableEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelEnumTableEntityTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Entity value from the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (276) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelEnumTableFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelEnumTableFloat( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a float value from the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (237) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelEnumTableInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelEnumTableInt( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer value from the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (230) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelEnumTablePBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelEnumTablePBG( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a pbg value from the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (287) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelEnumTablePlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelEnumTablePlayerTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Player value from the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (257) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelEnumTableSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelEnumTableSquadTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Squad value from the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (265) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelEnumTableVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelEnumTableVector3f( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Vector3f value from the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (247) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelFloat( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a float value from the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (150) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelInt( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer value from the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (144) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelPBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelPBG( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a pbg value from the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (183) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelPlayerTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Player value from the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (162) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelSquadTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Squad value from the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (169) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetStateModelVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetStateModelVector3f( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Vector3f value from the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (156) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelBool( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a boolean value in the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (322) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelEntityTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">EntityID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an Entity TargetHandle value in the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (358) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelEnumTableBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelEnumTableBool( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a boolean value in the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (409) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelEnumTableEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelEnumTableEntityTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">EntityID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an Entity TargetHandle value in the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (467) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelEnumTableFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelEnumTableFloat( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a float value in the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (423) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelEnumTableInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelEnumTableInt( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Integer</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an integer value in the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (416) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelEnumTablePBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelEnumTablePBG( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">PropertyBagGroup</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a pbg value in the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (485) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelEnumTablePlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelEnumTablePlayerTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">PlayerID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Player TargetHandle value in the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (445) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelEnumTableSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelEnumTableSquadTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">SquadID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Squad TargetHandle value in the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (456) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelEnumTableVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelEnumTableVector3f( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Position</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Vector3f value in the AISquad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (434) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelFloat( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a float value in the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (334) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelInt( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Integer</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an integer value in the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (328) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelPBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelPBG( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">PropertyBagGroup</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a pbg value in the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (370) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelPlayerTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">PlayerID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Player TargetHandle value in the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (346) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelSquadTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">SquadID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Squad TargetHandle value in the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (352) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_SetStateModelVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_SetStateModelVector3f( <span class="arg">SquadID</span> aiSquad, <span class="arg">String</span> key, <span class="arg">Position</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Vector3f value in the AISquad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIStateModel.cpp] (340) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_AI Tactics"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>AI Tactics</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="AITactic_AdjustJumpSlideAbilityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AITactic_AdjustJumpSlideAbilityTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">PropertyBagGroup</span> abilityPBG, <span class="arg">Real</span> slideOffset, <span class="arg">Position</span> targetPosition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>calculates a valid target position for a jump slide ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAITactics.cpp] (39) </b></td>
            </tr>
          </table>
        </p><a name="AITactic_AICommandSquadMove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AITactic_AICommandSquadMove( <span class="arg">SquadID</span> aiSquad, <span class="arg">Position</span> target, <span class="arg">Real</span> acceptableProximity, <span class="arg">Boolean</span> reverseMove )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Issue an AI move command to a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAITactics.cpp] (60) </b></td>
            </tr>
          </table>
        </p><a name="AITactic_GetTacticPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AITactic_GetTacticPriority( <span class="arg">SquadID</span> pSquad, <a href="enum_list.htm#AITacticType">AITacticType</a> tacticType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get tactic priority for a squad. </p>
                <p>Return -1 if the tactic type isn't found.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAITactics.cpp] (18) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_Blueprints"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>Blueprints</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="BP_GetEntityBlueprintsWithType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityBlueprintsWithType( <span class="arg">EntityType/Table</span> types )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a table of all of the EBPs that match a particular EntityType. You can pass in a table of multiple EntityTypes to get a list EBPs that match ANY of the types listed. </p>
                <p>If you want a blueprint to match a bunch of EntityTypes at the same time (i.e. AND instead of OR) then those types should be listed together in a sub-table. This function can potentially be quite slow as it has to parse every EBP in the game, so be careful about how you use it.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\blueprints.scar] (29) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadBlueprintsWithType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadBlueprintsWithType( <span class="arg">SquadType/Table</span> types )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a table of all of the SBPs that match a particular SquadType. You can pass in a table of multiple SquadTypes to get a list SBPs that match ANY of the types listed. </p>
                <p>If you want a blueprint to match a bunch of SquadTypes at the same time (i.e. AND instead of OR) then those types should be listed together in a sub-table. This function can potentially be quite slow as it has to parse every SBP in the game, so be careful about how you use it.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\blueprints.scar] (82) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetUpgradesMatchingTypes"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetUpgradesMatchingTypes( <span class="arg">UpgradeType/Table</span> types )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a table of all of the UBPs that match a particular UpgradeType. You can pass in a table of multiple UpgradeTypes to get a list UBPs that match ANY of the types listed. </p>
                <p>If you want a blueprint to match a bunch of UpgradeType at the same time (i.e. AND instead of OR) then those types should be listed together in a sub-table. This function can potentially be quite slow as it has to parse every SBP in the game, so be careful about how you use it.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\blueprints.scar] (136) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_Console"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>Console</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="AI_GetDebugAIPlayerID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetDebugAIPlayerID(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get current AI player ID </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (7968) </b></td>
            </tr>
          </table>
        </p><a name="AI_ToggleDebugAIPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ToggleDebugAIPlayer(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set current debug AI player to the next AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (7953) </b></td>
            </tr>
          </table>
        </p><a name="Cursor_Distance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cursor_Distance(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle cursor position distance drawring </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5969) </b></td>
            </tr>
          </table>
        </p><a name="Cursor_GetClearWeaponShotHistory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cursor_GetClearWeaponShotHistory(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle clearing of cursor over entity weapon shot history debug display </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8225) </b></td>
            </tr>
          </table>
        </p><a name="Cursor_GetDrawWeaponShotHistory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cursor_GetDrawWeaponShotHistory(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle cursor over entity weapon shot history debug display </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6027) </b></td>
            </tr>
          </table>
        </p><a name="Cursor_Info"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cursor_Info(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle cursor position information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5963) </b></td>
            </tr>
          </table>
        </p><a name="Cursor_WeaponInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cursor_WeaponInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle cursor over entity weapon information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6015) </b></td>
            </tr>
          </table>
        </p><a name="Cursor_WeaponRanges"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cursor_WeaponRanges(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle cursor over entity weapon range information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6021) </b></td>
            </tr>
          </table>
        </p><a name="Debug_IgnoreMouseOverCheck"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Debug_IgnoreMouseOverCheck(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggles on or off under mouse check. If ignoring mouse check, all entities will have the enabled debug info displayed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5916) </b></td>
            </tr>
          </table>
        </p><a name="Debug_ToggleControlAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Debug_ToggleControlAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Allows the local player to issue commands to any unit regardless of ownership. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8195) </b></td>
            </tr>
          </table>
        </p><a name="Debug_ToggleDebugTest"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Debug_ToggleDebugTest(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggles on or off all debug test activity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5909) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_CheckBoolOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_CheckBoolOverride( <span class="arg">String</span> setting )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for a boolean setting override. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (81) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_CheckFloatOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_CheckFloatOverride( <span class="arg">String</span> setting )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for a floating-point setting override. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (72) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_CheckIntOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_CheckIntOverride( <span class="arg">String</span> setting )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for an integer setting override. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (90) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_CheckMinimumDriverVersion"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_CheckMinimumDriverVersion(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Output the installed display adapter driver version, the required version for the current adapter, and whether or not the installed version is equal to or greater than the required one. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (55) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_CheckUint16Override"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_CheckUint16Override( <span class="arg">String</span> setting )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for a uint16 setting override. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (108) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_CheckUint8Override"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_CheckUint8Override( <span class="arg">String</span> setting )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for a uint8 setting override. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (99) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_CheckUintOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_CheckUintOverride( <span class="arg">String</span> setting )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for a uint32 setting override. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (117) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_GetAdapterFromID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_GetAdapterFromID( <span class="arg">String</span> vendor, <span class="arg">String</span> device, <span class="arg">String</span> subsystem, <span class="arg">String</span> revision )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for information about a specified adapter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (151) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_GetAdapterID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_GetAdapterID(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Output basic information about the current display adapter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (15) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_GetAdapterMinimumDriverVersion"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_GetAdapterMinimumDriverVersion( <span class="arg">String</span> vendor, <span class="arg">String</span> device, <span class="arg">String</span> subsystem, <span class="arg">String</span> revision )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for the minimum required driver version for a specified adapter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (199) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_GetCurrentAdapterPerformanceClass"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_GetCurrentAdapterPerformanceClass(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for the performance class of the currently-installed display adapter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (137) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_GetDriverInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_GetDriverInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Output basic information about the currently installed display adapter driver. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (45) </b></td>
            </tr>
          </table>
        </p><a name="DisplayAdapterDatabase_GetPerformanceClass"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DisplayAdapterDatabase_GetPerformanceClass( <span class="arg">Real</span> relativePerformance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query the display adapter database for the performance class given a relative performance percentage. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDisplayAdapterDatabase.cpp] (127) </b></td>
            </tr>
          </table>
        </p><a name="FOW_Blockers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_Blockers(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle blockers info </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5957) </b></td>
            </tr>
          </table>
        </p><a name="fx_refresh"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 fx_refresh(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Force effects to be recreated. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibFX.cpp] (67) </b></td>
            </tr>
          </table>
        </p><a name="GetPhysicsDebug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 GetPhysicsDebug(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get physics debug toggle value </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6141) </b></td>
            </tr>
          </table>
        </p><a name="GetPhysicsRaycastAsCapsuleDebug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 GetPhysicsRaycastAsCapsuleDebug(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get physics debug toggle value </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6173) </b></td>
            </tr>
          </table>
        </p><a name="Hold_Info"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Hold_Info(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle hold info </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6086) </b></td>
            </tr>
          </table>
        </p><a name="LCWatcher_Activate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LCWatcher_Activate( <span class="arg">Boolean</span> on )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>turns on the watcher and displays the lists if any </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibLuaConfigWatcher.cpp] (12) </b></td>
            </tr>
          </table>
        </p><a name="LCWatcher_AddFilter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LCWatcher_AddFilter( <span class="arg">String</span> stateName, <span class="arg">String</span> filter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Needs the proper luaConfig id, and looks through that list to add the filter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibLuaConfigWatcher.cpp] (22) </b></td>
            </tr>
          </table>
        </p><a name="LCWatcher_FilterExists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LCWatcher_FilterExists( <span class="arg">String</span> stateName, <span class="arg">String</span> filter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Needs the proper luaConfig id, returns true if filter exists. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibLuaConfigWatcher.cpp] (52) </b></td>
            </tr>
          </table>
        </p><a name="LCWatcher_IsActive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LCWatcher_IsActive(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if LCWatcher is active. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibLuaConfigWatcher.cpp] (63) </b></td>
            </tr>
          </table>
        </p><a name="LCWatcher_RemoveFilter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LCWatcher_RemoveFilter( <span class="arg">String</span> stateName, <span class="arg">String</span> filter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Needs the proper luaConfig id, removes filter added by LCWatch_AddFilter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibLuaConfigWatcher.cpp] (43) </b></td>
            </tr>
          </table>
        </p><a name="LCWatcher_SelectState"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LCWatcher_SelectState( <span class="arg">String</span> state )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Selects a LuaConfig state to watch.  Returns true if state is registered and false if it has not. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibLuaConfigWatcher.cpp] (31) </b></td>
            </tr>
          </table>
        </p><a name="LogPrintTo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LogPrintTo( <span class="arg">String</span> file, <span class="arg">String</span> txt )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Print text to specified file </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\console\ConsoleLogging.cpp] (214) </b></td>
            </tr>
          </table>
        </p><a name="MemoryStats_Disable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MemoryStats_Disable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disable collecting and displaying render stats </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemoryStats.cpp] (27) </b></td>
            </tr>
          </table>
        </p><a name="MemoryStats_Enable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MemoryStats_Enable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable collecting and displaying render stats </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemoryStats.cpp] (21) </b></td>
            </tr>
          </table>
        </p><a name="MemoryStats_Toggle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MemoryStats_Toggle(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle collecting and displaying render stats </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemoryStats.cpp] (15) </b></td>
            </tr>
          </table>
        </p><a name="Path_ClearCells"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Path_ClearCells(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear entire draw pathfinding cell list </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5946) </b></td>
            </tr>
          </table>
        </p><a name="Path_DrawImpass"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Path_DrawImpass(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw pathfinding impassable map </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8374) </b></td>
            </tr>
          </table>
        </p><a name="Path_DrawPath"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Path_DrawPath(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle pathfinding entity path </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5928) </b></td>
            </tr>
          </table>
        </p><a name="Path_DrawPathMap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Path_DrawPathMap( <span class="arg">Boolean</span> onoff )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw pathfinding grid overlay </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8365) </b></td>
            </tr>
          </table>
        </p><a name="Path_ShowCell"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Path_ShowCell( <span class="arg">Integer</span> x, <span class="arg">Integer</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add pathfinding cell to draw cell list </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5934) </b></td>
            </tr>
          </table>
        </p><a name="Path_ShowPreciseCell"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Path_ShowPreciseCell( <span class="arg">Integer</span> x, <span class="arg">Integer</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add pathfinding precise cell to draw cell list </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5940) </b></td>
            </tr>
          </table>
        </p><a name="Path_ToggleCollisionCircle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Path_ToggleCollisionCircle(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle pathfinding collision circles </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (5922) </b></td>
            </tr>
          </table>
        </p><a name="PBG_ReloadMouseOverEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PBG_ReloadMouseOverEntity(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reload mouse over entity's entire list of extension info's </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6417) </b></td>
            </tr>
          </table>
        </p><a name="PBG_ReloadMouseOverSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PBG_ReloadMouseOverSquad(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reload mouse over squad's entire list of extension info's </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6429) </b></td>
            </tr>
          </table>
        </p><a name="PBG_ReloadMouseOverWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PBG_ReloadMouseOverWeapon(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reload mouse over squad's weapon property bag </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6384) </b></td>
            </tr>
          </table>
        </p><a name="RenderStats_Disable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RenderStats_Disable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disable collecting and displaying render stats </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibRenderStats.cpp] (28) </b></td>
            </tr>
          </table>
        </p><a name="RenderStats_DumpToLogFile"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RenderStats_DumpToLogFile(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Output the render stats to a CSV LogFile for viewing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibRenderStats.cpp] (81) </b></td>
            </tr>
          </table>
        </p><a name="RenderStats_Enable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RenderStats_Enable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable collecting and displaying render stats </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibRenderStats.cpp] (21) </b></td>
            </tr>
          </table>
        </p><a name="RenderStats_SetUpdateTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RenderStats_SetUpdateTime( <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the render stats refresh update interval (seconds) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibRenderStats.cpp] (46) </b></td>
            </tr>
          </table>
        </p><a name="RenderStats_SortInstances"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RenderStats_SortInstances(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sort render stats by model instances (descending sort) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibRenderStats.cpp] (53) </b></td>
            </tr>
          </table>
        </p><a name="RenderStats_SortRenderCalls"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RenderStats_SortRenderCalls(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sort render stats by render calls (descending sort) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibRenderStats.cpp] (60) </b></td>
            </tr>
          </table>
        </p><a name="RenderStats_SortShaderChanges"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RenderStats_SortShaderChanges(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sort render stats by shader changes (descending sort) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibRenderStats.cpp] (67) </b></td>
            </tr>
          </table>
        </p><a name="RenderStats_SortTris"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RenderStats_SortTris(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sort render stats by mesh triangles (descending sort) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibRenderStats.cpp] (74) </b></td>
            </tr>
          </table>
        </p><a name="RenderStats_Toggle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RenderStats_Toggle(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle collecting and displaying render stats </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibRenderStats.cpp] (14) </b></td>
            </tr>
          </table>
        </p><a name="Scar_DrawMarkers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_DrawMarkers(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle drawing debug info for scar markers </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6314) </b></td>
            </tr>
          </table>
        </p><a name="Scar_GroupInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_GroupInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle mouse over debug info on which group the entity belongs to </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6302) </b></td>
            </tr>
          </table>
        </p><a name="Scar_GroupList"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_GroupList(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle a list of all egroups and sgroups in the game </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6308) </b></td>
            </tr>
          </table>
        </p><a name="ShaderStats_Disable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ShaderStats_Disable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disable collecting and displaying render stats </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibShaderStats.cpp] (29) </b></td>
            </tr>
          </table>
        </p><a name="ShaderStats_DumpToLogFile"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ShaderStats_DumpToLogFile(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Output the render stats to a CSV LogFile for viewing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibShaderStats.cpp] (57) </b></td>
            </tr>
          </table>
        </p><a name="ShaderStats_Enable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ShaderStats_Enable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable collecting and displaying render stats </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibShaderStats.cpp] (22) </b></td>
            </tr>
          </table>
        </p><a name="ShaderStats_SetUpdateTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ShaderStats_SetUpdateTime( <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the render stats refresh update interval (seconds) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibShaderStats.cpp] (36) </b></td>
            </tr>
          </table>
        </p><a name="ShaderStats_SortPixelCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ShaderStats_SortPixelCount(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sort render stats by model instances (descending sort) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibShaderStats.cpp] (43) </b></td>
            </tr>
          </table>
        </p><a name="ShaderStats_SortShaderNames"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ShaderStats_SortShaderNames(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sort render stats by model instances (descending sort) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibShaderStats.cpp] (50) </b></td>
            </tr>
          </table>
        </p><a name="ShaderStats_Toggle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ShaderStats_Toggle(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle collecting and displaying render stats </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibShaderStats.cpp] (15) </b></td>
            </tr>
          </table>
        </p><a name="Sim_CheckRequirements"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_CheckRequirements(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle check requirements information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6279) </b></td>
            </tr>
          </table>
        </p><a name="Sim_DebugDrawSimTick"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_DebugDrawSimTick(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw the current sim tick </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6108) </b></td>
            </tr>
          </table>
        </p><a name="Sim_DrawAttention"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_DrawAttention(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle drawing debug info for the attention system </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6335) </b></td>
            </tr>
          </table>
        </p><a name="Sim_DrawEntityCrusherOBB"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_DrawEntityCrusherOBB(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle the crush OBB </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6341) </b></td>
            </tr>
          </table>
        </p><a name="Sim_DrawEntityExtensions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_DrawEntityExtensions(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle entity information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6224) </b></td>
            </tr>
          </table>
        </p><a name="Sim_DrawEntityStateMove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_DrawEntityStateMove(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle entity move state debug drawing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8248) </b></td>
            </tr>
          </table>
        </p><a name="Sim_EntityAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_EntityAbility(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle a list of all active abilities on the entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6244) </b></td>
            </tr>
          </table>
        </p><a name="Sim_EntityDelay"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_EntityDelay(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw the per-entity decision delay if there is one </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6102) </b></td>
            </tr>
          </table>
        </p><a name="Sim_EntityDrawPosture"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_EntityDrawPosture(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle posture info text for selected entities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6273) </b></td>
            </tr>
          </table>
        </p><a name="Sim_EntityHistory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_EntityHistory(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle a list of all active modifiers on the entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6290) </b></td>
            </tr>
          </table>
        </p><a name="Sim_EntityInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_EntityInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle entity information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6230) </b></td>
            </tr>
          </table>
        </p><a name="Sim_EntityModifier"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_EntityModifier(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle a list of all active modifiers on the entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6236) </b></td>
            </tr>
          </table>
        </p><a name="Sim_EntityOBB"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_EntityOBB(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw the OBBs for the entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6196) </b></td>
            </tr>
          </table>
        </p><a name="Sim_EntityOOCTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_EntityOOCTarget(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw OOC target debug info </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6114) </b></td>
            </tr>
          </table>
        </p><a name="Sim_EntityUpgrades"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_EntityUpgrades(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle a list of all completed upgrades on the entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6250) </b></td>
            </tr>
          </table>
        </p><a name="Sim_PlayerInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_PlayerInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle a list of all active player abilities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6261) </b></td>
            </tr>
          </table>
        </p><a name="Sim_PlayerModifiers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_PlayerModifiers(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle a list of all active player modifiers </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6267) </b></td>
            </tr>
          </table>
        </p><a name="Sim_ShotBlockers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_ShotBlockers(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle simulation boxes for shot blockers only </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6190) </b></td>
            </tr>
          </table>
        </p><a name="Sim_SimBox"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_SimBox(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle simulation boxes for entities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6120) </b></td>
            </tr>
          </table>
        </p><a name="Sim_SquadHistory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_SquadHistory(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle a list of all active modifiers on the entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6296) </b></td>
            </tr>
          </table>
        </p><a name="Sim_SquadInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_SquadInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle squad information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6212) </b></td>
            </tr>
          </table>
        </p><a name="Sim_SquadSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_SquadSuppression(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle squad suppression information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6218) </b></td>
            </tr>
          </table>
        </p><a name="Terrain_CreateSplat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Terrain_CreateSplat( <span class="arg">String</span> _name, <span class="arg">Real</span> xpos, <span class="arg">Real</span> zpos, <span class="arg">Real</span> scale )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a splat on the terrain </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8356) </b></td>
            </tr>
          </table>
        </p><a name="Terrain_DrawGrid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Terrain_DrawGrid( <span class="arg">Integer</span> increment )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw a grid on the terrain with tunable increment </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8344) </b></td>
            </tr>
          </table>
        </p><a name="Terrain_DrawGridLines"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Terrain_DrawGridLines( <span class="arg">Integer</span> spacing )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw lines on a grid on the terrain with tunable spacing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8350) </b></td>
            </tr>
          </table>
        </p><a name="Terrain_DrawMaterialMap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Terrain_DrawMaterialMap( <span class="arg">Boolean</span> onoff )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw terrain material map cells </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8335) </b></td>
            </tr>
          </table>
        </p><a name="TimerAdd"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TimerAdd( <span class="arg">String</span> command, <span class="arg">Real</span> freqInSec )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a timer to be triggered every 'freqInSec'. the timer will then run the passed-in command </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\console\ConsoleLogging.cpp] (106) </b></td>
            </tr>
          </table>
        </p><a name="TimerAddFrame"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TimerAddFrame( <span class="arg">String</span> command )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a timer to be triggered every frame the timer will then run the passed-in command </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\console\ConsoleLogging.cpp] (248) </b></td>
            </tr>
          </table>
        </p><a name="TimerAddOnce"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TimerAddOnce( <span class="arg">String</span> command, <span class="arg">Real</span> timeInSec )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a timer to be triggered once after 'freqInSec' has elapsed. the timer will then run the passed-in command </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\console\ConsoleLogging.cpp] (113) </b></td>
            </tr>
          </table>
        </p><a name="TimerDel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TimerDel( <span class="arg">String</span> command )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove specified timer </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\console\ConsoleLogging.cpp] (119) </b></td>
            </tr>
          </table>
        </p><a name="Toggle_Scanning_Info"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Toggle_Scanning_Info(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggles the scanning info from the ScanForTarget track for the debug entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8551) </b></td>
            </tr>
          </table>
        </p><a name="TogglePhysicsDebug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TogglePhysicsDebug( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle physics debug drawing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6126) </b></td>
            </tr>
          </table>
        </p><a name="TogglePhysicsRaycastAsCapsuleDebug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TogglePhysicsRaycastAsCapsuleDebug( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle physics debug drawing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6158) </b></td>
            </tr>
          </table>
        </p><a name="Vaulting_DrawDebug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Vaulting_DrawDebug(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggles on or off vaulting debug drawing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8203) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_AllWeaponAttackGround"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_AllWeaponAttackGround(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle enabling all weapon gound attack </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8260) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_AnimInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_AnimInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon animation information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6062) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_AttackRadii"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_AttackRadii(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon attack radii around the entities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6074) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_Firing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_Firing(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon firing lines </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6038) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_HardPointInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_HardPointInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon hard point information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6068) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_Info"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_Info(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon state and calculation information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8242) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_PrintBestTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_PrintBestTarget(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon best target result </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6080) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_PriorityInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_PriorityInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon priority information (must TAG entity you want info about) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8254) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_ProjectileDetonateTimer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_ProjectileDetonateTimer(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon projectile denotation timer </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6056) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_ProjectileInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_ProjectileInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon projectile information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6050) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_ScatterInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_ScatterInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon scatter target information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (6044) </b></td>
            </tr>
          </table>
        </p><a name="Weapon_Tracking"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Weapon_Tracking(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle weapon tracking lines and maximum angles </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\debug\DebugTest.cpp] (8236) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_DebugRender"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>DebugRender</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="dr_drawline"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_drawline( <span class="arg">Position</span> pos0, <span class="arg">Position</span> pos1, <span class="arg">Integer</span> r, <span class="arg">Integer</span> g, <span class="arg">Integer</span> b, <span class="arg">StackVar</span> svar )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw line. If you don't pass in a name, TerrainLine is used. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibTerrainDebug.cpp] (47) </b></td>
            </tr>
          </table>
        </p><a name="dr_terraincircle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_terraincircle( <span class="arg">Position</span> pos, <span class="arg">Real</span> radius, <span class="arg">Real</span> r, <span class="arg">Real</span> g, <span class="arg">Real</span> b, <span class="arg">Integer</span> divs, <span class="arg">String</span> frame )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw circle on terrain. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibTerrainDebug.cpp] (19) </b></td>
            </tr>
          </table>
        </p><a name="dr_terraincirclewithlifetime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_terraincirclewithlifetime( <span class="arg">Position</span> pos, <span class="arg">Real</span> radius, <span class="arg">Real</span> r, <span class="arg">Real</span> g, <span class="arg">Real</span> b, <span class="arg">Integer</span> divs, <span class="arg">String</span> frame, <span class="arg">Real</span> lifetime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw circle on terrain with lifetime. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibTerrainDebug.cpp] (33) </b></td>
            </tr>
          </table>
        </p><a name="dr_terrainrect"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_terrainrect( <span class="arg">Position</span> pos, <span class="arg">Real</span> w, <span class="arg">Real</span> h, <span class="arg">Real</span> r, <span class="arg">Real</span> g, <span class="arg">Real</span> b, <span class="arg">Real</span> rads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw rectangle on terrian. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibTerrainDebug.cpp] (40) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_Game"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>Game</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="getgametype"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 getgametype(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the type of game we are playing ( GT_SP = 0, GT_MP = 1, GT_Skirmish = 2) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibScenarioGameObject.cpp] (76) </b></td>
            </tr>
          </table>
        </p><a name="getlocalplayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 getlocalplayer(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the local player index </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibScenarioGameObject.cpp] (46) </b></td>
            </tr>
          </table>
        </p><a name="getmapname"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 getmapname(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the scenario name (shortname version eg. "2P Semois") </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibScenarioGameObject.cpp] (93) </b></td>
            </tr>
          </table>
        </p><a name="getsimrate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 getsimrate(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current simulation rate. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibScenarioGameObject.cpp] (29) </b></td>
            </tr>
          </table>
        </p><a name="Scar_DoFile"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_DoFile( <span class="arg">String</span> scriptName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Run the specified scar script file </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibScenarioGameObject.cpp] (60) </b></td>
            </tr>
          </table>
        </p><a name="Scar_DoString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_DoString( <span class="arg">String</span> str )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Run the specified scar command </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibScenarioGameObject.cpp] (66) </b></td>
            </tr>
          </table>
        </p><a name="Scar_Reload"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_Reload(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reload all scar scripts </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibScenarioGameObject.cpp] (54) </b></td>
            </tr>
          </table>
        </p><a name="setsimpause"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 setsimpause(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pause the simulation. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibScenarioGameObject.cpp] (35) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_Other"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>Other</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="__Internal_Game_Autosave"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 __Internal_Game_Autosave(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DO NOT call this function directly, use Event_Save(STT_Auto) instead </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (162) </b></td>
            </tr>
          </table>
        </p><a name="__Internal_Game_Quicksave"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 __Internal_Game_Quicksave(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DO NOT call this function directly, use Event_Save(STT_Quick) instead </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (145) </b></td>
            </tr>
          </table>
        </p><a name="__Internal_Game_SaveGame"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 __Internal_Game_SaveGame(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DO NOT call this function directly, use Event_SaveWithName(STT_Standard) instead </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (185) </b></td>
            </tr>
          </table>
        </p><a name="__Internal_Game_SaveToFileDev"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 __Internal_Game_SaveToFileDev(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DO NOT call this function directly, use Event_SaveWithName(STT_Dev) instead </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (231) </b></td>
            </tr>
          </table>
        </p><a name="0"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 0( <span class="arg">Void</span> AIPlayer_SetMarkerToUpdateCachedPathToHQ(Player, <span class="arg">MarkerID</span> marker, <span class="arg">Real</span> pathCheckIntervalSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Setup a cached path that periodically updates its path between specified marker and self HQ. This allows the AI to detect whenever pathability is changed to this marker (e.g. being walled off). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1130) </b></td>
            </tr>
          </table>
        </p><a name="0"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 0( <span class="arg">Void</span> AIPlayer_SetMarkerToUpdateCachedPathToPosition(Player, <span class="arg">MarkerID</span> toMarker, <span class="arg">Position</span> fromPosition, <span class="arg">Real</span> pathCheckIntervalSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Setup a cached path that periodically updates its path between specified marker and position. This allows the AI to detect whenever pathability is changed to between the marker and position (e.g. being walled off). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1165) </b></td>
            </tr>
          </table>
        </p><a name="ActionMarker_SetVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ActionMarker_SetVisible( <span class="arg">String</span> name, <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set whether or not an action marker is visible. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (356) </b></td>
            </tr>
          </table>
        </p><a name="ActionMarker_StartAction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ActionMarker_StartAction( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Start the given action marker's FX. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (340) </b></td>
            </tr>
          </table>
        </p><a name="ActionMarker_StopAction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ActionMarker_StopAction( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stop the given action marker's FX. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (348) </b></td>
            </tr>
          </table>
        </p><a name="AI_AddPrefab"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_AddPrefab( <span class="arg">PlayerID</span> player, <span class="arg">String</span> name, <span class="arg">String</span> behaviourName, <span class="arg">Real</span> radius, <span class="arg">Integer</span> minDifficulty, <span class="arg">Integer</span> maxDifficulty, <span class="arg">Boolean</span> canReassign, <span class="arg">Boolean</span> active )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a prefab to the AIPrefab system. Target must be set up in a follow up call with returned ID </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (29) </b></td>
            </tr>
          </table>
        </p><a name="AI_CacheCombatFeatureTrainingData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CacheCombatFeatureTrainingData( <span class="arg">Integer</span> conflictID, <span class="arg">PlayerID</span> playerA, <span class="arg">PlayerID</span> playerB )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Log the combat result features of all squads owned by a player for a given conflict </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1348) </b></td>
            </tr>
          </table>
        </p><a name="AI_CalculateCombatFitnessEstimate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CalculateCombatFitnessEstimate( <span class="arg">SGroupID</span> teamASquads, <span class="arg">EGroupID</span> teamAEntities, <span class="arg">PropertyBagGroup</span> teamAPBGs, <span class="arg">SGroupID</span> teamBSquads, <span class="arg">EGroupID</span> teamBEntities, <span class="arg">PropertyBagGroup</span> teamBPBGs, <span class="arg">PlayerID</span> aiPlayerA, <span class="arg">PlayerID</span> playerB, <span class="arg">Boolean</span> playerAIsAttacker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get combat fitness estimate. Return value will be between 1.0 and 0.0. 1.0 means teamA wins outright, 0.0 means teamB wins outright. </p>
                <p>Buildings will be filtered from attacking team</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1626) </b></td>
            </tr>
          </table>
        </p><a name="AI_CanEntityCauseSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CanEntityCauseSuppression( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if this entity can cause suppression </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2140) </b></td>
            </tr>
          </table>
        </p><a name="AI_CanLoadSquadAndAttackCurrentTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CanLoadSquadAndAttackCurrentTarget( <span class="arg">EntityID</span> entity, <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> bCheckSquadState, <span class="arg">Boolean</span> bOverload )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the entity can load squad and shoot its target after loading (This function should only be called by AI) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2153) </b></td>
            </tr>
          </table>
        </p><a name="AI_CanSquadCauseSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CanSquadCauseSuppression( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if this squad can cause suppression </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2146) </b></td>
            </tr>
          </table>
        </p><a name="AI_CanSquadDecrew"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CanSquadDecrew( <span class="arg">SquadID</span> pDriverSquad, <span class="arg">EntityID</span> pDecrewTargetEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if this squad can decrew the entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2179) </b></td>
            </tr>
          </table>
        </p><a name="AI_ClearCombatTrainingCacheEntry"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ClearCombatTrainingCacheEntry( <span class="arg">Integer</span> conflictID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear a combat entry from the cache, typically done instead of logging it </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1342) </b></td>
            </tr>
          </table>
        </p><a name="AI_ClearPrefabAIIntents"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ClearPrefabAIIntents( <span class="arg">UniqueID</span> prefabId, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear all intents associated with this AIPrefab </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (237) </b></td>
            </tr>
          </table>
        </p><a name="AI_CombatFitnessCharacterizesSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CombatFitnessCharacterizesSquad( <span class="arg">PlayerID</span> player, <span class="arg">PropertyBagGroup</span> squadPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the configured input feature calculators characterizes this squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1670) </b></td>
            </tr>
          </table>
        </p><a name="AI_CombatFitnessGetDefensiveUpgradesForStructureArchetypeMember"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CombatFitnessGetDefensiveUpgradesForStructureArchetypeMember( <span class="arg">PropertyBagGroup</span> memberPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the defensive upgrades for this structure archetype member </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2106) </b></td>
            </tr>
          </table>
        </p><a name="AI_CombatFitnessGetHealerPBGs"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CombatFitnessGetHealerPBGs(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns healer feature option pbgs </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2001) </b></td>
            </tr>
          </table>
        </p><a name="AI_CombatFitnessGetOffensiveUpgradesForStructureArchetypeMember"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CombatFitnessGetOffensiveUpgradesForStructureArchetypeMember( <span class="arg">PropertyBagGroup</span> memberPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the offensive upgrades for this structure archetype member </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2117) </b></td>
            </tr>
          </table>
        </p><a name="AI_CombatFitnessGetPlayerUpgrades"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CombatFitnessGetPlayerUpgrades(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the player upgrades configured in the player upgrade input calculator </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2083) </b></td>
            </tr>
          </table>
        </p><a name="AI_CombatFitnessGetSquadArchetypeNames"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CombatFitnessGetSquadArchetypeNames(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns squad pbgs for all squad archetypes </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2023) </b></td>
            </tr>
          </table>
        </p><a name="AI_CombatFitnessGetSquadArchetypePBGs"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CombatFitnessGetSquadArchetypePBGs( <span class="arg">String</span> archtypeNameStr )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns squad pbgs for a given archetype (assuming that archetype is composed of squad pbgs) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1994) </b></td>
            </tr>
          </table>
        </p><a name="AI_CombatFitnessGetStructureArchetypePBGs"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CombatFitnessGetStructureArchetypePBGs( <span class="arg">String</span> archtypeNameStr )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns entity pbgs for a given archetype (assuming that archetype is composed of entity pbgs) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1987) </b></td>
            </tr>
          </table>
        </p><a name="AI_CreateAICombatFitnessLogs"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CreateAICombatFitnessLogs(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create the combat feature logs in the game log directory </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1331) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugLogGroupCombatRatings"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugLogGroupCombatRatings( <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> egroup, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prints detailed rating debug info in the AILog for all squads and entities in the groups </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1960) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugLogPBGCombatRatings"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugLogPBGCombatRatings( <span class="arg">PropertyBagGroup</span> pbgList, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prints detailed rating debug info in the AILog for all the PBGs in the list </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1933) </b></td>
            </tr>
          </table>
        </p><a name="AI_FindClosestOpenPositionForAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_FindClosestOpenPositionForAbility( <span class="arg">ConstTargetHandle</span> caster, <span class="arg">PropertyBagGroup</span> pAbilityPBG, <span class="arg">Position</span> posIn )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the closest open position from a given position for a given ability blueprint </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1523) </b></td>
            </tr>
          </table>
        </p><a name="AI_FindClosestOpenPositionForAbilityWithinRange"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_FindClosestOpenPositionForAbilityWithinRange( <span class="arg">ConstTargetHandle</span> caster, <span class="arg">PropertyBagGroup</span> pAbilityPBG, <span class="arg">Position</span> posIn, <span class="arg">Integer</span> minDist, <span class="arg">Integer</span> maxDist )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the closest open position from a given position and ability blueprint, taking into account a min </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1492) </b></td>
            </tr>
          </table>
        </p><a name="AI_FindClosestOpenPositionForStructure"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_FindClosestOpenPositionForStructure( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">PropertyBagGroup</span> pEntityPBG, <span class="arg">Position</span> posIn )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the closest open position from a given position for a given Entity blueprint </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1452) </b></td>
            </tr>
          </table>
        </p><a name="AI_GetAbilityMaxNumTargets"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetAbilityMaxNumTargets( <span class="arg">ScarAbilityPBG</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the maximum number of targets for the given ability, or -1 if the ability is invalid. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2294) </b></td>
            </tr>
          </table>
        </p><a name="AI_GetAnySquadCombatTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetAnySquadCombatTarget( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current squad target for the given squad (null if no target, or target is non-squad entity) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2127) </b></td>
            </tr>
          </table>
        </p><a name="AI_LogCombatTrainingData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_LogCombatTrainingData( <span class="arg">Integer</span> conflictID, <span class="arg">PlayerID</span> playerA, <span class="arg">PlayerID</span> playerB, <span class="arg">Real</span> score )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Log the combat input features of all squads owned by two players for a given conflict </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1363) </b></td>
            </tr>
          </table>
        </p><a name="AI_PushPrefabAIIntent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_PushPrefabAIIntent( <span class="arg">UniqueID</span> prefabId, <span class="arg">PlayerID</span> player, <span class="arg">String</span> aiPrefabIntentBagName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Push an ai intent to an existing AIPrefab. Requires an ai_prefab_intent pbg name </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (220) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetPrefabActive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetPrefabActive( <span class="arg">UniqueID</span> prefabId, <span class="arg">PlayerID</span> player, <span class="arg">Boolean</span> active )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the active status of an existing AIPrefab </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (67) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetPrefabCanReassign"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetPrefabCanReassign( <span class="arg">UniqueID</span> prefabId, <span class="arg">PlayerID</span> player, <span class="arg">Boolean</span> canReassign )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the can_reassign state of an existing AIPrefab </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (87) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetPrefabSelection_SGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetPrefabSelection_SGroup( <span class="arg">UniqueID</span> prefabId, <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> squads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the squad selection of an existing AIPrefab by SGROUP </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (203) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetPrefabTarget_EGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetPrefabTarget_EGroup( <span class="arg">UniqueID</span> prefabId, <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> entities )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the target of an existing AIPrefab by EGROUP </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (127) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetPrefabTarget_Position"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetPrefabTarget_Position( <span class="arg">UniqueID</span> prefabId, <span class="arg">PlayerID</span> player, <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the target of an existing AIPrefab by Position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (147) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetPrefabTarget_SGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetPrefabTarget_SGroup( <span class="arg">UniqueID</span> prefabId, <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> squads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the target of an existing AIPrefab by SGROUP </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (107) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetPrefabTarget_Waypoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetPrefabTarget_Waypoints( <span class="arg">UniqueID</span> prefabId, <span class="arg">PlayerID</span> player, <span class="arg">String</span> waypointName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the target of an existing AIPrefab via waypoints </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIPrefab.cpp] (167) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_CachedPathCrossesEnemyTerritory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_CachedPathCrossesEnemyTerritory( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Integer</span> requestingID, <span class="arg">Real</span> minDistToEnemyTerritory, <span class="arg">Boolean</span> unused )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if the cached path crosses known enemy territory </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1007) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_CanSeeEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_CanSeeEntity( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">EntityID</span> canSee )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test if player can see entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2600) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_ClearCachedPath"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_ClearCachedPath( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> requestingID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Delete the cached path with this ID, please remember to do this </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1106) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_EnemyTerritoryDetected"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_EnemyTerritoryDetected( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns true if enemy territory has been detected </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (582) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_FindClosestSiegeTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_FindClosestSiegeTarget( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> eGroup, <span class="arg">Integer</span> minSections, <span class="arg">Boolean</span> unbreached, <span class="arg">Position</span> refPosition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests to see if any entity in the group is part of a wall that matches the supplied conditions eGroup contains list of entities to test, minSections is minimum number of connected wall sections, unbreached means all sections must be unbroken.  Returns closest entity to refPosition </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1229) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_FindClumpContainingPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_FindClumpContainingPosition( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Position</span> pos, <span class="arg">Integer</span> targetFilterFlags )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find a clump containing the given position, or return -1 if there isn't one. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (682) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetAnchorPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetAnchorPosition( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the anchor build position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2438) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetBestClumpForPositionIdx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetBestClumpForPositionIdx( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Position</span> position, <span class="arg">PropertyBagGroup</span> pAbilityPBG, <span class="arg">Real</span> minRange, <span class="arg">Real</span> maxRange, <span class="arg">Integer</span> targetFilterFlags, <span class="arg">Integer</span> minNumSquads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns a 0-based index of the best clump of enemy squads within the given tolerance to the position passed in </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (422) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetBestClumpForSquadIdx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetBestClumpForSquadIdx( <span class="arg">PlayerID</span> pPlayer, <span class="arg">SquadID</span> pSquad, <span class="arg">PropertyBagGroup</span> pAbilityPBG, <span class="arg">Real</span> minRange, <span class="arg">Real</span> maxRange, <span class="arg">Integer</span> targetFilterFlags, <span class="arg">Integer</span> minNumSquads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns a 0-based index of the best clump of enemy squads within the given tolerance to the AI squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (387) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetBestClumpIdx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetBestClumpIdx( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Real</span> minRange, <span class="arg">Real</span> maxRange, <span class="arg">Real</span> clumpSelectionGlobalBestMinRatio, <span class="arg">Integer</span> targetFilterFlags, <span class="arg">Integer</span> minNumSquads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns a 0-based index of the best clump of allied or enemy squads within the given tolerance to the AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (597) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetBestClumpIdxForAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetBestClumpIdxForAbility( <span class="arg">PlayerID</span> pPlayer, <span class="arg">PropertyBagGroup</span> pAbilityPBG, <span class="arg">Real</span> minRange, <span class="arg">Real</span> maxRange, <span class="arg">Real</span> clumpSelectionGlobalBestMinRatio, <span class="arg">Integer</span> targetFilterFlags, <span class="arg">Integer</span> minNumSquads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns a 0-based index of the best clump of allied or enemy squads within the given tolerance to the AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (531) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetBestOwnedClumpIdx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetBestOwnedClumpIdx( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Real</span> minRange, <span class="arg">Real</span> maxRange, <span class="arg">Real</span> clumpSelectionGlobalBestMinRatio, <span class="arg">Integer</span> targetFilterFlags, <span class="arg">Integer</span> minNumSquads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns a 0-based index of the best clump of owned squads within the given tolerance to the AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (622) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetBestOwnedClumpIdxForAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetBestOwnedClumpIdxForAbility( <span class="arg">PlayerID</span> pPlayer, <span class="arg">PropertyBagGroup</span> pAbilityPBG, <span class="arg">Real</span> minRange, <span class="arg">Real</span> maxRange, <span class="arg">Real</span> clumpSelectionGlobalBestMinRatio, <span class="arg">Integer</span> targetFilterFlags, <span class="arg">Integer</span> minNumSquads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns a 0-based index of the best clump of owned squads within the given tolerance to the AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (557) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetCachedPathLength"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetCachedPathLength( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> requestingID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the distance of the path requested with the given ID. &lt; 0 means invalid request. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1036) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetCachedPathPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetCachedPathPoints( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> requestingID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the path points of the calculated path from a previous pathfinding request if the result was successful and the path has at least two points. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1194) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetCapturePoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetCapturePoints( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">StackVar</span> relationshipEnum, <span class="arg">Boolean</span> onlyCanPlaceSecuringStructure, <span class="arg">EGroupID</span> egroupOut )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an EGroup containing all capture points on the map owned by a player with the specified </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2308) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetClumpPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetClumpPosition( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Integer</span> clumpIndex, <span class="arg">Integer</span> targetFilterFlags )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Used for tactics; returns a "special error position" on failure that's nowhere inside the world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (692) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetDistanceToEnemyTerritory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetDistanceToEnemyTerritory( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns how close a position is to enemy territory </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (574) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetDynamicMultiplier"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetDynamicMultiplier( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Key</span> tableName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calculate product of all multipliers in tableName </p>
                <p>The result is intended to be applied to the tuning value corresponding to tableName, for use in the AI military target scoring function Allowable strings for tableName: front_line</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIMilitaryTargetScoring.cpp] (88) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetDynamicUnitTypeMultipliersForEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetDynamicUnitTypeMultipliersForEntity( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Entity&amp;</span> targetEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calculate product of all unit type multipliers that match the entity's unit types </p>
                <p>The result is intended to be used in the AI military target scoring function</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIMilitaryTargetScoring.cpp] (101) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetDynamicUnitTypeMultipliersForSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetDynamicUnitTypeMultipliersForSquad( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Squad&amp;</span> targetSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calculate product of all unit type multipliers that match a unit type of an entity in the squad </p>
                <p>The result is intended to be used in the AI military target scoring function</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIMilitaryTargetScoring.cpp] (115) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetKnownResourceDeposits"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetKnownResourceDeposits( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">String</span> resourceType, <span class="arg">Boolean</span> includeDepleted )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a list of all resource deposit entities seen by the AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2395) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetLocal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetLocal( <span class="arg">Integer</span> playerId )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the local AIPlayer given a PlayerId (1000 and up) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (300) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetLocalFromPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetLocalFromPlayer( <span class="arg">PlayerID</span> pPlayerIn )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the local AIPlayer given a Player pointer </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (308) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetOrCreateHomebase"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetOrCreateHomebase( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Position</span> targetPosition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a homebase at the given position. If one doesn't exist it will be created. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2585) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetOwnedClumpPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetOwnedClumpPosition( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Integer</span> clumpIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Used for tactics; returns a "special error position" on failure that's nowhere inside the world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (711) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetOwnedMilitaryPointEntitiesInRange"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetOwnedMilitaryPointEntitiesInRange( <span class="arg">EntityPBG</span> militaryPointPBG, <span class="arg">Position</span> position, <span class="arg">Number</span> range )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an EGroup listing all military points owned by a player within a certain range of the position passed in that match a certain type </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2353) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetPositionsOfMilitaryPointsWithRelation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetPositionsOfMilitaryPointsWithRelation( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">StackVar</span> relationshipEnum )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns all positions of military points allied with a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (804) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetSquadPBGProductionUtility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetSquadPBGProductionUtility( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">ScarSquadPBG</span> squadPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the utility of building the squad specified by the PBG, or 0 if not found </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2378) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_IsDamagedStructureOnPathToTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_IsDamagedStructureOnPathToTarget( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">SquadID</span> squad, <span class="arg">PropertyBagGroup</span> structurePbg, <span class="arg">Real</span> damagePercentage, <span class="arg">Real</span> searchRadius, <span class="arg">Position</span> targetPosition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Has path to target passes through a netural damaged structure </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1083) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_IsOnAnIsland"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_IsOnAnIsland(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the player is on an island (naval map) or not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (873) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_IsPathProcessed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_IsPathProcessed( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Integer</span> requestedPathRequestID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Has the requested path been processed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1069) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_IsPointThreatened"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_IsPointThreatened( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Position</span> pos, <span class="arg">Boolean</span> filterEnemyBuildings, <span class="arg">Real</span> thresholdFitness )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether or not a point is threatened (from the perspective of the player passed in) </p>
                <p>If enemy builds are not filtered, allied will be. ThresholdFitness is from allied perspective. Typically you want to filter enemy buildings when defending, allied when attacking</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (778) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_PopScoreMultiplier"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_PopScoreMultiplier( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Key</span> tuningValueName, <span class="arg">AIScoreMultiplierID</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove a multiplier previously applied to change the weight of a criteria in target scoring </p>
                <p>The multiplier will be removed from the table for the given tuningValueName. Pass in the multiplier id returned from AIPlayer_PushScoreMultiplier. Allowable strings for tuningValueName: front_line</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIMilitaryTargetScoring.cpp] (41) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_PopUnitTypeScoreMultiplier"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_PopUnitTypeScoreMultiplier( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Key</span> unitTypeName, <span class="arg">AIScoreMultiplierID</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove a multiplier previously applied to a unit type for target scoring </p>
                <p>The multiplier will be removed from the table for the given unitTypeName. Pass in the multiplier id used earlier with AIPlayer_PushScoreMultiplier.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIMilitaryTargetScoring.cpp] (72) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_ProcessedPathSuccessful"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_ProcessedPathSuccessful( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Integer</span> processedPathRequestID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Was the processed path successful? Only supply requestID for a processed path </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1093) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_PushScoreMultiplier"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_PushScoreMultiplier( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Key</span> tuningValueName, <span class="arg">Real</span> multiplier, <span class="arg">AIScoreMultiplierID</span> multiplierID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a multiplier to change the weight of a criteria in target scoring </p>
                <p>The multiplier will be pushed to a table for the given tuningValueName. All multipliers in the table will be multiplied together and applied to the corresponding static tuning value. The  multiplierID passed in can be passed to AIPlayer_PopScoreMultiplier to remove it. Allowable strings for tuningValueName: front_line DefendStructure AttackStructure EnemyClump</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIMilitaryTargetScoring.cpp] (25) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_PushUnitTypeScoreMultiplier"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_PushUnitTypeScoreMultiplier( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Key</span> unitTypeName, <span class="arg">Real</span> multiplier, <span class="arg">AIScoreMultiplierID</span> multiplierID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a multiplier to give weight to a unit type in target scoring </p>
                <p>The multiplier will be pushed to a table for the given unitTypeName. All multipliers in the table will be multiplied together and applied to targets with the corresponding unit type. multiplierId identifies the</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIMilitaryTargetScoring.cpp] (57) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_RemoveEntityHomebase"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_RemoveEntityHomebase( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">EGroupID</span> eGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove entities (buildings) homebase assignment. Entities must be owned by player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2559) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_RemoveSquadHomebase"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_RemoveSquadHomebase( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">SGroupID</span> sGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove squads homebase assignment. Squads must be owned by player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2482) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_RequestHighPath"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_RequestHighPath( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> requestingID, <span class="arg">Position</span> start, <span class="arg">Position</span> end, <span class="arg">PropertyBagGroup</span> pathingEntityPBG, <span class="arg">Boolean</span> requiresPartialPath )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Request a high path between the start and destination, supply a unique ID and the PBG of the largest entity that will be following the path. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (982) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_ResetAbilityPriorityOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_ResetAbilityPriorityOverride( <span class="arg">PlayerID</span> player, <span class="arg">PropertyBagGroup</span> abilityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the ability priority override </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (954) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_ResetAIAbilityPriorityOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_ResetAIAbilityPriorityOverride( <span class="arg">PlayerID</span> player, <span class="arg">PropertyBagGroup</span> aiAbilityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the ability priority override for all the abilities contained in the AIAbilityBag </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1403) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_SetAbilityPriorityOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_SetAbilityPriorityOverride( <span class="arg">PlayerID</span> player, <span class="arg">PropertyBagGroup</span> abilityPBG, <span class="arg">Real</span> priority )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the ability priority override for all the AISquads owned by the player. -1 to disable the ability. NOTE: Encounter overrides have higher priority. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (936) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_SetAIAbilityPriorityOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_SetAIAbilityPriorityOverride( <span class="arg">PlayerID</span> player, <span class="arg">PropertyBagGroup</span> aiAbilityPBG, <span class="arg">Real</span> priority )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the ability priority override for all the abilities contained in the AIAbilityBag for all the AISquads owned by the player. -1 to disable the ability. NOTE: Encounter overrides have higher priority. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1381) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_SetEntityHomebase"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_SetEntityHomebase( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">EGroupID</span> eGroup, <span class="arg">Integer</span> homeBaseID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add entities (buildings) to a homebase. Entities must be owned by player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2509) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_SetSquadHomebase"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_SetSquadHomebase( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">SGroupID</span> sGroup, <span class="arg">Integer</span> homeBaseID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add squads to a homebase. Squads must be owned by player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2446) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_SetStrategicBaseIntention"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_SetStrategicBaseIntention( <span class="arg">PlayerID</span> player, <span class="arg">String</span> intentionName, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the base strategic intention of a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1425) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_ToggleDrawCachedPath"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_ToggleDrawCachedPath( <span class="arg">Integer</span> requestingID, <span class="arg">Boolean</span> on )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle debug draw for the specified path, -1 will draw all of them </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (1119) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_UpdateGathering"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_UpdateGathering( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Updates what the skirmish AI is wanting to gather </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (904) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_UpdateSkirmishAttackAndCaptureTasks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_UpdateSkirmishAttackAndCaptureTasks( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Requests the skirmish AI to update attack encounters and capture tasks </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (911) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_UpdateSkirmishPlayerAbilities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_UpdateSkirmishPlayerAbilities( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Requests the skirmish AI to update player abilities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (929) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_UpdateSkirmishProduction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_UpdateSkirmishProduction( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Updates what the skirmish AI is trying to produce </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (889) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_UpdateSkirmishScoutingTasks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_UpdateSkirmishScoutingTasks( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Requests the skirmish AI to update scout encounters </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (920) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_FindFilteredCoverCompareCurrent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_FindFilteredCoverCompareCurrent( <span class="arg">PlayerID</span> player, <span class="arg">SquadID</span> aiSquad, <span class="arg">Real</span> maxPathDistanceFromGoal, <span class="arg">Boolean</span> compareToCurrentCover )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tries to find cover within a certain radius of a position, traveling a max distance to get there, and possibly comparing against current position's cover. If no cover is found, it returns an invalid position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (272) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetClosestCuttableObstruction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetClosestCuttableObstruction( <span class="arg">SquadID</span> pSquad, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the closest cuttable obstruction entity to the given squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2219) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetClosestObstruction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetClosestObstruction( <span class="arg">SquadID</span> pSquad, <span class="arg">Real</span> radius, <span class="arg">Boolean</span> bFilterAllied )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the closest obstruction entity to the given squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2207) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetClosestObstructionOfType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetClosestObstructionOfType( <span class="arg">SquadID</span> pSquad, <span class="arg">Real</span> radius, <span class="arg">PropertyBagGroup</span> pbgtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the closest obstruction entity to the given squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2213) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetClumpFarBound"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetClumpFarBound( <span class="arg">SquadID</span> aiSquad, <span class="arg">Integer</span> clumpIndex, <span class="arg">Integer</span> targetFilterFlags )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the position on the far side of the given clump relative to the given squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (847) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_GetCurrentFallBackPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_GetCurrentFallBackPosition( <span class="arg">SquadID</span> aiSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns the current fallback position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (232) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_HasBeenAttacked"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_HasBeenAttacked( <span class="arg">SquadID</span> pAISquad, <span class="arg">Integer</span> historyTicks )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if the squad has been attacked within this time </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (213) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_HasFiredWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_HasFiredWeapon( <span class="arg">SquadID</span> pAISquad, <span class="arg">Integer</span> historyTicks )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if the squad has fired its weapon within this time </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (203) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_HasPathWithinDistance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_HasPathWithinDistance( <span class="arg">SquadID</span> aiSquad, <span class="arg">Position</span> targetPosition, <span class="arg">Real</span> maxDistance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a path shorter than maxDistance between the AISquad and the target exists </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (291) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_ShouldFallBackOrBraceSelf"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_ShouldFallBackOrBraceSelf( <span class="arg">SquadID</span> pAISquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if the squad should fall back or brace itself given the current situation. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (224) </b></td>
            </tr>
          </table>
        </p><a name="AITactic_GetObjectiveTimerSeconds"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AITactic_GetObjectiveTimerSeconds( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the number of seconds on an objective timer. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAIUtility.cpp] (2815) </b></td>
            </tr>
          </table>
        </p><a name="AllMarkers_FromName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AllMarkers_FromName( <span class="arg">String</span> name, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns all ScarMarkers from the Scenario Editor with the given name. If you don't care about the type, pass in an empty string ( "" ) </p>
                <p>The type is defined on the ScarMarkerBlueprint in the Scenario Editor\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (85) </b></td>
            </tr>
          </table>
        </p><a name="App_ClearMovieModeFramerate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 App_ClearMovieModeFramerate(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove the movie mode framerate restriction </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (1114) </b></td>
            </tr>
          </table>
        </p><a name="app_currenttime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 app_currenttime(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the current app time </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (484) </b></td>
            </tr>
          </table>
        </p><a name="app_setidealframerate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 app_setidealframerate( <span class="arg">Integer</span> frameRate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the ideal frame rate for the game. Set to 0 if an unbounded frame rate is desired. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (478) </b></td>
            </tr>
          </table>
        </p><a name="App_SetMovieModeFramerate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 App_SetMovieModeFramerate( <span class="arg">Integer</span> frameRate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Run the game at specified frame rate (for capturing movies). Only works with 60 or 120, other rates are defaulted to 60. Setting it to 0 disables movie mode </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (1108) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ClampToMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ClampToMarker( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clamps the camera's target position to a marker. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (605) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ExecuteBSplinePan"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ExecuteBSplinePan( <span class="arg">Real</span> totalT, <span class="arg">Boolean</span> controlRotation )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Execute spline pan based on queued control points. Use B-Spline interpolation of points </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (195) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ExecuteCaptureCameraPan"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ExecuteCaptureCameraPan( <span class="arg">StackVarTable</span> cameraPanTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Executes a camera pan that was captured using the Capture Tool. Expects that the "camera_spline" Camera set was pushed to the CameraSwitchboard, using Camera_Push("camera_spline") Returns the duration of the spline, so that the user can call Camera_Pop() </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (203) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ExecuteCatromSplinePan"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ExecuteCatromSplinePan( <span class="arg">Real</span> totalT, <span class="arg">Boolean</span> controlRotation )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Execute spline pan based on queued control points. Use Catmull-Rom interpolation of points </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (189) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ExecuteLinearSplinePan"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ExecuteLinearSplinePan( <span class="arg">Real</span> totalT, <span class="arg">Boolean</span> controlRotation )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Execute spline pan based on queued control points. Use linear interpolation between points </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (183) </b></td>
            </tr>
          </table>
        </p><a name="Camera_FocusOnPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_FocusOnPosition( <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Focus the camera on the specified position. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (110) </b></td>
            </tr>
          </table>
        </p><a name="Camera_FollowEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_FollowEntity( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Make the camera follow the specified entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (410) </b></td>
            </tr>
          </table>
        </p><a name="Camera_FollowSelection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_FollowSelection(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Make the camera follow the current full selection. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (419) </b></td>
            </tr>
          </table>
        </p><a name="Camera_FollowSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_FollowSquad( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Make the camera follow the specified squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (433) </b></td>
            </tr>
          </table>
        </p><a name="Camera_GetCurrentPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_GetCurrentPos(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the current position for the camera. (Where the the camera currently is.) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (558) </b></td>
            </tr>
          </table>
        </p><a name="Camera_GetCurrentTargetPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_GetCurrentTargetPos(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the current target position for the camera. (Where the the camera currently is.) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (552) </b></td>
            </tr>
          </table>
        </p><a name="Camera_GetDeclination"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_GetDeclination(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the current camera declination (tilt). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (454) </b></td>
            </tr>
          </table>
        </p><a name="Camera_GetDefaultOrbit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_GetDefaultOrbit(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the default camera orbit (rotation). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (466) </b></td>
            </tr>
          </table>
        </p><a name="Camera_GetOrbit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_GetOrbit(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the current camera orbit (rotation). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (460) </b></td>
            </tr>
          </table>
        </p><a name="Camera_GetPivot"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_GetPivot(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the pivot of the camera. (The position about which the camera is pivoting). </p>
                <p>For autodeclinate camera, this is the lookat position.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (565) </b></td>
            </tr>
          </table>
        </p><a name="Camera_GetTargetPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_GetTargetPos(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the desired target position for the camera. (Where the camera is trying to get to.) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (546) </b></td>
            </tr>
          </table>
        </p><a name="Camera_GetZoomDist"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_GetZoomDist(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the current zoom distance for the camera. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (472) </b></td>
            </tr>
          </table>
        </p><a name="Camera_HideMesh"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_HideMesh(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hide the camera mesh. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (73) </b></td>
            </tr>
          </table>
        </p><a name="Camera_IsInputEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_IsInputEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the enabled/disabled state of the camera input.  (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (593) </b></td>
            </tr>
          </table>
        </p><a name="Camera_IsMeshShown"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_IsMeshShown(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Is the camera mesh being shown? </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (42) </b></td>
            </tr>
          </table>
        </p><a name="Camera_QueueRelativeSplinePanPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_QueueRelativeSplinePanPos( <span class="arg">Position</span> deltaPos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Queue a spline control point by position relative to the last queued position. Pan is deferred until requested by an execution function </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (137) </b></td>
            </tr>
          </table>
        </p><a name="Camera_QueueSplinePanPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_QueueSplinePanPos( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Queue a spline control point by absolute position. Pan is deferred until requested by an execution function </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (144) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ResetFocus"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ResetFocus(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Make the camera stop following anything. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (442) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ResetOrbit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ResetOrbit(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the current camera orbit relative to the current orbit (relative rotation). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (514) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ResetToDefault"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ResetToDefault(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset camera position to default home position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (448) </b></td>
            </tr>
          </table>
        </p><a name="Camera_SetDeclination"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_SetDeclination( <span class="arg">Real</span> declination )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the current camera declination (tilt). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (478) </b></td>
            </tr>
          </table>
        </p><a name="Camera_SetDefaultDeclination"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_SetDefaultDeclination( <span class="arg">Real</span> declination )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the default camera declination (tilt). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (490) </b></td>
            </tr>
          </table>
        </p><a name="Camera_SetDefaultOrbit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_SetDefaultOrbit( <span class="arg">Real</span> orbit )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the default camera orbit (rotation). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (502) </b></td>
            </tr>
          </table>
        </p><a name="Camera_SetDefaultZoomDist"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_SetDefaultZoomDist( <span class="arg">Real</span> distance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the default zoom distance for the camera. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (540) </b></td>
            </tr>
          </table>
        </p><a name="Camera_SetFov"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_SetFov( <span class="arg">Real</span> fov )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the current camera field of view (fov) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (484) </b></td>
            </tr>
          </table>
        </p><a name="Camera_SetInputEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_SetInputEnabled( <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables camera input. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (599) </b></td>
            </tr>
          </table>
        </p><a name="Camera_SetOrbit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_SetOrbit( <span class="arg">Real</span> orbit )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the current camera orbit (rotation). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (496) </b></td>
            </tr>
          </table>
        </p><a name="Camera_SetOrbitRelative"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_SetOrbitRelative( <span class="arg">Real</span> deltaOrbit )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the current camera orbit relative to the current orbit (relative rotation). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (508) </b></td>
            </tr>
          </table>
        </p><a name="Camera_SetZoomDist"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_SetZoomDist( <span class="arg">Real</span> distance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the current zoom distance for the camera. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (534) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ShowMesh"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ShowMesh(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Show the camera mesh. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (63) </b></td>
            </tr>
          </table>
        </p><a name="Camera_StartDeltaOrbit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_StartDeltaOrbit( <span class="arg">Real</span> deltaOrbit, <span class="arg">Real</span> totalT )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Orbit the camera a given number of degrees clockwise from the current orbit position in a given amount of time. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (521) </b></td>
            </tr>
          </table>
        </p><a name="Camera_StartOrbit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_StartOrbit( <span class="arg">Real</span> endOrbit, <span class="arg">Real</span> totalT )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Orbit the camera to an end orbit position from the current orbit position in a given amount of time. Will choose shortest rotational direction. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (528) </b></td>
            </tr>
          </table>
        </p><a name="Camera_StartPan"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_StartPan( <span class="arg">Position</span> startPos, <span class="arg">Position</span> endPos, <span class="arg">Real</span> totalT, <span class="arg">Real</span> zoomDistance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pan the camera between two positions in a given amount of time. Interpolates the camera to the given zoom. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (117) </b></td>
            </tr>
          </table>
        </p><a name="Camera_StartPanTo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_StartPanTo( <span class="arg">Position</span> endPos, <span class="arg">Real</span> totalT, <span class="arg">Real</span> zoomDistance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pan the camera to a position in a given amount of time from the position in front of the queue. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (123) </b></td>
            </tr>
          </table>
        </p><a name="Camera_StartRelativePan"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_StartRelativePan( <span class="arg">Position</span> deltaPos, <span class="arg">Real</span> totalT, <span class="arg">Real</span> zoomDistance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pan the camera by some amount in a given amount of time. This is relative to the position in front of the queue. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (130) </b></td>
            </tr>
          </table>
        </p><a name="Camera_StartRelativeZoomDist"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_StartRelativeZoomDist( <span class="arg">Real</span> deltaZoomDist, <span class="arg">Real</span> totalT )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Start a transition to a relative zoom distance over a certain amount of time. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (404) </b></td>
            </tr>
          </table>
        </p><a name="Camera_StartZoomDist"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_StartZoomDist( <span class="arg">Real</span> startZoomDist, <span class="arg">Real</span> endZoomDist, <span class="arg">Real</span> totalT )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Start a transition from one zoom distance to another over a certain amount of time. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (392) </b></td>
            </tr>
          </table>
        </p><a name="Camera_StartZoomDistTo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_StartZoomDistTo( <span class="arg">Real</span> endZoomDist, <span class="arg">Real</span> totalT )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Start a transition to a zoom distance over a certain amount of time. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (398) </b></td>
            </tr>
          </table>
        </p><a name="Camera_StopPan"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_StopPan(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stop an ongoing camera pan. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (386) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ToggleDebugCamera"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ToggleDebugCamera(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle the debug free camera </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (571) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ToggleMeshShown"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ToggleMeshShown( <span class="arg">Boolean</span> show )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle the camera mesh. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (53) </b></td>
            </tr>
          </table>
        </p><a name="Camera_Unclamp"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_Unclamp(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Frees up the camera (so it's not clamped to a marker anymore). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (623) </b></td>
            </tr>
          </table>
        </p><a name="Cheat_GrantAllRibbonsAndMedals"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cheat_GrantAllRibbonsAndMedals(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Cheat to award all ribbons and medals </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (606) </b></td>
            </tr>
          </table>
        </p><a name="Cheat_ResetAchievementProgress"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cheat_ResetAchievementProgress(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Cheat to reset all achievement progress </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (600) </b></td>
            </tr>
          </table>
        </p><a name="cmdline_string"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 cmdline_string( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the value for a command line arg. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (537) </b></td>
            </tr>
          </table>
        </p><a name="cursor_hide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 cursor_hide(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hide the cursor </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (466) </b></td>
            </tr>
          </table>
        </p><a name="cursor_setposition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 cursor_setposition( <span class="arg">Real</span> x, <span class="arg">Real</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the cursor position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (472) </b></td>
            </tr>
          </table>
        </p><a name="cursor_show"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 cursor_show(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Show the cursor </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (460) </b></td>
            </tr>
          </table>
        </p><a name="dca_get_variable_value"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dca_get_variable_value( <span class="arg">EntityID</span> pEntity, <span class="arg">String</span> variableName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get dca variable value for an entity. Can be used to validate presentation state from lua. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibSimVis.cpp] (227) </b></td>
            </tr>
          </table>
        </p><a name="Decal_GetNextDecalId"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Decal_GetNextDecalId(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current decal id in use; used in conjunction with Decal_RemoveAllDecalsAfterId </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (93) </b></td>
            </tr>
          </table>
        </p><a name="Decal_RemoveAllDecalsAfterId"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Decal_RemoveAllDecalsAfterId( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Erases all placed decals after id (inclusive); used in conjunction with Decal_GetNextDecalId </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (108) </b></td>
            </tr>
          </table>
        </p><a name="dr_clear"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_clear( <span class="arg">String</span> frame )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear debug rendering. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDebugRender.cpp] (22) </b></td>
            </tr>
          </table>
        </p><a name="dr_drawCircle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_drawCircle( <span class="arg">String</span> frame, <span class="arg">Real</span> x, <span class="arg">Real</span> y, <span class="arg">Real</span> z, <span class="arg">Real</span> radius, <span class="arg">Integer</span> r, <span class="arg">Integer</span> g, <span class="arg">Integer</span> b )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw a circle, positioned in 3D, aligned to scren. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDebugRender.cpp] (56) </b></td>
            </tr>
          </table>
        </p><a name="dr_setautoclear"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_setautoclear( <span class="arg">String</span> frame, <span class="arg">Boolean</span> bEnable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set auto clear for named frame. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDebugRender.cpp] (28) </b></td>
            </tr>
          </table>
        </p><a name="dr_setdisplay"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_setdisplay( <span class="arg">String</span> frame, <span class="arg">Boolean</span> bEnable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set display of named frame. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDebugRender.cpp] (34) </b></td>
            </tr>
          </table>
        </p><a name="dr_text2d"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_text2d( <span class="arg">String</span> frame, <span class="arg">Real</span> x, <span class="arg">Real</span> y, <span class="arg">String</span> cmd, <span class="arg">Integer</span> r, <span class="arg">Integer</span> g, <span class="arg">Integer</span> b )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw text, positioned in 2D, aligned to the screen. </p>
                <p>(x,y) gives position in normalized screen coordinates cmd is the text to print r,g,b give colour values from 0-255</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDebugRender.cpp] (44) </b></td>
            </tr>
          </table>
        </p><a name="dr_text3d"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 dr_text3d( <span class="arg">String</span> frame, <span class="arg">Real</span> x, <span class="arg">Real</span> y, <span class="arg">Real</span> z, <span class="arg">String</span> cmd, <span class="arg">Integer</span> r, <span class="arg">Integer</span> g, <span class="arg">Integer</span> b )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw text, positioned in 3D, aligned to screen. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibDebugRender.cpp] (50) </b></td>
            </tr>
          </table>
        </p><a name="DrawOBB"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 DrawOBB( <span class="arg">RenderModel*</span> pModel, <span class="arg">Transform&amp;</span> transform )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draw the ref-posed OBB of a model </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\renderer\renderanim\RenderModelUtil.h] (41) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CallEntityFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CallEntityFunction( <span class="arg">EGroupID</span> egroup, <span class="arg">Function</span> entityFunction, <span class="arg">variable</span> argument list )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calls an Entity_ function on every entity in an egroup </p>
                <p>Example: EGroup_CallEntityFunction( eg_emplacements, Entity_SetAnimatorAction, actionName ) will call Entity_SetAnimatorAction( entity, actionName ) for every entity in eg_emplacements The first parameter of the supplied function must be EntityID</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (351) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CallEntityFunctionAllOrAny"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CallEntityFunctionAllOrAny( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all, <span class="arg">Function</span> entityFunction, <span class="arg">variable</span> argument list )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ALL or ANY entities in an egroup satisfy a condition, using an Entity_ function to perform the query on each entity </p>
                <p>Example: EGroup_CallEntityFunctionAllOrAny( eg_emplacements, ANY, Misc_IsEntityOnScreen, pct ) will call Misc_IsEntityOnScreen( entity, pct ) to determine whether ANY entity in eg_emplacements is on screen The first parameter of the supplied function must be EntityID</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (362) </b></td>
            </tr>
          </table>
        </p><a name="Event_Save"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_Save( <a href="enum_list.htm#SaveTriggerType">SaveTriggerType</a> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Starts a save event the same way as Event_Start, but automatically sets highest priority and promotes the request </p>
                <p>up the queue automatically. It waits for the existing event to finish, and does not cancel the existing event. STT_Quick: Saves the game by user request. Name is generated from campaign mission or skirmish preset name. STT_Auto: Campaign only. Saves the game by script request. Name is generated from campaign mission. STT_Standard: Saves the game using the name provided, overwriting if necessary - a suitable filename will be generated - saves to Campaign or Skirmish folder depending on currently running scenario STT_Dev: Saves the game using the filename provided - for development and testing only</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (750) </b></td>
            </tr>
          </table>
        </p><a name="Event_SaveWithName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_SaveWithName( <a href="enum_list.htm#SaveTriggerType">SaveTriggerType</a> type, <span class="arg">String</span> fileName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Starts a save event the same way as Event_Save, but with a filename specified. </p>
                <p>STT_Quick: Saves the game by user request. Name is generated from campaign mission or skirmish preset name. Supplied filename is ignored. STT_Auto: Campaign only. Saves the game by script request. Name is generated from campaign mission. Supplied filename is ignored. STT_Standard: Saves the game using the name provided, overwriting if necessary - a suitable filename will be generated - saves to Campaign or Skirmish folder depending on currently running scenario STT_Dev: Saves the game using the filename provided - for development and testing only</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (761) </b></td>
            </tr>
          </table>
        </p><a name="fatal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 fatal( <span class="arg">lua_State*</span> state )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Throws an error to lua and print out the error message </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\AILuaUtil.cpp] (129) </b></td>
            </tr>
          </table>
        </p><a name="fatal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 fatal( <span class="arg">lua_State*</span> state )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Throws an error to lua and print out the error message </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (150) </b></td>
            </tr>
          </table>
        </p><a name="Formation_GetDimensionsAndOffset"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Formation_GetDimensionsAndOffset( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calculate the dimensions and centre offset of a formation for given squads.  Returns as a ScarPosition {x = Width, y = Height, z = centre offset along forward (Height) direction}.  Returns a zero vector if error. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFormation.cpp] (140) </b></td>
            </tr>
          </table>
        </p><a name="Formation_PlaceSquadGroupsInFormation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Formation_PlaceSquadGroupsInFormation( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> position, <span class="arg">Position</span> direction )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Place an SGroup or table of SGroups in formation </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\formation.scar] (4) </b></td>
            </tr>
          </table>
        </p><a name="Formation_PlaceSquadsInFormation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Formation_PlaceSquadsInFormation( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> position, <span class="arg">Position</span> direction )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calculate formation positions and set the squads' positions to the formation positions </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFormation.cpp] (23) </b></td>
            </tr>
          </table>
        </p><a name="fx_dump"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 fx_dump(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>force the gamma </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibFX.cpp] (16) </b></td>
            </tr>
          </table>
        </p><a name="fx_forcelod"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 fx_forcelod( <span class="arg">Integer</span> lod )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>force the LOD of the FX system (use 0 to enable dynamic LOD) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibFX.cpp] (42) </b></td>
            </tr>
          </table>
        </p><a name="fx_logenable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 fx_logenable( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>enable logging of fx, it it wasn't already </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibFX.cpp] (23) </b></td>
            </tr>
          </table>
        </p><a name="fx_toggle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 fx_toggle(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>toggle effects on or off </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibFX.cpp] (49) </b></td>
            </tr>
          </table>
        </p><a name="fx_toggleRendering"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 fx_toggleRendering(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>toggle effects rendering on or off </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibFX.cpp] (57) </b></td>
            </tr>
          </table>
        </p><a name="fx_usedebugshader"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 fx_usedebugshader( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>use the debugshader, which will render all fx green </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibFX.cpp] (30) </b></td>
            </tr>
          </table>
        </p><a name="Game_AIControlLocalPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_AIControlLocalPlayer(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Take over control of the local player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (377) </b></td>
            </tr>
          </table>
        </p><a name="Game_DeleteSaveGameDev"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_DeleteSaveGameDev( <span class="arg">String</span> filename )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>deletes save game(s), even if it is not loadable with the current version of the game </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (277) </b></td>
            </tr>
          </table>
        </p><a name="Game_EnableInput"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_EnableInput( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/Disables all input EXCEPT for ESC and F10. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (383) </b></td>
            </tr>
          </table>
        </p><a name="Game_FastForwardProduction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_FastForwardProduction( <span class="arg">Real</span> secondsForward )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fast forward all production queues as if x seconds passed, returns info about what has been produced Returns a lua table of the format { (string)PlayerID : { (string)EntityProducerName : { "research" : { (string)researchedItemName : (int)number of times researched }, "production" : { (string)producedItemName : (int)number of items produced }, }, }, } for each player present, for each entity that produced after fast forwarding, for each item researched and produced </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (465) </b></td>
            </tr>
          </table>
        </p><a name="Game_FastForwardResourceIncome"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_FastForwardResourceIncome( <span class="arg">Real</span> secondsForward )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>For all players fast forwards their resource income as if x seconds passed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (569) </b></td>
            </tr>
          </table>
        </p><a name="Game_GetSimRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_GetSimRate(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>get the simulation update rate </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (445) </b></td>
            </tr>
          </table>
        </p><a name="Game_GetSPDifficulty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_GetSPDifficulty(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns current single player difficulty. Values are GD_EASY, GD_NORMAL, GD_HARD, GD_EXPERT. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (126) </b></td>
            </tr>
          </table>
        </p><a name="Game_GetTerrainTypeVariables"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_GetTerrainTypeVariables( <span class="arg">StackVarTable</span> terrainVars )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>injects terrain type values into passed table to use for terrain creation </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (309) </b></td>
            </tr>
          </table>
        </p><a name="Game_IsDataLocked"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_IsDataLocked( <span class="arg">String</span> dataID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns lock state of stored data at location named by dataID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (629) </b></td>
            </tr>
          </table>
        </p><a name="Game_IsFtue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_IsFtue(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>check if scenario has FTUE boolean set in match setup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (356) </b></td>
            </tr>
          </table>
        </p><a name="Game_IsRTM"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_IsRTM(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use to test whether the game is running in RTM mode or not. Using -rtm from the command line will cause this function to also return true in non-RTM builds. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (428) </b></td>
            </tr>
          </table>
        </p><a name="Game_IsSaving"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_IsSaving(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks that the save system has a save queued or is actively saving. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (178) </b></td>
            </tr>
          </table>
        </p><a name="Game_LaunchSPGeneratedMap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_LaunchSPGeneratedMap( <span class="arg">String</span> biomePbgName, <span class="arg">String</span> layoutPbgName, <span class="arg">String</span> sizePbgName, <span class="arg">Integer</span> difficulty, <span class="arg">StackVarTable</span> terrainResult )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>load this scenario as an single player match </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (333) </b></td>
            </tr>
          </table>
        </p><a name="Game_LoadDataStore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_LoadDataStore( <span class="arg">String</span> id, <span class="arg">String</span> path, <span class="arg">Boolean</span> binary )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Load data store to disk </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (609) </b></td>
            </tr>
          </table>
        </p><a name="Game_LoadFromFileDev"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_LoadFromFileDev( <span class="arg">String</span> filename )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>load this game as a single player match, full path is expected excluding extension </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (247) </b></td>
            </tr>
          </table>
        </p><a name="Game_LoadGame"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_LoadGame( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>load the savegame with the given internal name from Campaign or Skirmish folder depending on currently running scenario </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (202) </b></td>
            </tr>
          </table>
        </p><a name="Game_LoadSP"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_LoadSP( <span class="arg">String</span> scenarioName, <span class="arg">Integer</span> difficulty )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>load this scenario as an single player match </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (291) </b></td>
            </tr>
          </table>
        </p><a name="Game_LockRandom"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_LockRandom(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>If you are running something that is non-deterministic like a getlocalplayer conditional, you can lock the random to make sure no one down the callstack will throw the game random index out of sync and cause a sync error. REMEMBER TO UNLOCK WHEN YOU ARE DONE </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (415) </b></td>
            </tr>
          </table>
        </p><a name="Game_QuitApp"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_QuitApp(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Quits the app immediately </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (390) </b></td>
            </tr>
          </table>
        </p><a name="Game_QuitAppWithCode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_QuitAppWithCode( <span class="arg">Integer</span> exitCode )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Quits the app immediately with the given exitCode </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (397) </b></td>
            </tr>
          </table>
        </p><a name="Game_RemoveTableData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_RemoveTableData( <span class="arg">String</span> path )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes the data store at the given path. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (595) </b></td>
            </tr>
          </table>
        </p><a name="Game_RetrieveTableData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_RetrieveTableData( <span class="arg">String</span> dataID, <span class="arg">Boolean</span> clearFromStorage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Loads table data stored at datastore[dataID] into global lua table var named &lt;dataID&gt;. Set clearFromStorage to true to clear data from store. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (602) </b></td>
            </tr>
          </table>
        </p><a name="Game_SaveDataStore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SaveDataStore( <span class="arg">String</span> id, <span class="arg">String</span> path, <span class="arg">Boolean</span> binary )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Save data store to disk </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (616) </b></td>
            </tr>
          </table>
        </p><a name="Game_SaveGameExistsDev"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SaveGameExistsDev( <span class="arg">String</span> filename )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>checks if the save game exists in dev folder and is loadable, filename is expected excluding folder and extension </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (262) </b></td>
            </tr>
          </table>
        </p><a name="Game_ScreenFade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_ScreenFade( <span class="arg">Real</span> r, <span class="arg">Real</span> g, <span class="arg">Real</span> b, <span class="arg">Real</span> a, <span class="arg">Real</span> timeSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fades the screen to a given RGBA colour over a number of seconds </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (404) </b></td>
            </tr>
          </table>
        </p><a name="Game_SendCustomChallengeEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SendCustomChallengeEvent( <span class="arg">PlayerID</span> player, <span class="arg">ChallengeEventType</span> eventType, <span class="arg">Real</span> amount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Updates the status of an in-game achievement or challenge. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (635) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetDataLock"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetDataLock( <span class="arg">String</span> dataID, <span class="arg">Boolean</span> lock )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>sets lock state for stored data at location named by dataID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (623) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetSimRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetSimRate( <span class="arg">Real</span> rate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>set the simulation update rate </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (439) </b></td>
            </tr>
          </table>
        </p><a name="Game_ShowPauseMenu"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_ShowPauseMenu(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Brings up the pause menu. The game does not get paused until the end of the current sim tick, so anything that comes after Game_ShowPauseMenu in your function will still get executed, as well as any rules set to run during that frame. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (638) </b></td>
            </tr>
          </table>
        </p><a name="Game_StoreTableData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_StoreTableData( <span class="arg">String</span> dataID, <span class="arg">RefTable</span> table )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stores provided table into long-lived data store at location named by dataID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (588) </b></td>
            </tr>
          </table>
        </p><a name="Game_TransitionToState"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_TransitionToState( <span class="arg">String</span> stateName, <span class="arg">Real</span> transitionTimeSec )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Transitions to another atmosphere. Overwrites current transitions. Uses predefined atmosphere settings (only compatible with EEditor maps). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (135) </b></td>
            </tr>
          </table>
        </p><a name="Game_UnLockRandom"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_UnLockRandom(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>unlock the random from a previous lockrandom call only </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (421) </b></td>
            </tr>
          </table>
        </p><a name="GetCameraNameFromPbgName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 GetCameraNameFromPbgName( <span class="arg">String</span> pbgPath )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>get camera name from PBG path </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (34) </b></td>
            </tr>
          </table>
        </p><a name="Initialize"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Initialize(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>A class-like object used as a Singleton to read and write a JSON file </p>
                <p>Initializes based on command line parameter -test_result_file &lt;alias:path&gt;. Checks for temporary logs on creation and inserts them into the result data. NOTE: A lot of information in the file is redundant to make it easier to process and easier to read for a human.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\standard_test.scar] (154) </b></td>
            </tr>
          </table>
        </p><a name="inv_dump"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 inv_dump(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Dump content of inventory to a file </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibInventory.cpp] (14) </b></td>
            </tr>
          </table>
        </p><a name="IsEconomyClassStructure_CS"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 IsEconomyClassStructure_CS( <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the pbg class list contains a type that has economic utility </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\aiproduction\AIProductionUtil.cpp] (666) </b></td>
            </tr>
          </table>
        </p><a name="IsSecuringStructure_CS"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 IsSecuringStructure_CS( <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Can this structure be used to secure territory </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\aiproduction\AIProductionUtil.cpp] (644) </b></td>
            </tr>
          </table>
        </p><a name="IsSecuringStructurePlacedOnPoint_CS"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 IsSecuringStructurePlacedOnPoint_CS( <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Can this structure be used to secure territory </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\aiproduction\AIProductionUtil.cpp] (655) </b></td>
            </tr>
          </table>
        </p><a name="IsStructure_CS"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 IsStructure_CS( <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if this object is a structure (something with a site_ext) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\aiproduction\AIProductionUtil.cpp] (638) </b></td>
            </tr>
          </table>
        </p><a name="listplayers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 listplayers(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Print all players information. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (238) </b></td>
            </tr>
          </table>
        </p><a name="Loadout_GetEquippedArmyUnitAtIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loadout_GetEquippedArmyUnitAtIndex( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the player's equipped elite at the specified index for their currently set race </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (161) </b></td>
            </tr>
          </table>
        </p><a name="Loadout_GetEquippedArmyUnitsCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loadout_GetEquippedArmyUnitsCount( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the number of elites currently equipped for the player's current race </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (177) </b></td>
            </tr>
          </table>
        </p><a name="LOC"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LOC( <span class="arg">String</span> string )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DEV ONLY: Converts ansi text to localized text. </p>
                <p>Your text will have to get localized properly at some point before final. When converting text with this function you will get LOC: prefixed to your text</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\common\LuaLibLocalizer.cpp] (286) </b></td>
            </tr>
          </table>
        </p><a name="Loc_Empty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loc_Empty(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an empty localized string. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\common\LuaLibLocalizer.cpp] (223) </b></td>
            </tr>
          </table>
        </p><a name="Loc_FormatInteger"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loc_FormatInteger( <span class="arg">Integer</span> integer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a localized string containing the integer. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\common\LuaLibLocalizer.cpp] (147) </b></td>
            </tr>
          </table>
        </p><a name="Loc_FormatNumber"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loc_FormatNumber( <span class="arg">Real</span> number, <span class="arg">Integer</span> numDecimalPlaces )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a localized string containing the number to the specified number of decimal places. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\common\LuaLibLocalizer.cpp] (155) </b></td>
            </tr>
          </table>
        </p><a name="Loc_FormatTime_H_M_S"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loc_FormatTime_H_M_S( <span class="arg">Real</span> secs, <span class="arg">Boolean</span> leading_zeroes )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a formatted time string in hours, minutes, and seconds. can omit leading zeroes. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\common\LuaLibLocalizer.cpp] (167) </b></td>
            </tr>
          </table>
        </p><a name="Loc_FormatTime_M_S"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loc_FormatTime_M_S( <span class="arg">Real</span> secs, <span class="arg">Boolean</span> leading_zeroes )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a formatted time string in minutes and seconds. can omit leading zeroes. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\common\LuaLibLocalizer.cpp] (186) </b></td>
            </tr>
          </table>
        </p><a name="Loc_FormatTime_M_S_MS"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loc_FormatTime_M_S_MS( <span class="arg">Real</span> secs, <span class="arg">Boolean</span> leading_zeroes )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a formatted time string in minutes, seconds, and milliseconds. can omit leading zeroes. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\common\LuaLibLocalizer.cpp] (204) </b></td>
            </tr>
          </table>
        </p><a name="Loc_GetString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loc_GetString( <span class="arg">StackVar</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the localized string identified by the specified id. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\common\LuaLibLocalizer.cpp] (229) </b></td>
            </tr>
          </table>
        </p><a name="lockstep_simulation_presentation_toggle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 lockstep_simulation_presentation_toggle(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Run simulation and presentation in lockstep, with simulation ticked every frame (useful for debugging sync errors) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (252) </b></td>
            </tr>
          </table>
        </p><a name="Marker_Create"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_Create( <span class="arg">String</span> name, <span class="arg">String</span> type, <span class="arg">Position</span> pos, <span class="arg">Position</span> direction, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a newly created marker with the given attributes [direction] is expecting a direction vector and not a position relative to [pos] </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (106) </b></td>
            </tr>
          </table>
        </p><a name="Marker_CreateMarkerFromEntityMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_CreateMarkerFromEntityMarker( <span class="arg">EntityID</span> entity, <span class="arg">String</span> internalMarker, <span class="arg">String</span> newMarker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds a marker in an entity, creates a SCAR marker there and returns the new marker's name. </p>
                <p>Uses the MarkerExt to find a marker inside an entity. Creates a SCAR marker at the internal marker's location. Returns the new SCAR marker's name.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (167) </b></td>
            </tr>
          </table>
        </p><a name="Marker_Destroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_Destroy( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Delete this marker, only recommended for dynamically created markers </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (142) </b></td>
            </tr>
          </table>
        </p><a name="Marker_DoesNumberAttributeExist"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_DoesNumberAttributeExist( <span class="arg">MarkerID</span> marker, <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a generic number attribute exists for the marker type. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (315) </b></td>
            </tr>
          </table>
        </p><a name="Marker_DoesStringAttributeExist"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_DoesStringAttributeExist( <span class="arg">MarkerID</span> marker, <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a generic string attribute exists for the marker type. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (303) </b></td>
            </tr>
          </table>
        </p><a name="Marker_Exists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_Exists( <span class="arg">String</span> name, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if marker exists. If you don't care about the type, pass in an empty string ( "" ) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (91) </b></td>
            </tr>
          </table>
        </p><a name="Marker_FromName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_FromName( <span class="arg">String</span> name, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a ScarMarker from the Scenario Editor. If you don't care about the type, pass in an empty string ( "" ) </p>
                <p>The type is defined on the ScarMarkerBlueprint in the Scenario Editor\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (58) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetDirection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetDirection( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a vector for the marker direction </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (334) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetName( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the name of a given marker.  This value gets set in the Scenario Editor. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (259) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetNumberAttribute"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetNumberAttribute( <span class="arg">MarkerID</span> marker, <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a generic number attribute defined in a marker. </p>
                <p>Different marker types have different attributes. Note: All marker types have Name and Proximity. Do not use this function to retrieve these values, use Marker_GetName and Marker_GetProximity instead.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (275) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetPosition( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the position of a given marker. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (148) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetProximityDimensionsOrDefault"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetProximityDimensionsOrDefault( <span class="arg">MarkerID</span> marker, <span class="arg">Real</span> defaultWidth, <span class="arg">Real</span> defaultHeight )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the proximity dimensions of a given marker.  If non rectangular, default value is returned Dimensions are 2d but returned in 3d world space (terrain mapped to x,z) This value gets set in the Scenario Editor. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (216) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetProximityRadius"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetProximityRadius( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the proximity radius of a given marker.  If non circular, default value is returned This value gets set in the Scenario Editor. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (243) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetProximityRadiusOrDefault"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetProximityRadiusOrDefault( <span class="arg">MarkerID</span> marker, <span class="arg">Real</span> defaultValue )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the proximity radius of a given marker.  If non circular, default value is returned This value gets set in the Scenario Editor. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (230) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetStringAttribute"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetStringAttribute( <span class="arg">MarkerID</span> marker, <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a generic string attribute defined in a marker. </p>
                <p>Different marker types can have different attributes.\n Note: All marker types have Name and Proximity. Do not use this function to retrieve these values, use Marker_GetName and Marker_GetProximity instead.\n See markertypes.lua for a listing of all the marker types.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (292) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetType( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the typename of a given marker. This is the typename from the Scenario Editor (name displayed when placing markers) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (266) </b></td>
            </tr>
          </table>
        </p><a name="Marker_HasProximityRange"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_HasProximityRange( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns if a marker has a defined (non-default) proximity range </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (208) </b></td>
            </tr>
          </table>
        </p><a name="Marker_InProximity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_InProximity( <span class="arg">MarkerID</span> marker, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given position is in the markers proximity radius or proximity rectangle (depending on the type). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (328) </b></td>
            </tr>
          </table>
        </p><a name="Marker_SetProximityCircle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_SetProximityCircle( <span class="arg">MarkerID</span> marker, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the proximity shape of a marker to a circle with size radius </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (129) </b></td>
            </tr>
          </table>
        </p><a name="Marker_SetProximityPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_SetProximityPoint( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the proximity shape of a marker to point marker (no proximity) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (123) </b></td>
            </tr>
          </table>
        </p><a name="Marker_SetProximityRectangle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_SetProximityRectangle( <span class="arg">MarkerID</span> marker, <span class="arg">Real</span> width, <span class="arg">Real</span> height )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the proximity shape of a marker to a rectangle with dimensions width and height </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (135) </b></td>
            </tr>
          </table>
        </p><a name="Marker_StartActionAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_StartActionAt( <span class="arg">String</span> name, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Start an Action at the given position.  Returns the id so the Action can be stopped using Marker_StopActionById. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (365) </b></td>
            </tr>
          </table>
        </p><a name="Marker_StopActionById"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_StopActionById( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stop an Action by id.  Marker_StartActionAt returns an id that can be used here. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMarker.cpp] (375) </b></td>
            </tr>
          </table>
        </p><a name="memdump"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 memdump(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Write the OS map of allocated memory to the log folder </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemory.cpp] (60) </b></td>
            </tr>
          </table>
        </p><a name="memdumpf"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 memdumpf( <span class="arg">String</span> foldername )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Write the OS map of allocated memory to the log folder </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemory.cpp] (81) </b></td>
            </tr>
          </table>
        </p><a name="mempoolcount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 mempoolcount(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the numbers of memory pools </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemory.cpp] (24) </b></td>
            </tr>
          </table>
        </p><a name="mempoolinuse"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 mempoolinuse( <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Given a poolID it will return the current memory in use </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemory.cpp] (36) </b></td>
            </tr>
          </table>
        </p><a name="mempoolmax"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 mempoolmax( <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Given a poolID it will return the max amount of memory this pool has allocated </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemory.cpp] (44) </b></td>
            </tr>
          </table>
        </p><a name="mempoolname"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 mempoolname( <span class="arg">Integer</span> poolid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Given a poolID it will return the name of the pool </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemory.cpp] (52) </b></td>
            </tr>
          </table>
        </p><a name="memshrink"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 memshrink(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Ask the OS to reduce the memory allocated to the game </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemory.cpp] (15) </b></td>
            </tr>
          </table>
        </p><a name="memtofile"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 memtofile( <span class="arg">String</span> pool )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Write to a file all allocation content for specified pool </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibMemory.cpp] (135) </b></td>
            </tr>
          </table>
        </p><a name="Misc_AbortToFE"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_AbortToFE(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Abort straight out of the game to the frontend, without asking the user </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (82) </b></td>
            </tr>
          </table>
        </p><a name="Misc_AIControlLocalPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_AIControlLocalPlayer(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Let AI take over local player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (124) </b></td>
            </tr>
          </table>
        </p><a name="Misc_AppendToFile"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_AppendToFile( <span class="arg">String</span> filename, <span class="arg">String</span> text )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Appends given string to a file expects to receive a filename with an alias conserves existing file content \return Number returned is # bytes successfully written </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibFileSystem.cpp] (90) </b></td>
            </tr>
          </table>
        </p><a name="Misc_DetectKeyboardInput"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_DetectKeyboardInput( <span class="arg">Real</span> sinceTime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the app has had any keyboard input in the last second </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (238) </b></td>
            </tr>
          </table>
        </p><a name="Misc_DetectMouseInput"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_DetectMouseInput( <span class="arg">Real</span> sinceTime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the app has had any mouse input in the last second </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (227) </b></td>
            </tr>
          </table>
        </p><a name="Misc_EnablePerformanceTest"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_EnablePerformanceTest( <span class="arg">Boolean</span> toEnable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Turn on or off the performance test monitoring </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (185) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetCommandLineString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetCommandLineString( <span class="arg">String</span> option )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the string argument for a command line option. ex: for "-init test.lua" it would return "test.lua" </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSetup.cpp] (23) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetFileSize"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetFileSize( <span class="arg">String</span> filename )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns the size of the file expects to receive a filename with an alias \return file size OR 0 if the file can not be read </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibFileSystem.cpp] (55) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsCommandLineOptionSet"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsCommandLineOptionSet( <span class="arg">String</span> option )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if -option is specified on the command line </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSetup.cpp] (11) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsDevMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsDevMode(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the game is running in dev mode. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSetup.cpp] (67) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsPosOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsPosOnScreen( <span class="arg">Position</span> pos, <span class="arg">Real</span> percent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if position is on screen, (1 being the entire screen, 0.5 being 50% of the screen from the center point) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameCamera.cpp] (630) </b></td>
            </tr>
          </table>
        </p><a name="Misc_QueryDataDirectory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_QueryDataDirectory( <span class="arg">String</span> pathQuery, <span class="arg">Boolean</span> recursiveFind )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Assumes 'data:' as root; Returns a table containing the names of files matching the supplied path. </p>
                <p>Wildcards are allowed.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibFileSystem.cpp] (155) </b></td>
            </tr>
          </table>
        </p><a name="Misc_QueryDirectory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_QueryDirectory( <span class="arg">String</span> pathQuery, <span class="arg">Boolean</span> recursiveFind )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table containing the names of files matching the supplied path. </p>
                <p>Wildcards are allowed.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibFileSystem.cpp] (138) </b></td>
            </tr>
          </table>
        </p><a name="Misc_ReadFile"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_ReadFile( <span class="arg">String</span> filename )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reads the file as string expects to receive a filename with an alias \return file content OR empty string if the file can not be read </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibFileSystem.cpp] (70) </b></td>
            </tr>
          </table>
        </p><a name="Misc_RemoveFile"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_RemoveFile( <span class="arg">String</span> filename )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Deletes the given file expects to receive a filename with an alias \return true if file was deleted or did not exist in the first place, false otherwise </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibFileSystem.cpp] (125) </b></td>
            </tr>
          </table>
        </p><a name="Misc_Screenshot"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_Screenshot(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Save a screenshot </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (159) </b></td>
            </tr>
          </table>
        </p><a name="Misc_ScreenshotExt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_ScreenshotExt( <span class="arg">String</span> fileExtension )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the graphic file type for screenshot (.jpg, .tga) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (153) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetCurrentAutotest"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetCurrentAutotest( <span class="arg">String</span> description )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the current autotest being used.  Used to set default text in the crash reports </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (249) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetDesignerSplatsVisibility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetDesignerSplatsVisibility( <span class="arg">Boolean</span> bVisible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Shows or hides designer splats, which are splats in the UI folder </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (202) </b></td>
            </tr>
          </table>
        </p><a name="Misc_WriteFile"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_WriteFile( <span class="arg">String</span> filename, <span class="arg">String</span> text )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Writes the given string to a file expects to receive a filename with an alias overwrites any existing file content \return Number returned is # bytes successfully written </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibFileSystem.cpp] (21) </b></td>
            </tr>
          </table>
        </p><a name="Modifier_ApplyToEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_ApplyToEntity( <span class="arg">ScarModifier</span> modifier, <span class="arg">EntityID</span> entity, <span class="arg">Real</span> durationSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Applies an entity modifier to an entity. Use a duration of 0 for an indefinite modifier. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaModifier.cpp] (166) </b></td>
            </tr>
          </table>
        </p><a name="Modifier_ApplyToPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_ApplyToPlayer( <span class="arg">ScarModifier</span> modifier, <span class="arg">PlayerID</span> player, <span class="arg">Real</span> durationSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Applies a player modifier to a player. Use a duration of 0 for an indefinite modifier. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaModifier.cpp] (206) </b></td>
            </tr>
          </table>
        </p><a name="Modifier_ApplyToSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_ApplyToSquad( <span class="arg">ScarModifier</span> modifier, <span class="arg">SquadID</span> squad, <span class="arg">Real</span> durationSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Applies a squad modifier to a squad. Use a duration of 0 for an indefinite modifier. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaModifier.cpp] (127) </b></td>
            </tr>
          </table>
        </p><a name="Modifier_Create"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_Create( <a href="enum_list.htm#ModifierApplicationType">ModifierApplicationType</a> applicationType, <span class="arg">String</span> modtype, <a href="enum_list.htm#ModifierUsageType">ModifierUsageType</a> usageType, <span class="arg">Boolean</span> exclusive, <span class="arg">Real</span> value, <span class="arg">StackVar</span> v )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a modifier that you can apply to stuff. </p>
                <p>applicationType : MAT_EntityType, MAT_Entity, MAT_Player, MAT_Squad, MAT_SquadType, MAT_Weapon, MAT_EntityTypeAndDescendants,\n or MAT_SquadTypeAndDescendants.\n modtype : Name of modifier from the modifiers table in the attribute editor.\n usageType : MUT_Addition, MUT_Multiplication, MUT_MultiplyAdd or MUT_Enable.\n exclusive : This field is not currently used for modifiers created through script. \n value : The value for the modifier.\n extname : The name of the entity/squad blueprint for when the applicationType is MAT_EntityType, MAT_SquadType,\n MAT_EntityTypeAndDescendants or MAT_SquadTypeAndDescendants</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaModifier.cpp] (52) </b></td>
            </tr>
          </table>
        </p><a name="Modifier_InitResourceBasedModifierTables"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_InitResourceBasedModifierTables(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set up tables to track modifiers that are applied per resource </p>
                <p>The game specific &lt;game_title&gt;/modifiers.scar file should define tables with an entry per resource and pass them as arguments</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (89) </b></td>
            </tr>
          </table>
        </p><a name="Modifier_IsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_IsEnabled( <span class="arg">EntityID</span> pEntity, <span class="arg">String</span> modtype, <span class="arg">Boolean</span> bEnabledByDefault )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks whether the modifier is enabled (requires an Entity and an Entity enable/disable modifier) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaModifier.cpp] (239) </b></td>
            </tr>
          </table>
        </p><a name="MovieCapture_Start"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MovieCapture_Start( <span class="arg">Boolean</span> lowResolution )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Start capturing a movie, optionally downscaling to low resolution. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (1120) </b></td>
            </tr>
          </table>
        </p><a name="MovieCapture_Stop"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MovieCapture_Stop(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stop a previously started movie capture. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (1126) </b></td>
            </tr>
          </table>
        </p><a name="network_show_calls"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 network_show_calls(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>toggle the outstanding network call information </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (440) </b></td>
            </tr>
          </table>
        </p><a name="network_show_statgraph"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 network_show_statgraph(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>toggle the network statgraph </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (446) </b></td>
            </tr>
          </table>
        </p><a name="Obj_Create"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_Create( <span class="arg">PlayerID</span> player, <span class="arg">String</span> title, <span class="arg">String</span> desc, <span class="arg">String</span> icon, <span class="arg">String</span> dataTemplate, <span class="arg">String</span> faction, <a href="enum_list.htm#ObjectiveType">ObjectiveType</a> type, <span class="arg">Integer</span> parentID, <span class="arg">String</span> telemetryTitle )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create an objective and returns the unique ID for it </p>
                <p>titleLocID and descLocID are the localization IDs for the title and description text. icon is the path to the objective icon type could be OT_Primary, OT_Secondary, OT_Bonus OT_Information</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (35) </b></td>
            </tr>
          </table>
        </p><a name="Obj_Delete"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_Delete( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Delete the objective with the specified ID </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (66) </b></td>
            </tr>
          </table>
        </p><a name="Obj_DeleteAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_DeleteAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Delete all objectives </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (72) </b></td>
            </tr>
          </table>
        </p><a name="Obj_GetCounterCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_GetCounterCount( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the count of the counter on the objective. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (253) </b></td>
            </tr>
          </table>
        </p><a name="Obj_GetCounterMax"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_GetCounterMax( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the maximum count of the counter on the objective. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (303) </b></td>
            </tr>
          </table>
        </p><a name="Obj_GetCounterType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_GetCounterType( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the counter type of an objective. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (201) </b></td>
            </tr>
          </table>
        </p><a name="Obj_GetProgress"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_GetProgress( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get objective progress bar value </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (189) </b></td>
            </tr>
          </table>
        </p><a name="Obj_GetProgressVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_GetProgressVisible( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get objective progress bar visibility  (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (167) </b></td>
            </tr>
          </table>
        </p><a name="Obj_GetState"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_GetState( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get objective state ( OS_Off, OS_Incomplete, OS_Complete, OS_Failed ) (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (123) </b></td>
            </tr>
          </table>
        </p><a name="Obj_GetVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_GetVisible( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get objective visibility  (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (145) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetColour"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetColour( <span class="arg">Integer</span> objectiveID, <span class="arg">Integer</span> red, <span class="arg">Integer</span> green, <span class="arg">Integer</span> blue, <span class="arg">Integer</span> alpha )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set colour of objective. In order red, green, blue, alpha. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (355) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetCounterCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetCounterCount( <span class="arg">Integer</span> objectiveID, <span class="arg">Integer</span> count )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the count of the counter on the objective. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (278) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetCounterMax"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetCounterMax( <span class="arg">Integer</span> objectiveID, <span class="arg">Integer</span> max )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the maximum count of the counter on the objective. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (329) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetCounterTimerSeconds"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetCounterTimerSeconds( <span class="arg">Integer</span> objectiveID, <span class="arg">Real</span> timerSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the number of seconds on an objective with a timer. Only used to inform the UI. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (229) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetCounterType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetCounterType( <span class="arg">Integer</span> objectiveID, <span class="arg">Integer</span> counterType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the counter type of an objective. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (212) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetDescription"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetDescription( <span class="arg">Integer</span> objectiveID, <span class="arg">String</span> desc )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set description text localization ID for the objective </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (90) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetIcon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetIcon( <span class="arg">Integer</span> objectiveID, <span class="arg">String</span> icon )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set icon path for the objective </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (102) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetObjectiveFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetObjectiveFunction( <span class="arg">Integer</span> id, <span class="arg">ObjectiveFn</span> fnType, <span class="arg">LuaFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set callback functions for the objective.  (not deterministic) </p>
                <p>FN_OnActivate is for triggering situation report. FN_OnShow is used to assign UI element when tactical map is open. FN_OnSelect is used to assign UI element when the objective is highlighted</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (367) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetProgress"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetProgress( <span class="arg">Integer</span> objectiveID, <span class="arg">Real</span> progress )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set objective progress bar value </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (179) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetProgressVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetProgressVisible( <span class="arg">Integer</span> objectiveID, <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set objective progress bar visibility </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (157) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetState"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetState( <span class="arg">Integer</span> objectiveID, <span class="arg">State</span> state )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set objective state ( OS_Off, OS_Incomplete, OS_Complete, OS_Failed ) </p>
                <p>Objectives must be visible for state changes to take effect.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (113) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetTitle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetTitle( <span class="arg">Integer</span> objectiveID, <span class="arg">String</span> title )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set title text localization ID for the objective </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (78) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetVisible( <span class="arg">Integer</span> objectiveID, <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set objective visibility </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaObjectives.cpp] (135) </b></td>
            </tr>
          </table>
        </p><a name="PerfStats_Disable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PerfStats_Disable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disable displaying the Essence Profiler </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibProfile.cpp] (27) </b></td>
            </tr>
          </table>
        </p><a name="PerfStats_Dump"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PerfStats_Dump(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Dump the Essence Profiler data onto a file </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibProfile.cpp] (33) </b></td>
            </tr>
          </table>
        </p><a name="PerfStats_Enable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PerfStats_Enable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable displaying the Essence Profiler </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibProfile.cpp] (21) </b></td>
            </tr>
          </table>
        </p><a name="PerfStats_IsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PerfStats_IsEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get perf stats toggle value </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibProfile.cpp] (39) </b></td>
            </tr>
          </table>
        </p><a name="PerfStats_Toggle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PerfStats_Toggle(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle displaying the Essence Profiler </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\global\LuaLibProfile.cpp] (15) </b></td>
            </tr>
          </table>
        </p><a name="Physics_GetNumRBodies"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Physics_GetNumRBodies(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of rigid bodies in the physical world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (216) </b></td>
            </tr>
          </table>
        </p><a name="Physics_IsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Physics_IsEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the current specs allows for physics to play </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (209) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetState"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetState( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current game state of the player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (778) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetTributeIncrementModifier"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetTributeIncrementModifier(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current game state of the player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (787) </b></td>
            </tr>
          </table>
        </p><a name="PrintOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PrintOnScreen( <span class="arg">String</span> text )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prints a message on the screen </p>
                <p>Prints the given message on the screen. It will stay there until you call PrintOnScreen_RemoveFromScreen() or print another message on the screen to replace it.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\printonscreen.scar] (11) </b></td>
            </tr>
          </table>
        </p><a name="PrintOnScreen_Add"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PrintOnScreen_Add( <span class="arg">Object</span> object, <span class="arg">String</span> id, <span class="arg">String</span> OPT_style )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prints the lua content of an object on the screen </p>
                <p>Prints the given message on the screen. If you would like to print multiple messages without clearing them you can assign them unique ID's. Must use PrintOnScreen_Remove(id) to remove each instance</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\printonscreen.scar] (88) </b></td>
            </tr>
          </table>
        </p><a name="PrintOnScreen_Remove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PrintOnScreen_Remove( <span class="arg">String</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes the PrintOnScreen text of a given ID </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\printonscreen.scar] (102) </b></td>
            </tr>
          </table>
        </p><a name="PrintOnScreen_RemoveFromScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PrintOnScreen_RemoveFromScreen(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove any messages from the screen </p>
                <p>Removes from the screen any messages put there with PrintOnScreen()</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\printonscreen.scar] (41) </b></td>
            </tr>
          </table>
        </p><a name="quit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 quit(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Exit to windows </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (79) </b></td>
            </tr>
          </table>
        </p><a name="render_viewport_toggle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 render_viewport_toggle(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disable rendering and render update </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (265) </b></td>
            </tr>
          </table>
        </p><a name="restart"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 restart(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restart a single player game, skirmish game, or the front end. (doesn't work in multiplayer games) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (58) </b></td>
            </tr>
          </table>
        </p><a name="RulesProfiler_Activate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RulesProfiler_Activate( <span class="arg">Boolean</span> on )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Activate the scar RulesProfiler </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (338) </b></td>
            </tr>
          </table>
        </p><a name="RulesProfiler_Enable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RulesProfiler_Enable( <span class="arg">Boolean</span> on )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable the scar RulesProfiler so it runs in the background. Call this before RulesProfiler_Activate </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (320) </b></td>
            </tr>
          </table>
        </p><a name="RulesProfiler_IsActive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RulesProfiler_IsActive(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the scar RulesProfiler is active </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (344) </b></td>
            </tr>
          </table>
        </p><a name="RulesProfiler_ResetTypeFilter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RulesProfiler_ResetTypeFilter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Don't filter the RulesProfiler displayed rules. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (332) </b></td>
            </tr>
          </table>
        </p><a name="RulesProfiler_SetTypeFilter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 RulesProfiler_SetTypeFilter( <span class="arg">String</span> filter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filter the RulesProfiler to filter displayed rules to given type. E.g., "SCAR", "AI" </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (326) </b></td>
            </tr>
          </table>
        </p><a name="Scar_DebugCheatMenuExecute"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_DebugCheatMenuExecute( <span class="arg">String</span> command )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>execute command string in cheat menu domain. Will only work if dev mode is enabled! (it's OFF by default in RTM builds) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (130) </b></td>
            </tr>
          </table>
        </p><a name="Scar_DebugConsoleExecute"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_DebugConsoleExecute( <span class="arg">String</span> command )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>execute console command string. Will only work if dev mode is enabled! (it's OFF by default in RTM builds) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (113) </b></td>
            </tr>
          </table>
        </p><a name="scartype"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 scartype( <span class="arg">StackVar</span> v )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns ST_NIL,ST_BOOLEAN,ST_NUMBER,ST_STRING,ST_TABLE,ST_FUNCTION,ST_SCARPOS,ST_EGROUP,ST_ENTITY,ST_SGROUP,ST_SQUAD,ST_TEAM,ST_MARKER, ST_PBG, or ST_UNKNOWN </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\global\LuaLibScarBase.cpp] (53) </b></td>
            </tr>
          </table>
        </p><a name="scartype_enum_tostring"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 scartype_enum_tostring( <span class="arg">StackVar</span> v )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a string representing the scartype when passed a scartype enum value </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\global\LuaLibScarBase.cpp] (108) </b></td>
            </tr>
          </table>
        </p><a name="scartype_tostring"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 scartype_tostring( <span class="arg">StackVar</span> v )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a string representing the scartype </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\global\LuaLibScarBase.cpp] (129) </b></td>
            </tr>
          </table>
        </p><a name="setsimframecap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 setsimframecap( <span class="arg">Real</span> fcap )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the simulation rate </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (232) </b></td>
            </tr>
          </table>
        </p><a name="setsimrate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 setsimrate( <span class="arg">Real</span> rate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the simulation rate </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (226) </b></td>
            </tr>
          </table>
        </p><a name="Setup_GetWinConditionOptions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Setup_GetWinConditionOptions( <span class="arg">StackVarTable</span> outOptions )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fill table with win condition options - schema is loaded from .win file </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaGameSetup.cpp] (95) </b></td>
            </tr>
          </table>
        </p><a name="Setup_SetPlayerName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Setup_SetPlayerName( <span class="arg">PlayerID</span> player, <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the UI name of a given player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaGameSetup.cpp] (77) </b></td>
            </tr>
          </table>
        </p><a name="Setup_SetPlayerRace"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Setup_SetPlayerRace( <span class="arg">PlayerID</span> player, <span class="arg">ScarRacePBG</span> racePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the race for a given player.  Use World_GetRaceBlueprint() to get the race id from the ME name. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaGameSetup.cpp] (27) </b></td>
            </tr>
          </table>
        </p><a name="Setup_SetPlayerStartingPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Setup_SetPlayerStartingPosition( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the starting position of a given player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaGameSetup.cpp] (173) </b></td>
            </tr>
          </table>
        </p><a name="Setup_SetPlayerTeam"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Setup_SetPlayerTeam( <span class="arg">PlayerID</span> p, <span class="arg">Integer</span> team_id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Put a player in a team. Use TEAM_NEUTRAL as the team_id to set the player as neutral </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaGameSetup.cpp] (149) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CallEntityFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CallEntityFunction( <span class="arg">SGroupID</span> sgroup, <span class="arg">Function</span> entityFunction, <span class="arg">variable</span> argument-list )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calls an Entity_ function on every entity in an sgroup </p>
                <p>Example: SGroup_CallEntityFunction( sg_riflemen, Entity_SetCrushable, false ) will call Entity_SetCrushable( entity, false ) for every entity in sg_riflemen. The first parameter of the supplied function must be EntityID</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (395) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CallSquadFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CallSquadFunction( <span class="arg">SGroupID</span> sgroup, <span class="arg">Function</span> squadFunction, <span class="arg">variable</span> argument list )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calls a Squad_ function on every squad in an sgroup </p>
                <p>Example: SGroup_CallSquadFunction( sg_riflemen, Squad_IncreaseVeterancyRank, 2, true ) will call Squad_IncreaseVeterancyRank( squad, 2, true ) for every squad in sg_riflemen. The first parameter of the supplied function must be SquadID</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (373) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CallSquadFunctionAllOrAny"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CallSquadFunctionAllOrAny( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all, <span class="arg">Function</span> squadFunction, <span class="arg">variable</span> argument list )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ALL or ANY squads in an sgroup satisfy a condition, using a Squad_ function to perform the query on each squad </p>
                <p>Example: SGroup_CallSquadFunctionAllOrAny( sg_commandos, ANY, Misc_IsSquadOnScreen, pct ) will call Misc_IsSquadOnScreen( squad, pct ) to determine whether ANY squad in sg_commandos is on screen The first parameter of the supplied function must be SquadID</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (384) </b></td>
            </tr>
          </table>
        </p><a name="Sim_GetDrawMarketInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_GetDrawMarketInfo(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Is the Market info currently being drawn? </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\source\runtime\cardinalcommon\private\cardinal\MarketTrade\Presentation\debug\LuaDebugSimLibMarketTrade.cpp] (50) </b></td>
            </tr>
          </table>
        </p><a name="Sim_GetTradeEntitiesFromEndpoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_GetTradeEntitiesFromEndpoint( <span class="arg">EntityID</span> endpoint, <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the egroup, then finds and adds all trade entities registered with an entity endpoint </p>
                <p>Returns the number of entities found</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\source\runtime\cardinalcommon\private\cardinal\MarketTrade\Presentation\lua\LuaWorldMarketTrade.cpp] (193) </b></td>
            </tr>
          </table>
        </p><a name="Sim_MarketAddSettlement"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_MarketAddSettlement( <span class="arg">EntityID</span> settlement )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a settlement to the market trade manager with specified ID. Settlement will be marked 'not trading' with all players. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\source\runtime\cardinalcommon\private\cardinal\MarketTrade\Presentation\lua\LuaWorldMarketTrade.cpp] (105) </b></td>
            </tr>
          </table>
        </p><a name="Sim_MarketExecuteTrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_MarketExecuteTrade( <span class="arg">PlayerID</span> player, <span class="arg">String</span> resourceName, <span class="arg">String</span> tradeTypeString )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Attempts to execute a trade on behalf of the specified player, for the specified resource, of the specified type. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\source\runtime\cardinalcommon\private\cardinal\MarketTrade\Presentation\lua\LuaWorldMarketTrade.cpp] (74) </b></td>
            </tr>
          </table>
        </p><a name="Sim_MarketSetTradeStatusPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_MarketSetTradeStatusPlayer( <span class="arg">PlayerID</span> firstPlayer, <span class="arg">PlayerID</span> secondPlayer, <span class="arg">Boolean</span> status )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets market trade status between two players, using the array index they appear at in PlayerManager::GetPlayers_CS() </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\source\runtime\cardinalcommon\private\cardinal\MarketTrade\Presentation\lua\LuaWorldMarketTrade.cpp] (34) </b></td>
            </tr>
          </table>
        </p><a name="Sim_MarketSetTradeStatusSettlement"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_MarketSetTradeStatusSettlement( <span class="arg">PlayerID</span> player, <span class="arg">EntityID</span> settlement, <span class="arg">Boolean</span> status )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets trade status between a player number and a settlement ID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\source\runtime\cardinalcommon\private\cardinal\MarketTrade\Presentation\lua\LuaWorldMarketTrade.cpp] (59) </b></td>
            </tr>
          </table>
        </p><a name="Sim_SetDrawMarketInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sim_SetDrawMarketInfo( <span class="arg">Boolean</span> bEnable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set/clear drawing of the market info. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\source\runtime\cardinalcommon\private\cardinal\MarketTrade\Presentation\debug\LuaDebugSimLibMarketTrade.cpp] (56) </b></td>
            </tr>
          </table>
        </p><a name="SitRep_PlayMovie"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SitRep_PlayMovie( <span class="arg">String</span> url )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play the specified movie. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (621) </b></td>
            </tr>
          </table>
        </p><a name="SitRep_StopMovie"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SitRep_StopMovie(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stop the currently playing movie. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (630) </b></td>
            </tr>
          </table>
        </p><a name="Sound_Debug_ShowAudioRegions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_Debug_ShowAudioRegions( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggles the display of the terrain audio environment zones on/off. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibSound.cpp] (98) </b></td>
            </tr>
          </table>
        </p><a name="Sound_IsPlaying"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_IsPlaying( <span class="arg">Integer</span> handle )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the sound associated with the handle is currently playing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibSound.cpp] (66) </b></td>
            </tr>
          </table>
        </p><a name="Sound_Play2D"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_Play2D( <span class="arg">String</span> eventName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a 2D sound. Returns a handle to the sound event. </p>
                <p>The sound will be 2D \Sound_Play2D( "VictoryEvent" )\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibSound.cpp] (43) </b></td>
            </tr>
          </table>
        </p><a name="Sound_Play3D"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_Play3D( <span class="arg">String</span> eventName, <span class="arg">EntityID</span> actor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a 3D sound on the entity. Returns a handle to the sound event. </p>
                <p>The sound will be 3D. \Sound_Play3D( "AddOnComplete", TheActor )\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibSound.cpp] (35) </b></td>
            </tr>
          </table>
        </p><a name="Sound_PostEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_PostEvent( <span class="arg">String</span> eventName, <span class="arg">Integer</span> handle )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Posts an event on an already playing sound. Returns a handle to the new sound event. </p>
                <p>Can be used to e.g. call a stop event or enable/disable effects on playing sounds. \Sound_PostEvent( "VictoryEvent", handle )\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibSound.cpp] (59) </b></td>
            </tr>
          </table>
        </p><a name="Sound_Stop"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_Stop( <span class="arg">Integer</span> handle )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stops sound associated with the handle. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibSound.cpp] (72) </b></td>
            </tr>
          </table>
        </p><a name="standard_test"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 standard_test( <span class="arg">String</span> unique_name Table unit_tests Boolean is_long_test )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>A closure-based class-like object for performing unit-tests and outputting test-results </p>
                <p>unique_name 			A name used as identifier in the json result file unit_tests 				A table containing UnitTest objects which this driver manages is_long_test 			(Optional, default is false) The driver will only run if the command line argument -TestLong is set</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\standard_test.scar] (1219) </b></td>
            </tr>
          </table>
        </p><a name="standard_test"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 standard_test( <span class="arg">String</span> unique_name String description Function start_function Function update_function Function finish_function Number timeout_seconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>A closure-based class-like object defining a single unit test </p>
                <p>unique_name 		- Unique name of the test. It is used as a key in the JSON result file. description 		- Description of this test and the feature it tests. start_function 		- Executed at test start to setup any preconditions to running the test (e.g. spawning a unit) update_function 	- Function which is repeatedly executed to test when the test should end. Should return true when the test needs to continue and false when the test needs to end. e.g. a timer which returns true until 5 seconds have elapsed, a predicate which returns true while a unit is still alive etc. finish_function 	- A predicate which tests the success of the test. This is invoked when the test is finished (indicated by the update function). If finish returns true then the test is successful otherwise the test is a failure. timeout_seconds 	- A timeout will result in test termination and the test will be considered a failure.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\standard_test.scar] (1715) </b></td>
            </tr>
          </table>
        </p><a name="StateTree_QueueGlobalStateTreeEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 StateTree_QueueGlobalStateTreeEntity( <span class="arg">Boolean</span> keepAlive, <span class="arg">String</span> openingBranchName, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Run a global state tree on an entity </p>
                <p>The state tree will be queued to run when safe to do so. A global state tree has its own lifetime, separate from any other state trees running on the target. parameters: - keepAlive: whether the state tree should restart if it finishes running - openingBranchName: name of state tree node to run - entity: the entity to run the tree on. This will be the context owner for the spawned state controller</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaStateTree.cpp] (41) </b></td>
            </tr>
          </table>
        </p><a name="StateTree_QueueGlobalStateTreePlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 StateTree_QueueGlobalStateTreePlayer( <span class="arg">Boolean</span> keepAlive, <span class="arg">String</span> openingBranchName, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Run a global state tree on a player </p>
                <p>The state tree will be queued to run when safe to do so. A global state tree has its own lifetime, separate from any other state trees running on the target. parameters: - keepAlive: whether the state tree should restart if it finishes running - openingBranchName: name of state tree node to run - player: the player to run the tree on. This will be the context owner for the spawned state controller</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaStateTree.cpp] (113) </b></td>
            </tr>
          </table>
        </p><a name="StateTree_QueueGlobalStateTreeSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 StateTree_QueueGlobalStateTreeSquad( <span class="arg">Boolean</span> keepAlive, <span class="arg">String</span> openingBranchName, <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Run a global state tree on a squad </p>
                <p>The state tree will be queued to run when safe to do so. A global state tree has its own lifetime, separate from any other state trees running on the target. parameters: - keepAlive: whether the state tree should restart if it finishes running - openingBranchName: name of state tree node to run - squad: the squad to run the tree on. This will be the context owner for the spawned state controller</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaStateTree.cpp] (77) </b></td>
            </tr>
          </table>
        </p><a name="statgraph_save"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 statgraph_save( <span class="arg">Boolean</span> begin )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Save the statgraph output to a file </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibApp.cpp] (452) </b></td>
            </tr>
          </table>
        </p><a name="std"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 std(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Predicate testing if a value is of specific type </p>
                <p>e.g. f = std.TypePredicate(); f() =&gt; 1; f() =&gt; 2 ...</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\standard.scar] (10) </b></td>
            </tr>
          </table>
        </p><a name="std"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 std(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Performs basic type-checking on [value] </p>
                <p>e.g. foo = 7; std.Validate(foo, 'foo', T_NUMBER, false)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\standard.scar] (47) </b></td>
            </tr>
          </table>
        </p><a name="std"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 std(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes an assertion. If the assertion turns out to be false, raises an error. </p>
                <p>e.g. foo = 7; assert(foo ~= nil, 'foo should not be nil!', 'If foo is nil we don't know how many bars to spawn!'') This is intended to be a more scripter friendly version of LUA assert.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\standard.scar] (96) </b></td>
            </tr>
          </table>
        </p><a name="switchplayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 switchplayer( <span class="arg">lua_State*</span> state )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Change the local player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\global\LuaLibGlobalMiscellaneous.cpp] (311) </b></td>
            </tr>
          </table>
        </p><a name="SyncWeapon_CanAttackNow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SyncWeapon_CanAttackNow( <span class="arg">SyncWeaponID</span> weapon, <span class="arg">EGroupID</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks whether a sync weapon can attack a target without moving or turning. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\syncweapons.scar] (198) </b></td>
            </tr>
          </table>
        </p><a name="SyncWeapon_Exists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SyncWeapon_Exists( <span class="arg">SyncWeaponID</span> weapon )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a sync weapon still exists in the game world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\syncweapons.scar] (155) </b></td>
            </tr>
          </table>
        </p><a name="SyncWeapon_GetEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SyncWeapon_GetEntity( <span class="arg">SyncWeaponID</span> weapon )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the EntityID of a sync weapon, or nil if it's been destroyed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\syncweapons.scar] (135) </b></td>
            </tr>
          </table>
        </p><a name="SyncWeapon_GetFromEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SyncWeapon_GetFromEGroup( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Registers the sync weapon in the egroup and returns a SyncWeaponID you can use to keep track of it </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\syncweapons.scar] (16) </b></td>
            </tr>
          </table>
        </p><a name="SyncWeapon_GetFromSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SyncWeapon_GetFromSGroup( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Registers the sync weapon in the sgroup and returns a SyncWeaponID you can use to keep track of it </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\syncweapons.scar] (63) </b></td>
            </tr>
          </table>
        </p><a name="SyncWeapon_GetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SyncWeapon_GetPosition( <span class="arg">SyncWeaponID</span> weapon )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the position of a sync weapon, or nil if it's been destroyed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\syncweapons.scar] (145) </b></td>
            </tr>
          </table>
        </p><a name="SyncWeapon_IsAttacking"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SyncWeapon_IsAttacking( <span class="arg">SyncWeaponID</span> weapon, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks whether or not the actual sync weapon in a squad attacking. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\syncweapons.scar] (185) </b></td>
            </tr>
          </table>
        </p><a name="SyncWeapon_IsOwnedByPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SyncWeapon_IsOwnedByPlayer( <span class="arg">SyncWeaponID</span> weapon, <span class="arg">PlayerID</span> OPT_player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the specified player owns the sync weapon. Use a playerid of nil to see if it's unonwed. </p>
                <p>If player is not specified, then the code will check to see if the SyncWeapon is owned by the world.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\syncweapons.scar] (103) </b></td>
            </tr>
          </table>
        </p><a name="SyncWeapon_SetAutoTargetting"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SyncWeapon_SetAutoTargetting( <span class="arg">SyncWeaponID</span> weapon, <span class="arg">String</span> hardpoint, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether a weapon to auto-target things or not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\syncweapons.scar] (163) </b></td>
            </tr>
          </table>
        </p><a name="Table_Concatenate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_Concatenate( <span class="arg">LuaTable</span> table1, <span class="arg">LuaTable</span> table2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a third table that points to every element in table1 and table2, in that order </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (113) </b></td>
            </tr>
          </table>
        </p><a name="Table_Contains"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_Contains( <span class="arg">LuaTable</span> OriginalTable, <span class="arg">Item</span> item )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if a table contains the specified item </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (81) </b></td>
            </tr>
          </table>
        </p><a name="Table_Copy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_Copy( <span class="arg">LuaTable</span> OriginalTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Copies the contents of the original table returns a new table with the contents of that table </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (130) </b></td>
            </tr>
          </table>
        </p><a name="Table_FillWithDefaultValues"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_FillWithDefaultValues( <span class="arg">Table</span> myTable, <span class="arg">Table</span> myDefaults, <span class="arg">String</span> OPT_errorMessage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Updates myTable by applying default values from the myDefaults table for any items that are not explicitly declared already </p>
                <p>If the myDefaults table has any item with the value REQUIRED_DATA, then you are declaring that there is no default for this item and that you REQUIRE the user provides a value. You will get a Fatal Scar Error if these are left out, listing exactly which required keys are missing.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (199) </b></td>
            </tr>
          </table>
        </p><a name="Table_GetRandomItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_GetRandomItem( <span class="arg">Table</span> table, <span class="arg">Integer</span> OPT_numberofitems )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a random item from a table. You can return multiple items (without duplicates) by passing in an optional number parameter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (10) </b></td>
            </tr>
          </table>
        </p><a name="Table_HasKey"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_HasKey( <span class="arg">LuaTable</span> table, <span class="arg">Variable</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>CHecks if a table contains the specified key </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (101) </b></td>
            </tr>
          </table>
        </p><a name="Table_MakeReadOnly"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_MakeReadOnly( <span class="arg">Table</span> table, <span class="arg">Boolean</span> OPT_recursive, <span class="arg">String</span> OPT_errorMessage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes a table read-only. This can be done recursively to also apply to any subtables. </p>
                <p>Any attempts to write to this table after this has been called will trigger a Fatal SCAR Error. You can customize the error message that will be given with the "error" parameter.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (150) </b></td>
            </tr>
          </table>
        </p><a name="Table_RemoveFirstItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_RemoveFirstItem( <span class="arg">TABLE</span> table, <span class="arg">OBJECT</span> toRemove )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds the first instance of a given item in the given table and removes it </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (176) </b></td>
            </tr>
          </table>
        </p><a name="Table_Reverse"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_Reverse( <span class="arg">Table</span> table )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reverse the order of items in a table. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (65) </b></td>
            </tr>
          </table>
        </p><a name="Table_Shuffle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Table_Shuffle( <span class="arg">Table</span> table )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Randomizes the order of items in a table. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\table.scar] (55) </b></td>
            </tr>
          </table>
        </p><a name="Terrain_GetCoverType_AsNumber"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Terrain_GetCoverType_AsNumber( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Takes a ScarPosition and returns a number representing the cover type at this position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (185) </b></td>
            </tr>
          </table>
        </p><a name="Terrain_GetCoverType_AsString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Terrain_GetCoverType_AsString( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Takes a ScarPosition and returns a string representing the cover type at this position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameMiscellaneous.cpp] (201) </b></td>
            </tr>
          </table>
        </p><a name="Test_SpawnSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Test_SpawnSquad( <span class="arg">a</span> table of tests to pass blueprint_name, <span class="arg">the</span> name of the SBP to spawn expected_population, <span class="arg">Optional</span> value to provide the expected population cost of the unit timeout_seconds, <span class="arg">Optional</span> how long before the test times out )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Verify that a provided SBP spawns in game correctly </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\common.scar] (14) </b></td>
            </tr>
          </table>
        </p><a name="Test_SquadAttackMove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Test_SquadAttackMove(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>optional expect_kill overrides automatic targeting discovery </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\common.scar] (268) </b></td>
            </tr>
          </table>
        </p><a name="Test_SquadAttackMoveEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Test_SquadAttackMoveEntity(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>optional expect_kill overrides automatic targeting discovery </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\common.scar] (471) </b></td>
            </tr>
          </table>
        </p><a name="Test_SquadMoveWithOptionalFacing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Test_SquadMoveWithOptionalFacing( <span class="arg">table</span> t_test_group string blueprint_name table move_and_face_targets float move_pos_x float move_pos_z float face_pos_x (optional) float face_pos_z (optional) int timeout_seconds (optional - default 20) int desired_tick_rate (optional) float move_target_acceptable_distance (optional - default 0.5) float facing_tolerance_degrees (optional - default 5) float spawn_pos_x (optional - default 7.5) float spawn_pos_z (optional - default 7.5) float deviation_tolerance (optional - default 1.0) )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Movement test designed to allow for optional facing </p>
                <p>Spawns a given unit blueprint and moves them to the given target destination, rotating the unit to the optional given facing if given upon arrival.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\squad_move.scar] (28) </b></td>
            </tr>
          </table>
        </p><a name="TestConfig_AutoGenerateTestTemplate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestConfig_AutoGenerateTestTemplate( <span class="arg">stack_level</span> (optional) target stack level to grab the parameters from name 			(optional) give the test a name to make it easier to identify in logs/config files )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Auto generates a test configuration template and stores it for later saving. This is a debug feature. </p>
                <p>The system tries to gather the parameters of the calling function and auto generates a template for it. The resulting template is added to a list which is written to cache:AutoConfig.json (see TestConfig_SaveCachedTestTemplates() above). If you use a non json compatible type you need to update _SerializeParameters above. See example for ScarPos.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testconfig.scar] (519) </b></td>
            </tr>
          </table>
        </p><a name="TestConfig_LoadFromCommandLine"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestConfig_LoadFromCommandLine(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tries to load the test configuration from the command line argument. See TEST_CONFIG_ARGUMENT_TEST_CONFIG above. See definition of TestConfig_LoadFromFile. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testconfig.scar] (458) </b></td>
            </tr>
          </table>
        </p><a name="TestConfig_LoadFromFile"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestConfig_LoadFromFile( <span class="arg">path</span> path (containing alias) to the file e.g: cache:AutoConfig.json )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tries to load the test configuration from the given file. </p>
                <p>The test configuration file is a json file containing groups of tests. Each test is defined with a function to call and its parameters. The system parses the file and tries to invoke the functions in the global space (by calling _G[function_string] ). Tests marked as active: false are skipped. Parameters either need to be json compatible (strings,  numbers, boolean) or have a 'constructor' function associated to them. e.g: 2D positions { "parameters": [ 0, -20 ], "func": "Util_ScarPos" }</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testconfig.scar] (270) </b></td>
            </tr>
          </table>
        </p><a name="TestConfig_SaveCachedTestTemplates"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestConfig_SaveCachedTestTemplates(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Writes the tests to a json file. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testconfig.scar] (489) </b></td>
            </tr>
          </table>
        </p><a name="TestGroup_BuildingBasics"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestGroup_BuildingBasics(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>expect_destruction=nil will let the test determine this value based on entity targeting settings </p>
                <p>expect_destruction=nil will let the test determine this value based on entity targeting settings</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\common_test_groups.scar] (278) </b></td>
            </tr>
          </table>
        </p><a name="TestGroup_SquadBasics"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestGroup_SquadBasics(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>idx used to should be unique per run to prevent entity stacking </p>
                <p>expect_destruction=nil will let the test determine this value based on entity targeting settings</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\common_test_groups.scar] (7) </b></td>
            </tr>
          </table>
        </p><a name="TestGroup_SquadBasics_NoCombat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestGroup_SquadBasics_NoCombat(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>small version of TestGroup_SquadBasics() without the combat-specific tests </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\common_test_groups.scar] (257) </b></td>
            </tr>
          </table>
        </p><a name="TestPhysics_Destruction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestPhysics_Destruction(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>spawns instances of an unit in a grid, then kills it to trigger physics destruction. Fails if to rigid bodies where created. params table : testName, unitPath, quantity, spacing, slowdown,  timeout_seconds, use_telemetry </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\physics.scar] (8) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_CallWithoutBlocking"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_CallWithoutBlocking( <span class="arg">Table</span> t_function_parameter function callback )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calls given method/parameter combinations one at a time to avoid blocking for long calls. </p>
                <p>Expects to receive a table in the format of {{func=&lt;function&gt;,params=&lt;table-containing-parameters in order}}. Calls one function at a time and queues the next function after completing the call. This allows the engine to simulate in between and will not block the other threads for extended amounts of time. Useful for tests that spawn a large amount of squads and entities and need to give them commands. Giving a callback to notify when the list has been processed is optional.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (389) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_DestroyAllNeutralEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_DestroyAllNeutralEntities(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroy neutral entities like wrecks, gaia, etc </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (221) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_DestroyAllPlayerSquadsAndEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_DestroyAllPlayerSquadsAndEntities( <span class="arg">Player</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroy player squads and entities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (209) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_DestroyAllSquadsAndEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_DestroyAllSquadsAndEntities(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destorys all player owned squads and every player or neutral entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (231) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_DestroySpecifiedPlayerSquadsAndEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_DestroySpecifiedPlayerSquadsAndEntities( <span class="arg">Player</span> player, <span class="arg">String</span> t_blueprintsToDestroy )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroy specified player squads and entities from the blueprint list </p>
                <p>Destroys all squads and entities belonging to player that match one of the</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (194) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_GetAllBlueprintNames"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_GetAllBlueprintNames( <span class="arg">Boolean</span> do_entity - true for entity blueprints, <span class="arg">false</span> for squad blueprints string base_filter - specify a string that matches a path inside attrib/instances usually used to match a folder table of strings - specify a black list filter after the base filter has been applied usually used to exclude files based on string matches (e.g: "villager_armed") )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns all blueprints that match the given filters. </p>
                <p>Filters the property bags inside attrib/instances and returns the paths that match the filters. After matching the base filter this part of the path is removed and the detail filter is applied. Example: base_filter "sbps\\races\\eng\\" will match all english units. detail filter "archer" will return return a table with "unit_archer_2_eng", "unit_archer_3_eng", "unit_archer_4_eng"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (686) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_HighlightCircleRadius"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_HighlightCircleRadius( <span class="arg">ScarPos</span> position real radius real opt_lifetime real opt_red_value real opt_green_value real opt_blue_value real opt_number_of_circle_segments int opt_thickness_of_circle_border )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Draws a circle at the given location. </p>
                <p>calls a render debug function in a way that creates a visible outline on terrain. Any provided colour value that isn't within the char bit range (0 - 255) will be adjusted. The colour, segment and thickness parameters are optional and will default to reasonable values if excluded.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (771) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_MakeBuildingFast"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_MakeBuildingFast( <span class="arg">String</span> ebpname_building )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Applies a modifier making player 1 build the given ebp faster. The modifier is returned. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (665) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_PrintAllSquadsAndEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_PrintAllSquadsAndEntities(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prints the location and health of all player owned squads and entities </p>
                <p>Iterates over all players and prints the position and health of all squads and entities the player owns.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (800) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_PrintPlayerEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_PrintPlayerEntities( <span class="arg">Player</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prints the location and health of all entities owned by a player </p>
                <p>Iterates over all entities a player owns and prints their blueprint name, position and health.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (850) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_PrintPlayerSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_PrintPlayerSquads( <span class="arg">Player</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prints the location and health of all squads owned by a player </p>
                <p>Iterates over all squads a player owns and prints their blueprint name, position and health.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (820) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_RegisterTest"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_RegisterTest( <span class="arg">t_test_group</span> a table of tests to be run by the same driver )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new unit test and add it to the given table </p>
                <p>Once all tests have been added using this function, the test group passed to t_test_group should be passed</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (30) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_SpawnEntitiesInGridWithoutBlocking"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_SpawnEntitiesInGridWithoutBlocking( <span class="arg">Player</span> player EGroup egroup, <span class="arg">Table</span> t_ebpnames Position pos_top_left Number spacing function callback )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Spawn entities in a grid based on a list of blueprint names. </p>
                <p>Grabs one entry of the given blueprint list each iteration and spawns it. Then it creates a new timed rule requesting to be called again as soon as possible. This gives the engine time to update in between calls so that the other threads are not blocked in case a huge list of units needs to get spawned. Once every unit is spawned the given callback function will be called. The spawning grid starts at the given top left corner and spawns in an axis aligned grid based on the given spacing. The grid expands towards positive x/z</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (370) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_SpawnSquadsInGridWithoutBlocking"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_SpawnSquadsInGridWithoutBlocking( <span class="arg">Player</span> player SGroup sgroup, <span class="arg">Table</span> t_sbpnames Position pos_spawn function callback )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Spawn squads based on a list of blueprint names. </p>
                <p>Grabs one entry of the given blueprint list each iteration and spawns it. Then it creates a new timed rule requesting to be called again as soon as possible. This gives the engine time to update in between calls so that the other threads are not blocked in case a huge list of units needs to get spawned. Once every unit is spawned the given callback function will be called.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (255) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_TestClose"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_TestClose( <span class="arg">Any</span> value1, <span class="arg">Any</span> value2, <span class="arg">Number</span> OPT_acceptable_difference, <span class="arg">String</span> OPT_value1_name, <span class="arg">String</span> OPT_value2_name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Compare two values and print to standard_test if they are close enough </p>
                <p>Uses equality if acceptable_difference is nil or 0</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (75) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_TestCompare"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_TestCompare( <span class="arg">Any</span> value1, <span class="arg">Any</span> value2, <span class="arg">String</span> OPT_value1_name, <span class="arg">String</span> OPT_value2_name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Compare two values using the given comparator </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (114) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_TestDirectionsSame"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_TestDirectionsSame( <span class="arg">EGroupID</span> item1, <span class="arg">EGroupID</span> item2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if directions are equal and prints message to standard_test if they are not </p>
                <p>The items must of of types that can have a direction resolved on them with Util_GetDirection()</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (168) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_TestEqual"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_TestEqual( <span class="arg">Any</span> value1, <span class="arg">Any</span> value2, <span class="arg">String</span> OPT_value1_name, <span class="arg">String</span> OPT_value2_name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Compare two values and print to standard_test if they are equal </p>
                <p>Uses equality if acceptable_difference is nil or 0</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (107) </b></td>
            </tr>
          </table>
        </p><a name="TestUtil_TestPositionsSame"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TestUtil_TestPositionsSame( <span class="arg">EGroupID</span> object1, <span class="arg">EGroupID</span> object2, <span class="arg">Number</span> max_accepted_difference )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if positions are equal and prints message to standard_test if they are not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\test\testutil.scar] (137) </b></td>
            </tr>
          </table>
        </p><a name="UI_AddChild"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_AddChild( <span class="arg">String</span> elementName, <span class="arg">String</span> typeName, <span class="arg">String</span> childName, <span class="arg">StackVarTable</span> propertyTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a new child named childName and of type typeName to elementName. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (426) </b></td>
            </tr>
          </table>
        </p><a name="UI_AddCommandBinding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_AddCommandBinding( <span class="arg">String</span> groupName, <span class="arg">String</span> bindingName, <span class="arg">String</span> callbackName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a command binding for groupName.bindingName to global function callbackName. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (513) </b></td>
            </tr>
          </table>
        </p><a name="UI_AddEventHandler"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_AddEventHandler( <span class="arg">String</span> elementName, <span class="arg">String</span> eventName, <span class="arg">String</span> callbackName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds the event handler on elementName for event eventName to global function callbackName(elementName, eventName). </p>
                <p>The callback function should take two arguments, the element name and the event name.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (489) </b></td>
            </tr>
          </table>
        </p><a name="UI_AddText"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_AddText( <span class="arg">String</span> elementName, <span class="arg">String</span> text )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add text to elementName. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (439) </b></td>
            </tr>
          </table>
        </p><a name="UI_Clear"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_Clear( <span class="arg">String</span> elementName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear the contents of elementName. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (457) </b></td>
            </tr>
          </table>
        </p><a name="UI_IsLayerContentLoaded"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_IsLayerContentLoaded( <a href="enum_list.htm#FrontEnd_Layer">FrontEnd_Layer</a> layer, <span class="arg">String</span> contentPath )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if content is loaded for a specific layer </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (571) </b></td>
            </tr>
          </table>
        </p><a name="UI_MessageBoxHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_MessageBoxHide( <span class="arg">DialogResult</span> dialogResult )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>If the message box is activated, close it.  The callback will receive the button parameter given. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (103) </b></td>
            </tr>
          </table>
        </p><a name="UI_MessageBoxReset"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_MessageBoxReset(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset message box data set by previous calls (to display a new message box). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (110) </b></td>
            </tr>
          </table>
        </p><a name="UI_MessageBoxSetButton"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_MessageBoxSetButton( <span class="arg">DialogResult</span> dialogResult, <span class="arg">String</span> text, <span class="arg">String</span> tooltip, <span class="arg">String</span> icon, <span class="arg">Boolean</span> isEnabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the text/tooltip/enabled state of a button on the dialog. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (122) </b></td>
            </tr>
          </table>
        </p><a name="UI_MessageBoxSetText"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_MessageBoxSetText( <span class="arg">String</span> title, <span class="arg">String</span> message )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the title and message body of the dialog. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (130) </b></td>
            </tr>
          </table>
        </p><a name="UI_Remove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_Remove( <span class="arg">String</span> elementName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove elementName from its parent. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (449) </b></td>
            </tr>
          </table>
        </p><a name="UI_RemoveCommandBinding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_RemoveCommandBinding( <span class="arg">String</span> groupName, <span class="arg">String</span> bindingName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a command binding for groupName.bindingName. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (523) </b></td>
            </tr>
          </table>
        </p><a name="UI_RemoveEventHandler"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_RemoveEventHandler( <span class="arg">String</span> elementName, <span class="arg">String</span> eventName, <span class="arg">String</span> callbackName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes the event handler on elementName for event eventName to global function callbackName(elementName, eventName). </p>
                <p>The callback function should take two arguments, the element name and the event name.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (502) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetDataContext"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetDataContext( <span class="arg">String</span> elementName, <span class="arg">StackVarTable</span> table )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts table to a data context for bindings of elementName. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (531) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetEntityDataContext"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetEntityDataContext( <span class="arg">EntityID</span> entity, <span class="arg">StackVarTable</span> table )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts table to a data context exposed through entity models. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (541) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetPlayerDataContext"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetPlayerDataContext( <span class="arg">PlayerID</span> player, <span class="arg">StackVarTable</span> table )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts table to a data context exposed through player models. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (551) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetPropertyValue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetPropertyValue( <span class="arg">String</span> elementName, <span class="arg">String</span> propertyName, <span class="arg">StackVar</span> stackVar )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the property propertyName on elementName to value stackVar. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (465) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetPropertyValues"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetPropertyValues( <span class="arg">String</span> elementName, <span class="arg">StackVarTable</span> propertyTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the properties on elementName to the key/value pairs in propertyTable. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (476) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetSquadDataContext"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetSquadDataContext( <span class="arg">SquadID</span> squad, <span class="arg">StackVarTable</span> table )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts table to a data context exposed through squad models. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\wpfgfrontend\hud\lua\LuaLibWPFGUI.cpp] (561) </b></td>
            </tr>
          </table>
        </p><a name="UnitEntry_CompleteAllDeploymentsImmediately"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UnitEntry_CompleteAllDeploymentsImmediately(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Forces ALL in-process deployments to complete instantly. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_unitentry.scar] (608) </b></td>
            </tr>
          </table>
        </p><a name="UnitEntry_CompleteDeploymentImmediately"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UnitEntry_CompleteDeploymentImmediately( <span class="arg">DeploymentID</span> deployment )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Forces a specific in-process deployment to complete instantly. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_unitentry.scar] (623) </b></td>
            </tr>
          </table>
        </p><a name="UnitEntry_DeploySquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UnitEntry_DeploySquads( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Table</span> units, <span class="arg">MarkerID/Pos</span> spawn, <span class="arg">Table</span> OPT_entryMethod, <span class="arg">Real</span> OPT_stagger, <span class="arg">Table</span> OPT_options )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create and spawn a set of units (a "deployment") in one go. </p>
                <p>See details here: http://relicwiki/display/EE/Core+Unit+Entry+Framework</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_unitentry.scar] (19) </b></td>
            </tr>
          </table>
        </p><a name="UnitEntry_ResolveSpawnLocation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UnitEntry_ResolveSpawnLocation(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a spawnLocation and Facing. If the unit has a custom spawn, it uses that, otherwise it gets it from deployment </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_unitentry.scar] (671) </b></td>
            </tr>
          </table>
        </p><a name="World_EndSP"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_EndSP( <span class="arg">Boolean</span> localPlayerWon, <span class="arg">WinReason</span> winReason )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Wins/loses a single team mission for the local teams, with given win reason </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (711) </b></td>
            </tr>
          </table>
        </p><a name="World_IsGameOver"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_IsGameOver(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Is the game over? </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (758) </b></td>
            </tr>
          </table>
        </p><a name="World_KillPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_KillPlayer( <span class="arg">PlayerID</span> player, <span class="arg">KillPlayerReason</span> reason )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kills the player with a reason. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (662) </b></td>
            </tr>
          </table>
        </p><a name="World_LeaveGameMatch"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_LeaveGameMatch(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Quit the game without declaring it over and return to frontend. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (752) </b></td>
            </tr>
          </table>
        </p><a name="World_SetPlayerLose"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_SetPlayerLose( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the player to a lose state, with a reason for losing, and kills the player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (647) </b></td>
            </tr>
          </table>
        </p><a name="World_SetPlayerWin"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_SetPlayerWin( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the player to a win state. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (656) </b></td>
            </tr>
          </table>
        </p><a name="World_SetTeamWin"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_SetTeamWin( <span class="arg">Integer</span> winningTeam, <span class="arg">WinReason</span> winReason )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets every player on a team to a win state, with a reason for winning. Also sets all other players to a lose state, and kills them (if they're not already dead) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGame.cpp] (675) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;AIInterface"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;AIInterface</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="AI_AddHeavyCoverEbpOccupancyOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_AddHeavyCoverEbpOccupancyOverride( <span class="arg">PlayerID</span> pPlayer, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Integer</span> occupancyOverride )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>overrides the Heavy Cover Occupancy for the passed EBP </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4627) </b></td>
            </tr>
          </table>
        </p><a name="AI_ClearPBGRepairPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ClearPBGRepairPriority( <span class="arg">PlayerID</span> pPlayer, <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>This clears the repair priority value for a given squad or building PBG. </p>
                <p>pbgShortname is the PBG of the squad or building to clear its priority value.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4359) </b></td>
            </tr>
          </table>
        </p><a name="AI_ConvertToSimEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ConvertToSimEntity( <span class="arg">EntityID</span> pAIEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts an AIEntity into an Entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4551) </b></td>
            </tr>
          </table>
        </p><a name="AI_ConvertToSimPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ConvertToSimPlayer( <span class="arg">PlayerID</span> pAIPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts an AIPlayer into a Player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4531) </b></td>
            </tr>
          </table>
        </p><a name="AI_ConvertToSimSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ConvertToSimSquad( <span class="arg">SquadID</span> pAISquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts an AISquad into a Squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4541) </b></td>
            </tr>
          </table>
        </p><a name="AI_CreateEncounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_CreateEncounter( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Integer</span> encounterType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter for player </p>
                <p>EncounterType is one of: AIEncounterType_DefendArea, AIEncounterType_AttackArea, AIEncounterType_Move, AIEncounterType_Ability,</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (509) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugAttackEncounterPositionScoringEnable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugAttackEncounterPositionScoringEnable( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables debugging of AI Attack Encounter Encounter Position Scoring </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4709) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugAttackEncounterPositionScoringIsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugAttackEncounterPositionScoringIsEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if AI Attack Encounter Position Scoring is enabled </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4699) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugLuaEnable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugLuaEnable( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables AI Lua Debugging </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4667) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugLuaIsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugLuaIsEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if AI Lua Debugging is enabled </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4657) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugRatingEnable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugRatingEnable( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables AI Construction Debugging </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4727) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugRatingIsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugRatingIsEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if AI Construction Debugging is enabled </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4717) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugRenderAllTaskChildrenEnable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugRenderAllTaskChildrenEnable( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables AI Rendering of All Task Children </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4691) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugRenderAllTaskChildrenIsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugRenderAllTaskChildrenIsEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if AI Rendering of All Task Children is enabled </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4681) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugSkirmishForwardDeployEnable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugSkirmishForwardDeployEnable( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables AI Skirmish ForwardDeploy Debugging </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4745) </b></td>
            </tr>
          </table>
        </p><a name="AI_DebugSkirmishForwardDeployIsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DebugSkirmishForwardDeployIsEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if AI Skirmish ForwardDeploy Debugging is enabled </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4735) </b></td>
            </tr>
          </table>
        </p><a name="AI_DisableAllEconomyOverrides"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DisableAllEconomyOverrides( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disable all of the economy overrides for the AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4513) </b></td>
            </tr>
          </table>
        </p><a name="AI_DoString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DoString( <span class="arg">Integer</span> playerID, <span class="arg">String</span> string )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Execute a string as lua in the given player's AI LuaConfig </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (184) </b></td>
            </tr>
          </table>
        </p><a name="AI_Enable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_Enable( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or Disables an AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (163) </b></td>
            </tr>
          </table>
        </p><a name="AI_EnableAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_EnableAll( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or Disables all AI players </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (294) </b></td>
            </tr>
          </table>
        </p><a name="AI_EnableEconomyOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_EnableEconomyOverride( <span class="arg">PlayerID</span> pPlayer, <span class="arg">String</span> overrideName, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable the economy override for the AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4499) </b></td>
            </tr>
          </table>
        </p><a name="AI_FindAISquadByID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_FindAISquadByID( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Integer</span> UID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds an AISquad owned by the specified player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4597) </b></td>
            </tr>
          </table>
        </p><a name="AI_FindBestProducibleEntityPBGforEntityTypes"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_FindBestProducibleEntityPBGforEntityTypes( <span class="arg">PlayerID</span> player, <span class="arg">String</span> entityTypeNames )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the current best producible Entity PBG corresponding to the specified Entity Types. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5530) </b></td>
            </tr>
          </table>
        </p><a name="AI_FindBestProducibleSquadPBGforSquadTypes"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_FindBestProducibleSquadPBGforSquadTypes( <span class="arg">PlayerID</span> player, <span class="arg">String</span> squadTypeNames )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the current best producible Squad PBG corresponding to the specified Squad Types. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5512) </b></td>
            </tr>
          </table>
        </p><a name="AI_FindConstructionLocation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_FindConstructionLocation( <span class="arg">PlayerID</span> pPlayer, <span class="arg">PropertyBagGroup</span> pPbg, <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find a valid construction location for a pbg, using a spiral search. Returns INVALID_POS if it fails. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5437) </b></td>
            </tr>
          </table>
        </p><a name="AI_GetAllMilitaryPointsOfType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetAllMilitaryPointsOfType( <span class="arg">PlayerID</span> pAIPlayer, <a href="enum_list.htm#AIMilitaryTargetType">AIMilitaryTargetType</a> type, <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stores entities of a specific type owned by a player in an egroup parameter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4394) </b></td>
            </tr>
          </table>
        </p><a name="AI_GetAndReserveNextTaskID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetAndReserveNextTaskID( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get and reserve the next available AITaskID (which can be used to create an AIEncounter from SCAR). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (520) </b></td>
            </tr>
          </table>
        </p><a name="AI_GetDifficulty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetDifficulty( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the difficulty level of this AI player </p>
                <p>Levels can be one of: GD_Easy, GD_Normal, GD_Hard, GD_Expert, GD_INVALID</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4426) </b></td>
            </tr>
          </table>
        </p><a name="AI_GetPersonality"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetPersonality( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the personality name of this AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4456) </b></td>
            </tr>
          </table>
        </p><a name="AI_GetPersonalityLuaFileName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetPersonalityLuaFileName( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the personality lua file name of this AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4473) </b></td>
            </tr>
          </table>
        </p><a name="AI_IsAIPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_IsAIPlayer( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if player is an AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (304) </b></td>
            </tr>
          </table>
        </p><a name="AI_IsAITargetable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_IsAITargetable( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if player is an AIPlayer and is targetable by other AI players. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (274) </b></td>
            </tr>
          </table>
        </p><a name="AI_IsDebugDisplay"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_IsDebugDisplay( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if the AI debug display is enabled </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (382) </b></td>
            </tr>
          </table>
        </p><a name="AI_IsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_IsEnabled( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if player is a AIPlayer and is enabled </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (217) </b></td>
            </tr>
          </table>
        </p><a name="AI_IsLocalAIPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_IsLocalAIPlayer( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the player is an AIPlayer running on the local machine </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (237) </b></td>
            </tr>
          </table>
        </p><a name="AI_IsPositionNearInSupplySector"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_IsPositionNearInSupplySector( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true when position in a sector that is adjacent to an in-supply sector </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5475) </b></td>
            </tr>
          </table>
        </p><a name="AI_IsSquadValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_IsSquadValid( <span class="arg">SquadID</span> pSquadAI )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if this is a valid AISquad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4525) </b></td>
            </tr>
          </table>
        </p><a name="AI_LockEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_LockEntity( <span class="arg">PlayerID</span> pPlayer, <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Locks the entity and disables its tactics (if any) and the AI will no longer use this object </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4112) </b></td>
            </tr>
          </table>
        </p><a name="AI_LockSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_LockSquad( <span class="arg">PlayerID</span> pPlayer, <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Locks the squad and disables its tactics (if any) and the AI will no longer use this object </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4168) </b></td>
            </tr>
          </table>
        </p><a name="AI_LockSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_LockSquads( <span class="arg">PlayerID</span> pPlayer, <span class="arg">SGroupID</span> squads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Locks the squads and disables its tactics (if any) and the AI will no longer use these objects </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4208) </b></td>
            </tr>
          </table>
        </p><a name="AI_PauseCurrentTasks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_PauseCurrentTasks( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Boolean</span> pause )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pauses or unpauses currently running tasks </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (196) </b></td>
            </tr>
          </table>
        </p><a name="AI_PlayerAddExclusionArea"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_PlayerAddExclusionArea( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Position</span> position, <span class="arg">Real</span> noPathRadius, <span class="arg">Real</span> noTargetRadius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add an Exclusion area to the AI Player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4757) </b></td>
            </tr>
          </table>
        </p><a name="AI_PlayerDataDictionarySetBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_PlayerDataDictionarySetBool( <span class="arg">PlayerID</span> player, <span class="arg">String</span> varName, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named bool value in the AIPlayer DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5188) </b></td>
            </tr>
          </table>
        </p><a name="AI_PlayerDataDictionarySetNumber"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_PlayerDataDictionarySetNumber( <span class="arg">PlayerID</span> player, <span class="arg">String</span> varName, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named number value in the AIPlayer DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5260) </b></td>
            </tr>
          </table>
        </p><a name="AI_PlayerDataDictionarySetPBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_PlayerDataDictionarySetPBG( <span class="arg">PlayerID</span> player, <span class="arg">String</span> varName, <span class="arg">PropertyBagGroup</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named PBG value in the AIPlayer DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5384) </b></td>
            </tr>
          </table>
        </p><a name="AI_PlayerRemoveExclusionArea"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_PlayerRemoveExclusionArea( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Position</span> position, <span class="arg">Real</span> noPathRadius, <span class="arg">Real</span> noTargetRadius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove the Exclusion area from the AI Player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4783) </b></td>
            </tr>
          </table>
        </p><a name="AI_RemoveCapturePointHighPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_RemoveCapturePointHighPriority( <span class="arg">PlayerID</span> pPlayer, <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>This clears the importance bonus on this capture point </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4299) </b></td>
            </tr>
          </table>
        </p><a name="AI_RestartSCAR"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_RestartSCAR( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restarts the AI </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (321) </b></td>
            </tr>
          </table>
        </p><a name="AI_RestoreDefaultPersonalitySettings"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_RestoreDefaultPersonalitySettings( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restores the default personality and difficulty settings of this AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4487) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetAISquadCombatRangePolicyTaskOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetAISquadCombatRangePolicyTaskOverride( <span class="arg">SquadID</span> pSquadAI, <span class="arg">CombatRangePolicy</span> policy )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set Combat Range Policy for the AISquad, overrides the one set at Encounter/task level </p>
                <p>policy is one of: AICombatRangePolicy_Default, AICombatRangePolicy_Ranged_MinRange, AICombatRangePolicy_Ranged_MaxRange, AICombatRangePolicy_MeleeRange</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4563) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetAITargetable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetAITargetable( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Boolean</span> targetable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or Disables an AI player to be targetable by other AI players. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (253) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetCapturePointAsHighPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetCapturePointAsHighPriority( <span class="arg">PlayerID</span> pPlayer, <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>This sets importance bonus of the given capture point </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4277) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetDebugDisplay"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetDebugDisplay( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable the AI debug display </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (359) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetDifficulty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetDifficulty( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Integer</span> difficultyLevel )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the difficulty level of this AI player </p>
                <p>Levels can be one of: GD_Easy, GD_Normal, GD_Hard, GD_Expert</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4411) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetPBGRepairPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetPBGRepairPriority( <span class="arg">PlayerID</span> pPlayer, <span class="arg">String</span> pbgShortname, <span class="arg">Real</span> priorityValue )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>This sets the repair priority value for a given squad or building PBG. </p>
                <p>pbgShortname is the PBG of the squad or building to change its priority value. priorityValue must be within range [0, 1], with higher value being more desirable to repair.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4323) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetPersonality"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetPersonality( <span class="arg">PlayerID</span> pPlayer, <span class="arg">String</span> personalityName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the personality name of this AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4444) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetResourceIncomeDesire"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetResourceIncomeDesire( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> resourceType, <span class="arg">Real</span> desiredIncome )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set an AI Player's desired income of specified resource type at specified value. This will affect the AI resource gathering, building construction and production priority in trying to achieve the specified resource income. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5483) </b></td>
            </tr>
          </table>
        </p><a name="AI_SquadDataDictionaryClearSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SquadDataDictionaryClearSquad( <span class="arg">SquadID</span> squad, <span class="arg">String</span> varName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear a named Squad in the AISquad DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5366) </b></td>
            </tr>
          </table>
        </p><a name="AI_SquadDataDictionaryGetBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SquadDataDictionaryGetBool( <span class="arg">SquadID</span> squad, <span class="arg">String</span> varName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a named bool value in the AISquad DataDictionary, returns false if the value doesn't exist </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5245) </b></td>
            </tr>
          </table>
        </p><a name="AI_SquadDataDictionaryGetNumber"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SquadDataDictionaryGetNumber( <span class="arg">SquadID</span> squad, <span class="arg">String</span> varName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a named number value in the AISquad DataDictionary, returns 0 if the value doesn't exist </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5307) </b></td>
            </tr>
          </table>
        </p><a name="AI_SquadDataDictionaryGetSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SquadDataDictionaryGetSquad( <span class="arg">SquadID</span> squad, <span class="arg">String</span> varName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a named Squad in the AISquad DataDictionary, returns null if the entry doesn't exist </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5323) </b></td>
            </tr>
          </table>
        </p><a name="AI_SquadDataDictionarySetBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SquadDataDictionarySetBool( <span class="arg">SquadID</span> squad, <span class="arg">String</span> varName, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named bool value in the AISquad DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5226) </b></td>
            </tr>
          </table>
        </p><a name="AI_SquadDataDictionarySetNumber"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SquadDataDictionarySetNumber( <span class="arg">SquadID</span> squad, <span class="arg">String</span> varName, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named number value in the AISquad DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5293) </b></td>
            </tr>
          </table>
        </p><a name="AI_SquadDataDictionarySetPBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SquadDataDictionarySetPBG( <span class="arg">SquadID</span> squad, <span class="arg">String</span> varName, <span class="arg">PropertyBagGroup</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named PBG value in the AISquad DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5420) </b></td>
            </tr>
          </table>
        </p><a name="AI_SquadDataDictionarySetSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SquadDataDictionarySetSquad( <span class="arg">SquadID</span> squad, <span class="arg">String</span> varName, <span class="arg">SquadID</span> targetSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named Squad in the AISquad DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5345) </b></td>
            </tr>
          </table>
        </p><a name="AI_ToggleDebugDisplay"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ToggleDebugDisplay( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggles the AI debug display </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (335) </b></td>
            </tr>
          </table>
        </p><a name="AI_UnlockAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_UnlockAll( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unlocks all designer locked squads for player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4261) </b></td>
            </tr>
          </table>
        </p><a name="AI_UnlockEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_UnlockEntity( <span class="arg">PlayerID</span> pPlayer, <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unlocks this entity so that AI can use it again </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4141) </b></td>
            </tr>
          </table>
        </p><a name="AI_UnlockSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_UnlockSquad( <span class="arg">PlayerID</span> pPlayer, <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unlocks the given squad so the AI can use it again </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4221) </b></td>
            </tr>
          </table>
        </p><a name="AI_UnlockSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_UnlockSquads( <span class="arg">PlayerID</span> pPlayer, <span class="arg">SGroupID</span> squads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Locks the squads and disables its tactics (if any) and the AI will no longer use these objects </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4248) </b></td>
            </tr>
          </table>
        </p><a name="AI_UpdateStatics"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_UpdateStatics( <span class="arg">PlayerID</span> pPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Re-updates the AI in regards to all the static objects in the world (if SCAR creates new strategic points dynamically this will need to be called) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4611) </b></td>
            </tr>
          </table>
        </p><a name="AIAbilityEncounter_AbilityGuidance_SetAbilityPBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIAbilityEncounter_AbilityGuidance_SetAbilityPBG( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">PropertyBagGroup</span> abilityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set ability for ability encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4078) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_Cancel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_Cancel( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Ends the encounter and deletes it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (576) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_AddForcedCombatTargetEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_AddForcedCombatTargetEGroup( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>add the EGroup to the Encounter forced target list. NOTE: supported only by the Attack Encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2469) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_AddForcedCombatTargetEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_AddForcedCombatTargetEntity( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>add the Entity to the Encounter forced target list. NOTE: supported only by the Attack Encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2427) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_AddForcedCombatTargetSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_AddForcedCombatTargetSGroup( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>add the SGroup to the Encounter forced target list. NOTE: supported only by the Attack Encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2446) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_AddForcedCombatTargetSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_AddForcedCombatTargetSquad( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>add the Squad to the Encounter forced target list. NOTE: supported only by the Attack Encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2408) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_ClearForcedCombatTargets"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_ClearForcedCombatTargets( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear the encounter Forced Combat Targets </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2492) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_EnableCombatGarrison"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_EnableCombatGarrison( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables squads in combat garrisoning. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2350) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_RemoveForcedCombatTargetEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_RemoveForcedCombatTargetEGroup( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>remove the EGroup from the Encounter forced target list. NOTE: supported only by the Attack Encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2570) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_RemoveForcedCombatTargetEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_RemoveForcedCombatTargetEntity( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>remove the Entity from the Encounter forced target list. NOTE: supported only by the Attack Encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2528) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_RemoveForcedCombatTargetSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_RemoveForcedCombatTargetSGroup( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>remove the SGroup from the Encounter forced target list. NOTE: supported only by the Attack Encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2547) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_RemoveForcedCombatTargetSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_RemoveForcedCombatTargetSquad( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>remove the Squad from the Encounter forced target list. NOTE: supported only by the Attack Encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2509) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_SetCombatRangePolicy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_SetCombatRangePolicy( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">CombatRangePolicy</span> policy )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set Combat Range Policy for the encounter </p>
                <p>policy is one of: AICombatRangePolicy_Default, AICombatRangePolicy_Ranged_MinRange, AICombatRangePolicy_Ranged_MaxRange, AICombatRangePolicy_MeleeRange</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2368) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_CombatGuidance_SetSpreadAttackers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_CombatGuidance_SetSpreadAttackers( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set if the Attack Encounter should spread the attackers on multiple targets </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2392) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_DataDictionarySetBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_DataDictionarySetBool( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">String</span> varName, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named bool value in the Encounter DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5206) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_DataDictionarySetNumber"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_DataDictionarySetNumber( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">String</span> varName, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named number value in the Encounter DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5273) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_DataDictionarySetPBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_DataDictionarySetPBG( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">String</span> varName, <span class="arg">PropertyBagGroup</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a named PBG value in the Encounter DataDictionary </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5400) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_DefenseGuidance_EnableIdleGarrison"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_DefenseGuidance_EnableIdleGarrison( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables idle squads garrisoning. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2334) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_AddEncouterSetupLocation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_AddEncouterSetupLocation( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Position</span> pos, <span class="arg">Position</span> facingDir )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a setup location and facing direction for this encounter not specifically assigned to any squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2169) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_ClearSetupLocationOverrides"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_ClearSetupLocationOverrides( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>clears the encounter setup locations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2240) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_EnableAggressiveEngagementMove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_EnableAggressiveEngagementMove( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable / disable aggressive move into engagement area </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2030) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_EnableConstruction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_EnableConstruction( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable construction in Town Life encounters </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2062) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_EnableSetupLocations"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_EnableSetupLocations( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable setup locations in attack and defend encounters </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2046) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_SetAllowResourceGatheringOutsideLeash"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_SetAllowResourceGatheringOutsideLeash( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> allowOutsideLeash )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a TownLife Encounter whether to allow resource gathering from deposits outside of Encounter leash. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2107) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_SetAllowReturnToPreviousStages"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_SetAllowReturnToPreviousStages( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable encounter to return to previous stages if they fail to meet conditions for current stage. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2256) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_SetCoordinatedSetup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_SetCoordinatedSetup( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable coordinated arrival in attack encounters </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2150) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_SetEnableSniperReactions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_SetEnableSniperReactions( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables sniper reactions </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2272) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_SetEnableSubEngagementAreas"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_SetEnableSubEngagementAreas( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables SubEngagementAreas </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2318) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_SetMaxEngagementTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_SetMaxEngagementTime( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> seconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets max time, in seconds, to accomplish encounter, once the target is engaged. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1998) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_SetMaxIdleTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_SetMaxIdleTime( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> seconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets max time, in seconds, to remain idle at encounter target, once engaged. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2014) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_SetSetupLocationSbpPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_SetSetupLocationSbpPriority( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">ScarSquadPBG</span> sbp, <span class="arg">Real</span> priority )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>set the sbp setup location priority override </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2221) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_EngagementGuidance_SetSquadSetupLocation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_EngagementGuidance_SetSquadSetupLocation( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SquadID</span> pSquad, <span class="arg">Position</span> pos, <span class="arg">Position</span> facingDir )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>set the squad setup location and facing direction </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2192) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_EnableReinforceDuringCombat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_EnableReinforceDuringCombat( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable/Disable Reinforce during combat </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2900) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_EnableRetreatOnPinned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_EnableRetreatOnPinned( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable retreat to break pinned. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2753) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_EnableRetreatOnSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_EnableRetreatOnSuppression( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable retreat to break suppression. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2738) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetEntitiesRemainingThreshold"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetEntitiesRemainingThreshold( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set entities remaining threshold of encounter [-1 to N] to fallback at. (negative disables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2802) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetFallbackCapacityPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetFallbackCapacityPercentage( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set capacity threshold [-1 to 1] to fallback at. (negative disables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2678) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetFallbackCombatRating"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetFallbackCombatRating( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set combat rating threshold of area [0.0 to 1.0] to fallback at. (0.0 disables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2593) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetFallbackSquadHealthPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetFallbackSquadHealthPercentage( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> fallbackStartValue, <span class="arg">Real</span> fallbackEndValue )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set Squad health threshold [-1 to 1] to fallback at. (negative disables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2612) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetFallbackSquadShieldPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetFallbackSquadShieldPercentage( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> fallbackStartValue, <span class="arg">Real</span> fallbackEndValue )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set Squad Shield threshold [-1 to 1] to fallback at. (negative disables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2635) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetFallbackVehicleHealthPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetFallbackVehicleHealthPercentage( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> fallbackStartValue, <span class="arg">Real</span> fallbackEndValue )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set Vehicle health threshold [-1 to 1] to fallback at. (negative disables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2658) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetGlobalFallbackPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetGlobalFallbackPercentage( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set global fallback threshold (negative for individual squad). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2818) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetGlobalFallbackRetreat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetGlobalFallbackRetreat( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set global retreat type (true for retreat; false for fallback). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2834) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetReinforceHealthPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetReinforceHealthPercentage( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the Reinforce Health Percentage [-1 to 1] (negative disables retreat) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2850) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetReinforceMaxDistance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetReinforceMaxDistance( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the Max Reinforce Distance (negative value: no distance constrain) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2866) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetReinforceMinHealthRatioToReachReinforcePoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetReinforceMinHealthRatioToReachReinforcePoint( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the Min Health Ratio Required To Reach Reinforce Point [0.0, 1.0] (negative value: no constrain) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2884) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetRetreatCapacityPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetRetreatCapacityPercentage( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set combat rating threshold of area [-1 to 1] to fallback at. (negative disables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2723) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetRetreatCombatRating"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetRetreatCombatRating( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set combat rating threshold of area [0.0 to 1.0] to retreat at. (0.0 disables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2693) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetRetreatHealthPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetRetreatHealthPercentage( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set retreat health threshold of area [-1 to 1] (negative disables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2708) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FallbackGuidance_SetTargetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FallbackGuidance_SetTargetPosition( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set fallback target. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2786) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_ForceComplete"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_ForceComplete( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Asks the encounter to terminate in its next update (allows PhaseEncounter to set its exit info) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (607) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationGuidance_SetFormUpAtBuildingOfType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationGuidance_SetFormUpAtBuildingOfType( <span class="arg">AIEncounterID</span> encounter, <span class="arg">String</span> unitTypeList )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set formup type for formation encounter to be at building of type from AE tuning list (must set before triggering) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2919) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationGuidance_SetFormUpAtEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationGuidance_SetFormUpAtEntityTarget( <span class="arg">AIEncounterID</span> encounter, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set formup entity for formation encounter (must set before triggering) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2995) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationGuidance_SetFormUpAtPositionTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationGuidance_SetFormUpAtPositionTarget( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Position</span> postion )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set formup position for formation encounter (must set before triggering) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (2967) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationGuidance_SetFormUpAtSquadAverage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationGuidance_SetFormUpAtSquadAverage( <span class="arg">AIEncounterID</span> encounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set formup position for formation encounter at the average of current squad positions (must set before triggering) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3032) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationGuidance_SetFormUpAtTimeOutParams"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationGuidance_SetFormUpAtTimeOutParams( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Real</span> timeoutSeconds, <span class="arg">Real</span> requiredSquadsPercent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set formup position timeout and % squads that must arrive or else it will fail.  Setting zero for timeout means infinite </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3065) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhase_GetEndPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhase_GetEndPosition( <span class="arg">AITaskID</span> encounterID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the average position of squads of this finished formation phase encounter (may be the same as target if successful).  You should call AIEncounter_FormationPhase_HasValidExitInfo before this to avoid an error </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3366) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhase_GetEndReason"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhase_GetEndReason( <span class="arg">AITaskID</span> encounterID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the end position of this finished formation phase move encounter (may be the same as target if successful) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3390) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhase_GetEnemiesAtEnd"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhase_GetEnemiesAtEnd( <span class="arg">AITaskID</span> encounterID, <span class="arg">SGroupID</span> enemySquads, <span class="arg">EGroupID</span> enemyBuildings )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get Groups containing the enemies encountered by this formation phase encounter (encounter must have completed) false indicates the exit info was not available for this encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3341) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhase_GetExitCombatFitnessResult"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhase_GetExitCombatFitnessResult( <span class="arg">AITaskID</span> encounterID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the combat fitness result for a finished phase encounter, will only be valid for exit states CombatFitnessThreshold or WasAttacked.  -1.0f means invalid. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3286) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhase_GetSquadsAvailableAtEnd"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhase_GetSquadsAvailableAtEnd( <span class="arg">AITaskID</span> encounterID, <span class="arg">SGroupID</span> squadsAvailable, <span class="arg">SGroupID</span> squadsUnavailable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get SGRoups containing the squads who made it to the destination of a formation phase move encounter and those who didn't (encounter must have completed) false indicates the exit info was not available for this encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3304) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhase_HasValidExitInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhase_HasValidExitInfo( <span class="arg">AITaskID</span> encounterID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Query if there is valid exit info for this encounter (will only return true for phase encounters) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3278) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhaseGuidance_SetCombatCoordinator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhaseGuidance_SetCombatCoordinator( <span class="arg">AIEncounterID</span> encounter, <span class="arg">PropertyBagGroup</span> coordinatorPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Assign a property bag contains data to support sub task coordination for combat encounters </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3254) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhaseGuidance_SetCombatExitParams"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhaseGuidance_SetCombatExitParams( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Real</span> timeoutSeconds, <span class="arg">Boolean</span> testTargetDestroyed, <span class="arg">Boolean</span> testEnemySquadsCleared, <span class="arg">Boolean</span> testEnemyBuildingsCleared, <span class="arg">Real</span> enemyScanRange, <span class="arg">String</span> excludeBuildingTypeNames )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set params for terminating a formation phase encounter based on combat, fallback params can also be used </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3196) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhaseGuidance_SetMoveEnemiesExitParams"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhaseGuidance_SetMoveEnemiesExitParams( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Real</span> enemyScanRange, <span class="arg">Real</span> combatFitnessThreshold, <span class="arg">Real</span> enemyFormationHeading, <span class="arg">Real</span> enemyFormationPosition, <span class="arg">Real</span> enemyFormationDistance, <span class="arg">String</span> excludeBuildingTypeNames )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set params for terminating a formation phase encounter that is moving somewhere and encounters enemies </p>
                <p>enemyScanRange is scan range from current centre of the formation to look for enemies in meters combatFitnessThreshold is the fitness rating against all detected enemies, &lt; 0 means do not use, 0 means our team will win taking no damage, 1.0 means the enemy will win taking now damage. enemyFormationAngle is the relative heading of the strongest enemy formation in degrees, 0 means do not use enemyFormationPosition is the relative position of the strongest enemy formation in degrees, where 360.0f means directly behind us, 0 means do not use enemyFormationDistance is the distance threshold of the strongest enemy formation in meters</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3150) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationPhaseGuidance_SetMoveExitParams"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationPhaseGuidance_SetMoveExitParams( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Real</span> timeoutSeconds, <span class="arg">Real</span> requiredSquadsPercent, <span class="arg">Real</span> wasRecentlyAttackedSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set params for terminating a formation phase encounter that is moving somewhere </p>
                <p>timeoutSeconds is how long to wait for squads to get to destination (0 means run indefinitely) requiredSquadsPercent is how many squads must be in the target area, 1.0 means all wasRecentlyAttackedSecs was any unit attacked in this interval, 0 means do not use.  Recommend not using if you are also using combat threshold</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3106) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationTaskStateGuidance_MinRange"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationTaskStateGuidance_MinRange( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Integer</span> priority, <span class="arg">Integer</span> minSquads, <span class="arg">Integer</span> maxSquads, <span class="arg">Integer</span> maxTasks, <span class="arg">Real</span> repositionIntervalSecs, <span class="arg">Boolean</span> useTactics, <span class="arg">String</span> unitTypeNames, <span class="arg">PropertyBagGroup</span> targetPriorityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Specify data for formation encounter to create a formation min range task state </p>
                <p>repositionInterval is how often they will check to see if they need to reposition</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3468) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationTaskStateGuidance_MinRangeWithProtect"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationTaskStateGuidance_MinRangeWithProtect( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Integer</span> priority, <span class="arg">Integer</span> minSquads, <span class="arg">Integer</span> maxSquads, <span class="arg">Integer</span> maxTasks, <span class="arg">Real</span> repositionIntervalSecs, <span class="arg">Boolean</span> useTactics, <span class="arg">String</span> unitTypeNames, <span class="arg">PropertyBagGroup</span> targetPriorityPBG, <span class="arg">Integer</span> protectMinSquads, <span class="arg">Integer</span> protectMaxSquads, <span class="arg">Real</span> protectProportionSquads, <span class="arg">Real</span> protectDistance, <span class="arg">Real</span> protectRepositionThreshold, <span class="arg">Real</span> protectRepositionIntervalSecs, <span class="arg">String</span> protectUnitTypeNames )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Specify data for formation encounter to create a formation min range task state with protect task </p>
                <p>enemyScanRange is scan range from current centre of the formation to look for enemies in meters</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3531) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationTaskStateGuidance_Move"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationTaskStateGuidance_Move( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Boolean</span> attackMove, <span class="arg">Integer</span> priority, <span class="arg">Integer</span> minSquads, <span class="arg">Integer</span> maxSquads, <span class="arg">Integer</span> maxTasks, <span class="arg">String</span> unitTypeNames )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Specify data for formation encounter to create a formation move task state </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3412) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationTaskStateGuidance_SetupRanged"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationTaskStateGuidance_SetupRanged( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Integer</span> priority, <span class="arg">Integer</span> minSquads, <span class="arg">Integer</span> maxSquads, <span class="arg">Integer</span> maxTasks, <span class="arg">String</span> unitTypeNames, <span class="arg">PropertyBagGroup</span> targetPriorityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Specify data for formation encounter to create a formation setup ranged task state </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3610) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationTaskStateGuidance_SetupRangedWithProtect"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationTaskStateGuidance_SetupRangedWithProtect( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Integer</span> priority, <span class="arg">Integer</span> minSquads, <span class="arg">Integer</span> maxSquads, <span class="arg">Integer</span> maxTasks, <span class="arg">String</span> unitTypeNames, <span class="arg">PropertyBagGroup</span> targetPriorityPBG, <span class="arg">Integer</span> protectMinSquads, <span class="arg">Integer</span> protectMaxSquads, <span class="arg">Real</span> protectProportionSquads, <span class="arg">Real</span> protectDistance, <span class="arg">Real</span> protectRepositionThreshold, <span class="arg">Real</span> protectRepositionIntervalSecs, <span class="arg">String</span> protectUnitTypeNames )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Specify data for formation encounter to create a formation setup ranged task state and along with a formation of other units to protect it </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3667) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationTaskStateGuidance_SimpleMelee"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationTaskStateGuidance_SimpleMelee( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Integer</span> priority, <span class="arg">Integer</span> minSquads, <span class="arg">Integer</span> maxSquads, <span class="arg">Integer</span> maxTasks, <span class="arg">String</span> unitTypeNames, <span class="arg">PropertyBagGroup</span> targetPriorityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Specify data for formation encounter to create a formation simple melee task state </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3742) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_FormationTaskStateGuidance_TransportMove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_FormationTaskStateGuidance_TransportMove( <span class="arg">AIEncounterID</span> encounter, <span class="arg">Integer</span> priority, <span class="arg">Integer</span> minSquads, <span class="arg">Integer</span> maxSquads, <span class="arg">Integer</span> maxTasks, <span class="arg">String</span> unitTypeNames, <span class="arg">Integer</span> minPassengerSquads, <span class="arg">Integer</span> maxPassengerSquadsPerTransport, <span class="arg">PropertyBagGroup</span> unloadAbilityPBG, <span class="arg">String</span> passengerUnitTypeNames, <span class="arg">PropertyBagGroup</span> targetPriorityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Specify data for formation encounter to create a formation transport move task state </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3795) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_GetEncounterFromID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_GetEncounterFromID( <span class="arg">PlayerID</span> player, <span class="arg">AITaskID</span> taskID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the encounter pointer from the ID, always test for nil before using... </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (629) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_IsAIPlayerValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_IsAIPlayerValid( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if enconter has a valid AI player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (727) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_IsValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_IsValid( <span class="arg">UniqueID</span> PlayerUniqueID, <span class="arg">AITaskID</span> encounterTaskID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Determines if encounter is still valid.  Must be true before calling any other of the AIEncounter_* function.  Return true if valid, false otherwise. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (546) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_LogDebug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_LogDebug( <span class="arg">PlayerID</span> pPlayer, <span class="arg">Integer</span> encounterID, <span class="arg">String</span> debugString )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>in non RTM builds, if verboseEncounterLogging is enabled, will spew string to AI log file </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3898) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_MoveGuidance_EnableAggressiveMove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_MoveGuidance_EnableAggressiveMove( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable / disable aggressive movements on way to engagement targets </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1967) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_MoveGuidance_SetSquadCoherenceRadius"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_MoveGuidance_SetSquadCoherenceRadius( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set radius (follow distance) for coordinated move phase (&lt;= 0 disables coordinated movement) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1982) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_Notify_ClearCallbacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_Notify_ClearCallbacks( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears all notification callbacks for encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3866) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_Notify_SetEnableSnipedCallbacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_Notify_SetEnableSnipedCallbacks( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>enables/disabled the sniped callback </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3882) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_Notify_SetPlayerEventEncounterID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_Notify_SetPlayerEventEncounterID( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the ID for the notification event sent out by encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3850) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_Pause"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_Pause( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Boolean</span> bPause )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pause/Unpause this encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3916) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_ResourceGuidance_CalculateEstimatedSquadProductionTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_ResourceGuidance_CalculateEstimatedSquadProductionTime( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">String</span> pbgShortname, <span class="arg">Boolean</span> canAffordNowOnly )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calculates approximately how long it will take for a specified Encounter to produce a specified squad. </p>
                <p>Returns production time in seconds.  Negative value means the specified PBG cannot be produced at the specified Encounter. pEncounter is the Encounter Module that can service a production request. pbgShortname is the PBG of the squad to query. if canAffordNowOnly is set and we currently don't have enough resource now, report "cannot be produced".</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (987) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_ResourceGuidance_ClearEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_ResourceGuidance_ClearEntities( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all resource entities from encounter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1121) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_ResourceGuidance_ClearSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_ResourceGuidance_ClearSquads( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all resource squads from encounter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1106) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_ResourceGuidance_EntityGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_ResourceGuidance_EntityGroup( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">EGroupID</span> entities )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the resource entities for encounter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (858) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_ResourceGuidance_IsSquadGroupEqual"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_ResourceGuidance_IsSquadGroupEqual( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SGroupID</span> squads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if a squad group is equal to the resource squads of an encounter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (744) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_ResourceGuidance_SetResourceMoney"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_ResourceGuidance_SetResourceMoney( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">ResourceAmount</span> resourceAmount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the resource money for an encounter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1140) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_ResourceGuidance_SquadGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_ResourceGuidance_SquadGroup( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SGroupID</span> squads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the resource squads for encounter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (751) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_SetDebugName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_SetDebugName( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set encounter name for debugging. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (664) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_Reset"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_Reset( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset all tactic filters for encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1497) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_ResetAbilityGuidance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_ResetAbilityGuidance( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset all tactic ability constraints for encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1791) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_ResetAbilityPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_ResetAbilityPriority( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">PropertyBagGroup</span> abilityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset ability priority for all squads in encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1571) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_ResetPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_ResetPriority( <span class="arg">AIEncounterID</span> pEncounter, <a href="enum_list.htm#AITacticType">AITacticType</a> tactic )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset tactic priority for all squads in encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1530) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_ResetTacticGuidance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_ResetTacticGuidance( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset all tactic constraints for encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1912) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_ResetTargetGuidance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_ResetTargetGuidance( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset all tactic target constraints for encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1928) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_SetAbilityGuidance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_SetAbilityGuidance( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">PropertyBagGroup</span> ability, <span class="arg">Integer</span> maxCasters, <span class="arg">Real</span> retrySecs, <span class="arg">Real</span> waitSelfSecs, <span class="arg">Real</span> waitEncounterSecs, <span class="arg">Real</span> timeoutSecs, <span class="arg">Boolean</span> initialWait, <span class="arg">Real</span> maxRange, <span class="arg">Real</span> castChanceOverride )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set tactic ability constraints for encounter </p>
                <p>maxCasters is maximum concurrent casters of this ability (-1 is unlimited), waitRetrySecs is time in seconds between ability tactic retrying ability retry, wait[self/encounter], and timeout Secs are: the number of seconds to try doing a tactic after a previous try; seconds after last successful try; how long the successful tactic can run. initialWait is true if the waitTime applies before the first ability use. maxRange is the maximum range to look for ability target from caster (other range constraints may limit the max range to a smaller value) castChanceOverride is the probability to cast the ability, must be between 0.0 and 1.0</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1684) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_SetAbilityPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_SetAbilityPriority( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">PropertyBagGroup</span> abilityPBG, <span class="arg">Real</span> priority )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set ability priority for all squads in encounter; negative priority disables </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1549) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_SetAbilityPriorityForSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_SetAbilityPriorityForSquad( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SquadID</span> squad, <span class="arg">PropertyBagGroup</span> abilityPBG, <span class="arg">Real</span> priority )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set ability priority for squad in encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1618) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_SetDefaultAbilityGuidance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_SetDefaultAbilityGuidance( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Integer</span> maxCasters, <span class="arg">Real</span> retrySecs, <span class="arg">Real</span> waitSelfSecs, <span class="arg">Real</span> waitEncounterSecs, <span class="arg">Real</span> timeoutSecs, <span class="arg">Boolean</span> initialWait, <span class="arg">Real</span> maxRange, <span class="arg">Real</span> castChanceOverride )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default tactic ability constraints for encounter (ability specific guidance takes priority over defaults) </p>
                <p>maxCasters is maximum concurrent casters of ability (-1 is unlimited), waitRetrySecs is time in seconds between ability tactic retrying ability, retry, wait[self/encounter], and timeout Secs are: the number of seconds to try doing a tactic after a previous try; seconds after last successful try; how long the successful tactic can run. initialWait is true if the waitTime applies before the first ability use. maxRange is the maximum range to look for ability target from caster (other range constraints may limit the max range to a smaller value) castChanceOverride is the probability to cast the ability, must be between 0.0 and 1.0</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1751) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_SetDefaultTacticGuidance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_SetDefaultTacticGuidance( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Integer</span> maxUsers, <span class="arg">Real</span> retrySecs, <span class="arg">Real</span> waitSecs, <span class="arg">Real</span> timeoutSecs, <span class="arg">Boolean</span> initialWait, <span class="arg">Real</span> maxRange )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default tactic constraints for encounter (tactic specific guidance takes priority over defaults) </p>
                <p>maxUsers is maximum concurrent users of tactic (-1 is unlimited), waitRetrySecs is time in seconds between tactic retrying retry, wait, and timeout Secs are: the number of seconds to try doing a tactic after a previous try; seconds after last successful try; how long the successful tactic can run. initialWait is true if the waitTime applies before the first tactic use. maxRange is the maximum range to look for tactic target from caster (other range constraints may limit the max range to a smaller value)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1878) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_SetPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_SetPriority( <span class="arg">AIEncounterID</span> pEncounter, <a href="enum_list.htm#AITacticType">AITacticType</a> tactic, <span class="arg">Real</span> priority )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set tactic priority for all squads in encounter; negative priority disables </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1513) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_SetPriorityForSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_SetPriorityForSquad( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SquadID</span> squad, <a href="enum_list.htm#AITacticType">AITacticType</a> tactic, <span class="arg">Real</span> priority )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set tactic priority for squads in encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1592) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_SetTacticGuidance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_SetTacticGuidance( <span class="arg">AIEncounterID</span> pEncounter, <a href="enum_list.htm#AITacticType">AITacticType</a> tactic, <span class="arg">Integer</span> maxUsers, <span class="arg">Real</span> retrySecs, <span class="arg">Real</span> waitSecs, <span class="arg">Real</span> timeoutSecs, <span class="arg">Boolean</span> initialWait, <span class="arg">Real</span> maxRange )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set tactic constraints for encounter </p>
                <p>maxUsers is maximum concurrent users of this tactic (-1 is unlimited), waitRetrySecs is time in seconds between tactic retry retry, wait, and timeout Secs are: the number of seconds to try doing a tactic after a previous try; seconds after last successful try; how long the successful tactic can run. initialWait is true if the waitTime applies before the first tactic use. maxRange is the maximum range to look for tactic target from caster (other range constraints may limit the max range to a smaller value)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1822) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TacticFilter_SetTargetPolicy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TacticFilter_SetTargetPolicy( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">TargetPreference</span> policy )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set tactic target priority for encounter </p>
                <p>policy is one of: AITacticTargetPreference_None, AITacticTargetPreference_Near,</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1643) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_DisableSquadPatrol"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_DisableSquadPatrol( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disables the patrol for the passed Squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1468) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_SetPatrolPathByName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_SetPatrolPathByName( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">String</span> pathName, <span class="arg">Real</span> delaySecs, <span class="arg">Boolean</span> invertPathAtEnd, <span class="arg">Boolean</span> startInverted )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets target patrol path for encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1247) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_SetPatrolWander"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_SetPatrolWander( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> delaySecs, <span class="arg">Integer</span> radiusMode, <span class="arg">Real</span> radiusOverride, <span class="arg">Boolean</span> overrideCenter, <span class="arg">Position</span> centerOverride )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets random wander target patrol for encounter; delaySecs is the time in secs to pause at each random point </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1305) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_SetSquadPatrolPathByName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_SetSquadPatrolPathByName( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SquadID</span> pSquad, <span class="arg">String</span> pathName, <span class="arg">Real</span> delaySecs, <span class="arg">Boolean</span> invertPathAtEnd, <span class="arg">Boolean</span> startInverted )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets target patrol path for the squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1357) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_SetSquadPatrolWander"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_SetSquadPatrolWander( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SquadID</span> pSquad, <span class="arg">Real</span> delaySecs, <span class="arg">Integer</span> radiusMode, <span class="arg">Real</span> radiusOverride, <span class="arg">Boolean</span> overrideCenter, <span class="arg">Position</span> centerOverride )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets random wander target patrol for the squad; delaySecs is the time in secs to pause at each random point </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1421) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_SetTargetArea"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_SetTargetArea( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets engagement area radius around the target. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1210) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_SetTargetEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_SetTargetEntity( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets target Entity for encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1191) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_SetTargetLeash"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_SetTargetLeash( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets leash radius around target where squads should stay within. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1226) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_SetTargetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_SetTargetPosition( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets target position for encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1156) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_TargetGuidance_SetTargetSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_TargetGuidance_SetTargetSquad( <span class="arg">AIEncounterID</span> pEncounter, <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets target Squad for encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (1172) </b></td>
            </tr>
          </table>
        </p><a name="AIEncounter_Trigger"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIEncounter_Trigger( <span class="arg">AIEncounterID</span> pEncounter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set encounter name for debugging. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (648) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_CanAISquadLockTacticItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_CanAISquadLockTacticItem( <span class="arg">EntityID</span> tacticItemEntity, <span class="arg">SquadID</span> lockingAISquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if the squad can lock the tactic item </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5129) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetOpponentPlayerAtIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetOpponentPlayerAtIndex( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the Player at specified index out of all opponent players.  Use in conjunction with `AIPlayer_GetOpponentPlayerCount`. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5566) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetOpponentPlayerCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetOpponentPlayerCount( <span class="arg">PlayerID</span> aiPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of opponent Players to the specified AIPlayer. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5547) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_GetStateModelAISquadListEntries"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_GetStateModelAISquadListEntries( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of squad ids from the AIPlayer's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5654) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_IsTacticItemLocked"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_IsTacticItemLocked( <span class="arg">PlayerID</span> player, <span class="arg">EntityID</span> tacticItemEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if a tactic item is locked </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5106) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_IsTacticItemLockedByAISquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_IsTacticItemLockedByAISquad( <span class="arg">EntityID</span> tacticItemEntity, <span class="arg">SquadID</span> lockingAISquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if a tactic item is locked by the squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5117) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_LockTacticItemForAISquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_LockTacticItemForAISquad( <span class="arg">EntityID</span> tacticItemEntity, <span class="arg">SquadID</span> lockingAISquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Locks a tactic item for the passed player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5039) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_ResetEnemySquadsVisibility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_ResetEnemySquadsVisibility( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> enemyPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Temporarily hides all of the known squads belonging to the enemy player for the specified AI </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5140) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_SetGathererDistributionOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_SetGathererDistributionOverride( <span class="arg">PlayerID</span> aiPlayer, <span class="arg">Real</span> luaGatherDistro )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the target distribution of how the ai player should use their units for gathering </p>
                <p>Second argument is a map of resource type names to weights ex: { ['wood'] = 5, ... }</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5599) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_SetRequiresStatsUpdate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_SetRequiresStatsUpdate( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>marks the player to force the stats squads to update </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5022) </b></td>
            </tr>
          </table>
        </p><a name="AIPlayer_UnLockTacticItemForAISquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIPlayer_UnLockTacticItemForAISquad( <span class="arg">EntityID</span> tacticItemEntity, <span class="arg">SquadID</span> lockingAISquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>UnLocks a tactic item for the passed player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (5072) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_FindBestIsolatedSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_FindBestIsolatedSquadTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">SGroupID</span> targetSquads, <span class="arg">TargetPreference</span> tacticTargetPolicy, <span class="arg">Boolean</span> targetAllies )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the best squad target which is not part of a clump. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4867) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_FindBestSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_FindBestSquadTarget( <span class="arg">SquadID</span> aiSquad, <span class="arg">SGroupID</span> targetSquads, <span class="arg">TargetPreference</span> tacticTargetPolicy )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns the best squad target in the sgroup based on the passed tacticTargetPolicy </p>
                <p>policy is one of: AITacticTargetPreference_None, AITacticTargetPreference_Near,</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4825) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_FindSafePositionInEncounterLeash"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_FindSafePositionInEncounterLeash( <span class="arg">SquadID</span> aiSquad, <span class="arg">Real</span> maxRadius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns the safest position for the AISquad in the current encounter leash area </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4805) </b></td>
            </tr>
          </table>
        </p><a name="AISquad_IsRunningSquadTacticAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AISquad_IsRunningSquadTacticAbility( <span class="arg">SquadID</span> aiSquad, <span class="arg">PropertyBagGroup</span> abilityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns true if the AISquad is currently running the AISquadAbilityTactic for the passed abilityPBG </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4934) </b></td>
            </tr>
          </table>
        </p><a name="AIStateTree_SpawnRootControllerWithStateModelTunings"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIStateTree_SpawnRootControllerWithStateModelTunings( <span class="arg">PlayerID</span> pPlayer, <span class="arg">String</span> openingBranchName, <span class="arg">Boolean</span> keepAlive, <span class="arg">ScarAIStateModelTuningsPBG</span> stateModelTuningsScarPBG, <span class="arg">SGroupID</span> stateModelSGroupListTunings, <span class="arg">EGroupID</span> stateModelEGroupListTunings, <span class="arg">Position</span> stateModelPositionTargetListTunings, <span class="arg">MarkerID</span> stateModelMarkerTargetListTunings, <span class="arg">String list</span> stateModelEntityTypeListTunings, <span class="arg">LuaMap&lt;ScarAIFormationCoordinatorPBG&gt;</span> stateModelCoordinatorPBGListTunings, <span class="arg">Boolean</span> stateModelBoolTunings, <span class="arg">Real</span> stateModelFloatTunings, <span class="arg">Integer</span> stateModelIntTunings )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>On the AIPlayer statetree, spawn a Root Controller with tunings that can be pushed onto the Root Controller's StateModel. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (3949) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetInternalAIEncounterPtr"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetInternalAIEncounterPtr( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns the Encounter that controls the Squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4979) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsInAIEncounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsInAIEncounter( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns true if the Squad is in an Encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4963) </b></td>
            </tr>
          </table>
        </p><a name="SquadGroup_CountSpawnedAndStatsInitialized"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SquadGroup_CountSpawnedAndStatsInitialized( <span class="arg">SGroupID</span> sgroup, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>iterates through an sgroup, returns count with AIStatsSquad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\ai\public\ai\lua\lualibs\LuaLibAI.cpp] (4999) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Blueprint"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Blueprint</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="BP_GetAbilityBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAbilityBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an ability property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (528) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetAbilityBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAbilityBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an ability property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (534) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetAIAbilityBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAIAbilityBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an AIAbility property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (626) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetAIAbilityBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAIAbilityBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an AIAbility property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (632) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetAIFormationCoordinatorBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAIFormationCoordinatorBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an AIFormationCoordinator property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (650) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetAIFormationCoordinatorBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAIFormationCoordinatorBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an AIFormationCoordinator property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (656) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetAIFormationTargetPriorityBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAIFormationTargetPriorityBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an AIFormationTargetPriority property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (638) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetAIFormationTargetPriorityBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAIFormationTargetPriorityBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an AIFormationTargetPriority property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (644) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetAIStateModelTuningsBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAIStateModelTuningsBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an AIStateModelTunings property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (662) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetAIStateModelTuningsBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetAIStateModelTuningsBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an AIStateModelTunings property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (668) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an entity property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (210) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an entity property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (216) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityBPBuildTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityBPBuildTime( <span class="arg">ScarEntityPBG</span> entityBag )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the unmodified build time in seconds from cost_ext for a given entity blueprint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (576) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityBPDefaultSpeed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityBPDefaultSpeed( <span class="arg">ScarEntityPBG</span> entityBag, <span class="arg">Boolean</span> getModifiedSpeed, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the default movement speed from moving_ext for a given entity blueprint. If getModifiedSpeed is true, the value will be modified by any speed_maximum_modifier applied to the player for the given entity blueprint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (554) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityChildBlueprintAtIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityChildBlueprintAtIndex( <span class="arg">String</span> pbgShortname, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the child blueprint of the specified entity blueprint at specified index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (784) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityChildBlueprintCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityChildBlueprintCount( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of child blueprints of the specified entity blueprint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (770) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityParentBlueprintAtIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityParentBlueprintAtIndex( <span class="arg">String</span> pbgShortname, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the parent blueprint of the specified entity blueprint at specified index </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (742) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityParentBlueprintCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityParentBlueprintCount( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of parent blueprints of the specified entity blueprint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (718) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityTypeExtRaceBlueprintAtIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityTypeExtRaceBlueprintAtIndex( <span class="arg">String</span> pbgShortname, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns race blueprint associated with an entity blueprint type_ext at specified index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (925) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityTypeExtRaceCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityTypeExtRaceCount( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of race blueprints associated with an entity blueprint type_ext. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (908) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetEntityUIInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetEntityUIInfo( <span class="arg">ScarEntityPBG</span> ebp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table containing the ui_ext info for given entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (680) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetMapPoolBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetMapPoolBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a map pool property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (614) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetMapPoolBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetMapPoolBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a map pool property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (620) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetMoveTypeBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetMoveTypeBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a move type property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (590) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetMoveTypeBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetMoveTypeBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a move type property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (596) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetName( <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the short name of the group </p>
                <p>Example name would be "ally_mad_minute_ability"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (129) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetPassTypeBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetPassTypeBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an pass type property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (602) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetPassTypeBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetPassTypeBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an pass type property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (608) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetPropertyBagGroupCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetPropertyBagGroupCount( <span class="arg">PropertyBagGroupType</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the number of property bag groups of the same type </p>
                <p>Example type would be PBG_Critical</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (150) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetPropertyBagGroupPathName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetPropertyBagGroupPathName( <span class="arg">PropertyBagGroupType</span> type, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the path name of the group at the specified index </p>
                <p>Example name would be "abilities\ally_mad_minute_ability"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (161) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetReticuleBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetReticuleBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a UIReticuleBag property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (674) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSlotItemBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSlotItemBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a slot item property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (516) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSlotItemBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSlotItemBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a slot item property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (522) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a squad property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (222) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadBlueprintByPbgID( <span class="arg">String</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a squad property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (228) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadChildBlueprintAtIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadChildBlueprintAtIndex( <span class="arg">String</span> pbgShortname, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the child blueprint of the specified squad blueprint at specified index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (868) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadChildBlueprintCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadChildBlueprintCount( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of child blueprints of the specified squad blueprint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (854) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadParentBlueprintAtIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadParentBlueprintAtIndex( <span class="arg">String</span> pbgShortname, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the parent blueprint of the specified squad blueprint at specified index </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (826) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadParentBlueprintCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadParentBlueprintCount( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of parent blueprints of the specified squad blueprint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (802) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadTypeExtRaceBlueprintAtIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadTypeExtRaceBlueprintAtIndex( <span class="arg">String</span> pbgShortname, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns race blueprint associated with a squad blueprint squad_type_ext at specified index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (983) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadTypeExtRaceCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadTypeExtRaceCount( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of race blueprints associated with a squad blueprint squad_type_ext. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (966) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetSquadUIInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetSquadUIInfo( <span class="arg">ScarSquadPBG</span> sbp, <span class="arg">ScarRacePBG</span> rbp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table containing the ui_ext info for given squad and race </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (692) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetType( <span class="arg">StackVar</span> v )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the type of a blueprint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (252) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetUpgradeBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetUpgradeBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an upgrade property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (504) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetUpgradeBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetUpgradeBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an upgrade property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (510) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetUpgradeUIInfo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetUpgradeUIInfo( <span class="arg">ScarUpgradePBG</span> ubp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table containing the ui_ext info for given upgrade </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (707) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetWeaponBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetWeaponBlueprint( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a weapon property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (540) </b></td>
            </tr>
          </table>
        </p><a name="BP_GetWeaponBlueprintByPbgID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_GetWeaponBlueprintByPbgID( <span class="arg">Integer</span> pbgID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a weapon property bag group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (546) </b></td>
            </tr>
          </table>
        </p><a name="BP_IsUpgradeOfType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 BP_IsUpgradeOfType( <span class="arg">ScarUpgradePBG</span> upgradePBG, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the UpgradePGB's list of types includes the given type </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (478) </b></td>
            </tr>
          </table>
        </p><a name="EBP_Exists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EBP_Exists( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if an entity blueprint exists with the given name. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (173) </b></td>
            </tr>
          </table>
        </p><a name="EBP_IsOfRace"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EBP_IsOfRace( <span class="arg">String</span> pbgShortname, <span class="arg">ScarRacePBG</span> race )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the entity blueprint is of specified race </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (886) </b></td>
            </tr>
          </table>
        </p><a name="EBP_PopulationCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EBP_PopulationCost( <span class="arg">PropertyBagGroup</span> ebpUnit, <span class="arg">PlayerID</span> player, <a href="enum_list.htm#CapType">CapType</a> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>get Entity blueprint pop cost, use CT_Personnel, CT_Vehicle, CT_Medic for captype </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (194) </b></td>
            </tr>
          </table>
        </p><a name="SBP_Exists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SBP_Exists( <span class="arg">String</span> pbgShortname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a squad blueprint exists with the given name. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (183) </b></td>
            </tr>
          </table>
        </p><a name="SBP_IsOfRace"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SBP_IsOfRace( <span class="arg">String</span> pbgShortname, <span class="arg">ScarRacePBG</span> race )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the squad blueprint is of specified race </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaBlueprint.cpp] (944) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Camera"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Camera</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Camera_CatromSplinePanOverTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_CatromSplinePanOverTime( <span class="arg">Variable</span> var, <span class="arg">Integer</span> seconds, <span class="arg">Boolean</span> keepQueue, <span class="arg">Boolean</span> controlRotation )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Queue moving the camera along a spline consisting of entity/marker/pos/egroup/sgroup/squad objects within seconds. </p>
                <p>The camera will move from the position that was in front of it in the pan queue along the positions provided. Catmull-Rom interpolation between points is used</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (108) </b></td>
            </tr>
          </table>
        </p><a name="Camera_CyclePositions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_CyclePositions( <span class="arg">Table</span> list, <span class="arg">Boolean</span> OPT_pan, <span class="arg">Real</span> OPT_panRate, <span class="arg">ScarFn</span> OPT_callback )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Moves the camera through a list of positions. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (244) </b></td>
            </tr>
          </table>
        </p><a name="Camera_Follow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_Follow( <span class="arg">Variable</span> var )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the camera to follow an sgroup/squad/egroup/entity. </p>
                <p>The camera will follow them until the player takes control again.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (221) </b></td>
            </tr>
          </table>
        </p><a name="Camera_LinearSplinePanOverTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_LinearSplinePanOverTime( <span class="arg">Variable</span> var, <span class="arg">Integer</span> seconds, <span class="arg">Boolean</span> keepQueue, <span class="arg">Boolean</span> controlRotation )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Queue moving the camera along a spline consisting of entity/marker/pos/egroup/sgroup/squad objects within seconds. </p>
                <p>The camera will move from the position that was in front of it in the pan queue along the positions provided. Linear interpolation between points is used</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (100) </b></td>
            </tr>
          </table>
        </p><a name="Camera_MoveTo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_MoveTo( <span class="arg">Variable</span> var, <span class="arg">Boolean</span> pan, <span class="arg">Real</span> panRate, <span class="arg">Boolean</span> keepInputLocked, <span class="arg">Boolean</span> resetToDefault )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Move the camera to an entity/marker/pos/egroup/sgroup/squad at a given speed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (115) </b></td>
            </tr>
          </table>
        </p><a name="Camera_MoveToIfClose"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_MoveToIfClose( <span class="arg">Variable</span> var )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Slightly refocus the camera to rest on an entity/squad/squad/sgroup/egroup/pos/marker if it's close by. </p>
                <p>This function can be called through a CTRL object in NISlets.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (198) </b></td>
            </tr>
          </table>
        </p><a name="Camera_PanOverTimeRelative"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_PanOverTimeRelative( <span class="arg">Position</span> delta, <span class="arg">Integer</span> seconds, <span class="arg">Boolean</span> keepQueue )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Queue moving the camera a certain distance from the position of the camera in a specified amount of time. </p>
                <p>The position used is the position the camera will be in after completing the movement(s) queued in front.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (40) </b></td>
            </tr>
          </table>
        </p><a name="Camera_PanOverTimeTo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_PanOverTimeTo( <span class="arg">Variable</span> var, <span class="arg">Integer</span> seconds, <span class="arg">Boolean</span> keepQueue )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Queue moving the camera to an entity/marker/pos/egroup/sgroup/squad within seconds. </p>
                <p>The camera will move from the position that was in front of it in the queue.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (57) </b></td>
            </tr>
          </table>
        </p><a name="Camera_ResetRotation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_ResetRotation(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset the camera to its default rotation. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (32) </b></td>
            </tr>
          </table>
        </p><a name="Camera_RotateRelative"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_RotateRelative( <span class="arg">Real</span> angle )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Rotate the camera relative to its current rotation in degrees. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (26) </b></td>
            </tr>
          </table>
        </p><a name="Camera_RotateTo"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Camera_RotateTo( <span class="arg">Real</span> angle )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Rotate the camera to a given angle in degrees. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\camera.scar] (19) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Cheat Menu"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Cheat Menu</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="CheatMenu_RegisterCheatFunction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 CheatMenu_RegisterCheatFunction( <span class="arg">Function</span> cheatFunction, <span class="arg">String</span> title, <span class="arg">Boolean</span> OPT_restartMission )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a function to the Mission Cheat menu, under the title you provide. These should be registered in the Mission_Preset function. </p>
                <p>If the restartMission flag is set, when the cheat is activated the mission will be restarted. Most of the startup script happens as normal: Mission_SetupVariables,  Mission_SetDifficulty, Mission_SetupRestrictions and Mission_Preset are all called as normal, but the supplied function is called INSTEAD OF the regular Mission_Start function.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\missioncheatmenu.scar] (218) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Command"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Command</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Cmd_AbandonTeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_AbandonTeamWeapon( <span class="arg">SGroupID</span> sgroupid, <span class="arg">Boolean</span> OPT_preserveCrew, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to abandon their current team weapon if they have it and they could (tuning value in attribute editor) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1708) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_Ability"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_Ability( <span class="arg">EGroupID</span> user, <span class="arg">Integer</span> blueprint, <span class="arg">EGroupID</span> OPT_target, <span class="arg">Position</span> OPT_direction, <span class="arg">Boolean</span> OPT_skipCostPrereq, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sends an ability command to a player, egroup or sgroup. extra parameters are provided if the ability requires them. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1281) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_AttachSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_AttachSquads( <span class="arg">SGroupID</span> sgroup, <span class="arg">SGroupID</span> sgroupAttachee )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Attach the squad from sgroupnameAttachee to sgroupname.  Both SGroups must contain only one squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1464) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_Attack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_Attack( <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> target, <span class="arg">Boolean</span> OPT_queued, <span class="arg">Boolean</span> OPT_stationary, <span class="arg">String</span> OPT_plan, <span class="arg">Boolean</span> OPT_check FOW )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Issues an attack command to an SGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (708) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_AttackMove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_AttackMove( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> targetposition, <span class="arg">Boolean</span> OPT_queued, <span class="arg">String</span> OPT_plan, <span class="arg">Real</span> OPT_coverSearchRadius, <span class="arg">MarkerID</span> OPT_deleteWhenNearMarker, <span class="arg">Boolean</span> OPT_splitCmd )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to attack move to a position (anything whose position can be queried). can be queued, can follow a plan, can search for cover within a radius </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (759) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_AttackMoveThenCapture"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_AttackMoveThenCapture( <span class="arg">SGroupID</span> attacker, <span class="arg">EGroupID</span> target, <span class="arg">Boolean</span> OPT_queued  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Command attacker sgroup to attack move to strategic point target; when it is capturable, the sgroup would capture it </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1613) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_CaptureTeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_CaptureTeamWeapon( <span class="arg">SGroupID</span> sgroupid, <span class="arg">EGroupID</span> targetid, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to capture team weapon entity group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1668) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_Construct"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_Construct( <span class="arg">SGroupID</span> sgroupid, <span class="arg">Entity</span> blueprint, <span class="arg">EGroupID</span> targetid, <span class="arg">Position</span> OPT_Facing, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Orders a squad to contruct a building at specified position, or to continue construction on an existing building. </p>
                <p>The command also checks to see if a building already exists at the location, and the squad will continue building it, if it is of the correct type.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1873) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_DetonateDemolitions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_DetonateDemolitions( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> target, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Detonates a building's demolitions </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1854) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_EjectOccupants"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_EjectOccupants( <span class="arg">EGroupID</span> fromgroupid, <span class="arg">Position</span> OPT_destination, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Orders an EGroup or SGroup to kick out its occupants. If no position is specified, the occupants stay at the exit. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1039) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_Garrison"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_Garrison( <span class="arg">SGroupID</span> fromsgroupid, <span class="arg">EGroupID</span> togroupid, <span class="arg">Boolean</span> OPT_overload, <span class="arg">Boolean</span> OPT_queued, <span class="arg">Boolean</span> OPT_instant )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to load at a random entity or squad of the group </p>
                <p>overload is a flag that will allow the hold entity to ignore maximum slot check</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (987) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_HoldPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_HoldPosition( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> OPT_location, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to hold position at a given location (or just it's current location) </p>
                <p>The location parameter can be a position (to hold position at that location), or a Boolean to enable/disable HoldPosition at the current location. If it's omitted entirely, it defaults to true.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (956) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_InstantReinforceUnit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_InstantReinforceUnit( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> count )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sends a instant reinforce command to all squads in a group.  count represents the number of commands to send. </p>
                <p>Note: This function bypasses pre-reqs, costs and the production queue</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1210) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_InstantSetupTeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_InstantSetupTeamWeapon( <span class="arg">SGroupID</span> sgroupid, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to instant setup their team weapon without animation </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1734) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_InstantUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_InstantUpgrade( <span class="arg">EGroupID</span> target, <span class="arg">Integer</span> blueprint, <span class="arg">Integer</span> OPT_count )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sends an instant upgrade command to a player, egroup or sgroup. accepts a single upgrade or table of upgrades. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1270) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_Move"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_Move( <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> position, <span class="arg">Boolean</span> OPT_queued, <span class="arg">MarkerID</span> OPT_deleteWhenNearMarker, <span class="arg">Position</span> OPT_facing, <span class="arg">Integer</span> OPT_offset, <span class="arg">Real</span> OPT_distance, <span class="arg">Real</span> OPT_coverSearchRadius, <span class="arg">Boolean</span> OPT_splitCmd )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Move a squad group to a given position. </p>
                <p>Supports facing, 'offset' movement, and can find cover. The sgroup can be deleted when in proximity of a marker (it assumes a proximity of 5 if you forget to set one on the marker)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (43) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_MoveAwayFromPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_MoveAwayFromPos( <span class="arg">SGroupID</span> sgroup, <span class="arg">Pos</span> position, <span class="arg">Integer</span> radius, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Move a squad group out of a position to a certain radius </p>
                <p>All squads in the group will move away from the centre position from its current position</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (461) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_MoveToAndDeSpawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_MoveToAndDeSpawn( <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID</span> marker, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Moves a squad group to the indicated Marker and despawns it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1593) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_MoveToAndDestroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_MoveToAndDestroy( <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID</span> marker, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Moves a squad group to the indicated Marker and destroys it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1574) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_MoveToClosestMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_MoveToClosestMarker( <span class="arg">SGroupID</span> sgroup, <span class="arg">Table</span> markertable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Moves a squad group to the closest marker in a list/table of MarkerIDs. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1532) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_MoveToThenAttackMove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_MoveToThenAttackMove( <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> position, <span class="arg">Integer</span> OPT_distance, <span class="arg">Boolean</span> OPT_ANY, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Move a squad group to a given position, attack-moving once close enough </p>
                <p>Squad will move to a position, once they're within 'distance', they will attack-move the rest of the way.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (228) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_MoveToThenCapture"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_MoveToThenCapture( <span class="arg">SGroupID</span> attacker, <span class="arg">EGroupID</span> target, <span class="arg">Boolean</span> OPT_queued  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Command attacker sgroup to attack move to strategic point target; when it is capturable, the sgroup would capture it </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1640) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_RecrewVehicle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_RecrewVehicle( <span class="arg">SGroupID</span> sgroupid, <span class="arg">EGroupID</span> targetid, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to recrew an abandoned vehicle. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1688) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_ReinforceUnit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_ReinforceUnit( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> count )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sends a reinforce command to all squads in a group.  count represents the number of commands to send. </p>
                <p>Note: To reinforce squad bypassing the pre-reqs and costs use Cmd_InstantReinforceUnit.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1186) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_Retreat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_Retreat( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> OPT_location, <span class="arg">Boolean</span> OPT_deleteWhenNearMarker, <span class="arg">Boolean</span> OPT_queued, <span class="arg">Boolean</span> OPT_saveEncounters, <span class="arg">Boolean</span> OPT_vulnerableRetreat )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to retreat, optionally to a specific location. The sgroup can be deleted when in proximity of a marker (it assumes a proximity of 5 if you forget to set one on the marker) </p>
                <p>vulnerableRetreat will make retreating squads take more damage</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (800) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_RevertOccupiedBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_RevertOccupiedBuilding( <span class="arg">SGroupID</span> sgroupid, <span class="arg">EGroupID</span> targetid, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to revert occupied building </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1820) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_SetDemolitions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_SetDemolitions( <span class="arg">SGroupID</span> sgroupid, <span class="arg">EGroupID</span> targetid, <span class="arg">Boolean</span> OPT_skipCostPrereq, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Orders a squad group to place demolition charges on a building (egroup). Function does nothing if egroup cannot be detonated, or player can't afford the demolitions </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1840) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_SetupTeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_SetupTeamWeapon( <span class="arg">SGroupID</span> sgroupid, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Order a squad group to setup their team weapon with animation </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1753) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_SquadCamouflageStance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_SquadCamouflageStance( <span class="arg">SGroupID</span> sgroup, <span class="arg">CamouflageStanceID</span> stanceid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sends an camouflage stance command to all squads in a group.  stanceid should be the number returned by Util_GetCamouflageStanceID( stancename ) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1160) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_SquadPath"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_SquadPath( <span class="arg">SGroupID</span> sgroup, <span class="arg">String</span> pathName, <span class="arg">Boolean</span> bFromClosest, <span class="arg">Integer</span> loop, <span class="arg">Boolean</span> bAttackMove, <span class="arg">Real</span> pauseTime, <span class="arg">MarkerID</span> OPT_deleteWhenNearMarker, <span class="arg">Boolean</span> OPT_queued, <span class="arg">Boolean</span> OPT_bMoveForward )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a command to the squad to follow a path. Can wait at each waypoint. The sgroup can be deleted when in proximity of a marker if you pass in the marker as the 7th argument (it assumes a proximity of 5 if you forget to set one on the marker) </p>
                <p>loop can be: LOOP_NONE, LOOP_NORMAL, LOOP_TOGGLE_DIRECTION</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (522) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_SquadPatrolMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_SquadPatrolMarker( <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Causes a squad to patrol a marker attacking any enemies that come within its radius. If used on circular markers, the radius must be at least 5. To stop the squad from patrolling the marker, use Cmd_Stop. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (566) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_StaggeredRetreat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_StaggeredRetreat( <span class="arg">SGroupID</span> sgroup, <span class="arg">Table</span> markers, <span class="arg">Integer</span> OPT_maxTries, <span class="arg">Boolean</span> OPT_vulnerableRetreat )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Retreats large numbers of units in a staggered, realistic manner. </p>
                <p>Each Squad in the sgroup will have a 1 in 3 chance to retreat.  After 10 seconds (or maxTries), all squads will be forced to retreat. Squads will delete on arrival at their retreat point. vulnerableRetreat will make retreating squads take more damage</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (884) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_Stop"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_Stop( <span class="arg">EGroupID</span> group )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sends a stop command to egroup or sgroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1499) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_Surrender"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_Surrender( <span class="arg">SGroupID</span> sgroupid , <span class="arg">Integer</span> OPT_actionpoints, <span class="arg">Position</span> OPT_exitpos, <span class="arg">Boolean</span> OPT_deleteAtExit, <span class="arg">Boolean</span> OPT_removeWeapon )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Orders a squad to surrender and awards the local player with an appropriate number of action points </p>
                <p>Use the optional parameter to assign action points to override the default number.  The function automatically addresses squads that are in buildings or vehicles by ordering them out of the vehicle. The command will also overwrite the exit position as well, if you do not want the squads to exit at the map entry point.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1945) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_UngarrisonSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_UngarrisonSquad( <span class="arg">SGroupID</span> sgroupid, <span class="arg">Position</span> OPT_destination, <span class="arg">Boolean</span> OPT_queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Orders an sgroup to exit the building or vehicle that it's in. If no position is specified, the sgroup stays at the exit. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1098) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_Upgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_Upgrade( <span class="arg">EGroupID</span> user, <span class="arg">Integer</span> blueprint, <span class="arg">Integer</span> OPT_count, <span class="arg">Boolean</span> OPT_instant )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sends an upgrade command to a player, egroup or sgroup. accepts a single upgrade or table of upgrades. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (1222) </b></td>
            </tr>
          </table>
        </p><a name="Cmd_WalkToAndThenRun"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_WalkToAndThenRun( <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> position, <span class="arg">Real</span> speedMultiplier, <span class="arg">Integer</span> OPT_distance = 10, <span class="arg">Boolean</span> OPT_ANY = ANY, <span class="arg">Boolean</span> OPT_queued = false )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set a squad's unit speed to a multiplied value, and revert it when they reach the target, speed cannot be 0.0f </p>
                <p>Squad will move to a position, once they're within 'distance', they will revert back to their original speed. ANY means any squad in the group within distance meets criteria, ALL means ALL squads. Queued means the command is queued if true as a command, rather than executing immediately.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\command.scar] (117) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_Entity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_Entity( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#EntityCommandType">EntityCommandType</a> entityCommand )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a entity command to a entity group(CMD_DefaultAction, CMD_Stop, CMD_Destroy, CMD_BuildSquad, CMD_CancelProduction, CMD_RallyPoint, CMD_AttackForced) </p>
                <p>Entity commands are mostly used for buildings etc.  If you need to issue commands to units, use the Squad_Command function.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1613) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityAbility( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send an entity ability command (CMD_Ability) to an entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1786) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityBuildSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityBuildSquad( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">ScarSquadPBG</span> squadPbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad command to a entity group with custom data </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1745) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityEntity( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#EntityCommandType">EntityCommandType</a> entityCommand, <span class="arg">EGroupID</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a entity-based command to an entity group. </p>
                <p>Use this function to issue orders that require a entity to an entity group (eg. order a building to attack another building)\n See LocalCommand_Entity for a list of all the possible entityCommands.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1646) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityExt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityExt( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#EntityCommandType">EntityCommandType</a> entityCommand, <span class="arg">Integer</span> cmdparam, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad command to a squad group with custom data </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1729) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityPos( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#EntityCommandType">EntityCommandType</a> entityCommand, <span class="arg">Position</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a position command to an entity group. </p>
                <p>Use this function to issue orders that require a position to an entity group (eg. set a rally point for a building)\n See LocalCommand_Entity for a list of all the possible entityCommands.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1628) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityPosAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityPosAbility( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">Position</span> pos, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a positional ability command (CMD_Ability) to an entity </p>
                <p>Use this function to issue ability orders that require a position to player</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1824) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityPosDirAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityPosDirAbility( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">Position</span> pos, <span class="arg">Position</span> dir, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a positional/directional ability command (CMD_Ability) to an entity </p>
                <p>Use this function to issue ability orders that require a position and a direction to player</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1864) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityPosSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityPosSquad( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#EntityCommandType">EntityCommandType</a> entityCommand, <span class="arg">Position</span> target, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a dual target (position and squad) command to an entity group. </p>
                <p>Use this function to issue orders that require a position and a squad to an entity group (eg. unloading squad from hold)\n See LocalCommand_Entity for a list of all the possible entityCommands.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1699) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntitySquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntitySquad( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#EntityCommandType">EntityCommandType</a> entityCommand, <span class="arg">SGroupID</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad-based command to an entity group. </p>
                <p>Use this function to issue orders that require a squad to an entity group (eg. order a building to attack a squad)\n See LocalCommand_Entity for a list of all the possible entityCommands.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1670) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityTargetEntityAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityTargetEntityAbility( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">EntityID</span> entityTarget, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send an entity-targeting ability command (CMD_Ability) to an entity </p>
                <p>Use this function to issue ability orders that require an entity target to an entity</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1904) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityTargetSquadAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityTargetSquadAbility( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">SquadID</span> squadTarget, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send an squad-targeting ability command (CMD_Ability) to an entity </p>
                <p>Use this function to issue ability orders that require an entity target to an entity</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1944) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_EntityUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_EntityUpgrade( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">ScarUpgradePBG</span> upgrade, <span class="arg">Boolean</span> instant, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad command to a entity group with custom data </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1766) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_Player"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_Player( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <a href="enum_list.htm#PlayerCommandType">PlayerCommandType</a> playerCommand )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player command to a player </p>
                <p>PCMD_Ability</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (519) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerAbility( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player ability command (PCMD_Ability) to a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (597) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerEntity( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <a href="enum_list.htm#PlayerCommandType">PlayerCommandType</a> playerCommand, <span class="arg">EGroupID</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send an entity command to a player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (553) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerExt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerExt( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <a href="enum_list.htm#PlayerCommandType">PlayerCommandType</a> playerCommand, <span class="arg">Integer</span> cmdparam, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player command to a player with a custom flag </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (476) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerMultiTargetAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerMultiTargetAbility( <span class="arg">PlayerID</span> caster, <span class="arg">vector&lt;ConstTargetHandle&gt;</span> targets, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player a command to use a multi-target ability on the given targets. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (699) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerPlaceAndConstructEntitiesPlanned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerPlaceAndConstructEntitiesPlanned( <span class="arg">PlayerID</span> player, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> position, <span class="arg">Position</span> facingPos, <span class="arg">Boolean</span> queued, <span class="arg">Boolean</span> payOnApply )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Place a planned structure </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2141) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerPlaceAndConstructFencePlanned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerPlaceAndConstructFencePlanned( <span class="arg">PlayerID</span> player, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> posStart, <span class="arg">Position</span> posEnd, <span class="arg">Boolean</span> queued, <span class="arg">Boolean</span> payOnApply )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Place a planned fence </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2175) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerPlaceAndConstructSlottedSplinePlanned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerPlaceAndConstructSlottedSplinePlanned( <span class="arg">PlayerID</span> player, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> posStart, <span class="arg">Position</span> posEnd, <span class="arg">Boolean</span> queued, <span class="arg">Boolean</span> payOnApply )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Place a planned slotted spline </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2207) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerPos( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <a href="enum_list.htm#PlayerCommandType">PlayerCommandType</a> playerCommand, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a position command to a player. </p>
                <p>Use this function to issue orders that require a position to player)\n See LocalCommand_Player for a list of all the possible playerCommands.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (536) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerPosAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerPosAbility( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <span class="arg">Position</span> pos, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a positional ability command (PCMD_Ability) to a player </p>
                <p>Use this function to issue ability orders that require a position to player</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (631) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerPosDirAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerPosDirAbility( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <span class="arg">Position</span> pos, <span class="arg">Position</span> dir, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a positional/directional ability command (PCMD_Ability) to a player </p>
                <p>Use this function to issue ability orders that require a position and a direction to player</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (666) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerPosExt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerPosExt( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <a href="enum_list.htm#PlayerCommandType">PlayerCommandType</a> playerCommand, <span class="arg">Position</span> pos, <span class="arg">Integer</span> cmdparam, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a position command to a player with extra info </p>
                <p>Use this function to issue orders that require a position to player\n See LocalCommand_Player for a list of all the possible playerCommands.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (579) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructBuilding( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> position, <span class="arg">Position</span> facingPos, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player command to itself to order squads in the sgroup to construct the building at specific position and facing </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building would cost nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2243) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructBuildingCheat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructBuildingCheat( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> position, <span class="arg">Position</span> facingPos, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player command to itself to order squads in the sgroup to construct the building at specific position and facing </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building would cost nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2400) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructFence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructFence( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> posStart, <span class="arg">Position</span> posEnd, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player command to itself to order squads in the sgroup to construct fences from posStart to posEnd </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building would cost nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2266) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructFenceCheat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructFenceCheat( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> posStart, <span class="arg">Position</span> posEnd, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player command to itself to order squads in the sgroup to construct fences from posStart to posEnd </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building would cost nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2420) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructField"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructField( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> posStart, <span class="arg">Position</span> posEnd, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player command to itself to order squads in the sgroup to construct a field ranging from posStart to posEnd </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building would cost nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2288) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructFieldCheat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructFieldCheat( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> posStart, <span class="arg">Position</span> posEnd, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player command to itself to order squads in the sgroup to construct a field ranging from posStart to posEnd </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building would cost nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2440) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructSlottedSpline"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructSlottedSpline( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> posStart, <span class="arg">Position</span> posEnd, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a command from player to sgroup to build ebp as a slotted spline from posStart to posEnd. </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building costs nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2309) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructSlottedSplineCheat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructSlottedSplineCheat( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> posStart, <span class="arg">Position</span> posEnd, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a command from player to sgroup to build ebp as a slotted spline from posStart to posEnd. </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building costs nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2459) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructSlottedSplineDependent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructSlottedSplineDependent( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> position, <span class="arg">Position</span> facingPos, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a command from player to sgroup to build ebp as a slotted spline dependent entity. </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building costs nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2337) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructSlottedSplineDependentCheat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructSlottedSplineDependentCheat( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> position, <span class="arg">Position</span> facingPos, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a command from player to sgroup to build ebp as a slotted spline dependent entity. </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building costs nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2478) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructSlottedSplineReplacer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructSlottedSplineReplacer( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> position, <span class="arg">Position</span> facingPos, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a command from player to sgroup to build ebp as a slotted spline replacer entity. </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building costs nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2367) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerSquadConstructSlottedSplineReplacerCheat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerSquadConstructSlottedSplineReplacerCheat( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> position, <span class="arg">Position</span> facingPos, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a command from player to sgroup to build ebp as a slotted spline replacer entity. </p>
                <p>structureBlueprint must be a valid building that can be constructed by the sgroup. This building costs nothing and does not effect population and availability This is a special command for SCAR use</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2497) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_PlayerUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_PlayerUpgrade( <span class="arg">PlayerID</span> player, <span class="arg">ScarUpgradePBG</span> upgrade, <span class="arg">Boolean</span> instant, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sends an upgrade command to a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (494) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_Squad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_Squad( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad command to a squad group </p>
                <p>SCMD_DefaultAction, SCMD_Move, SCMD_Stop, SCMD_Destroy, SCMD_BuildStructure, SCMD_Capture, SCMD_Attack, SCMD_ReinforceUnit, SCMD_Upgrade, SCMD_CancelProduction SCMD_AttackMove, SCMD_Ability SCMD_Load,SCMD_UnloadSquads, SCMD_DoPlan SCMD_SlotItemRemove, SCMD_InstantReinforceUnit, SCMD_InstantUpgrade</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1030) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadAbility( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a ability command (SCMD_Ability) to a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (775) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadAttackMovePos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadAttackMovePos( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">Position</span> target, <span class="arg">String</span> planName, <span class="arg">Boolean</span> queued, <span class="arg">Boolean</span> split )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a position ATTACK MOVE command to a squad group with custom data. </p>
                <p>WARNING: Element plans need to be reimplemented in state trees.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1300) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadEntity( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">EGroupID</span> target, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send an entity command to a squad group. </p>
                <p>Use this function to isssue an entity-based command to a squad group.\n See LocalCommand_Squad for a list of all the possible squadCommands</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1215) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadEntityAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadEntityAbility( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> target, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a entity ability command (SCMD_Ability) to a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (830) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadEntityAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadEntityAttack( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> target, <span class="arg">Boolean</span> bCheckFOW, <span class="arg">Boolean</span> bStationary, <span class="arg">String</span> planName, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send an entity command ATTACK to a squad group. </p>
                <p>Use this function to issue an entity-based command to a squad group with custom FOW check flag. (eg. order a squad to attack a building)\n planName is the name of the custom plan file to execute. Pass in empty string to use the default\n stationary flag uses SCMD_StationaryAttack instead where plan file is ignored and squad does not pursue its target See LocalCommand_Squad for a list of all the possible squadCommands WARNING: Element plans need to be reimplemented in state trees.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1367) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadEntityBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadEntityBool( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">EGroupID</span> target, <span class="arg">Boolean</span> cmdparam, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a entity command to a squad group with custom BOOLEAN data </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1270) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadEntityExt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadEntityExt( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">EGroupID</span> target, <span class="arg">Integer</span> cmdparam, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a entity command to a squad group with custom data </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1242) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadEntityLoad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadEntityLoad( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">EGroupID</span> target, <span class="arg">Boolean</span> bOverLoad, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send special squad command to a squad group with squad load parameters </p>
                <p>This is a special command for loading squads into building (entity) holds (SCMD_Load, SCMD_InstantLoad)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2547) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadExt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadExt( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">Integer</span> cmdparam, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad command to a squad group with custom data </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (992) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadMovePos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadMovePos( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> target, <span class="arg">Boolean</span> queued, <span class="arg">Boolean</span> reverseMove, <span class="arg">Boolean</span> split, <span class="arg">Real</span> acceptableProximity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a move to position command for a squad group. </p>
                <p>Use this function to issue move orders that require a position to a squad group</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1145) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadMovePosFacing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadMovePosFacing( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> target, <span class="arg">Position</span> facing, <span class="arg">Boolean</span> queued, <span class="arg">Boolean</span> reverseMove, <span class="arg">Boolean</span> split, <span class="arg">Real</span> acceptableProximity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a move-facing command to a squad group </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1182) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadMultiTargetAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadMultiTargetAbility( <span class="arg">SquadID</span> caster, <span class="arg">vector&lt;ConstTargetHandle&gt;</span> targets, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad a command to use a multi-target ability on the given targets. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (877) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadPath"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadPath( <span class="arg">PlayerID</span> pPlayer, <span class="arg">SGroupID</span> pSGroup, <span class="arg">String</span> pathName, <span class="arg">Integer</span> pathIndex, <span class="arg">Boolean</span> bFromClosest, <a href="enum_list.htm#LoopType">LoopType</a> loopType, <span class="arg">Boolean</span> bAttackMove, <span class="arg">Real</span> pauseTime, <span class="arg">Boolean</span> bMoveForward, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad patrol command (SCMD_Patrol) to a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (950) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadPos( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">Position</span> target, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a position command to a squad group. </p>
                <p>Use this function to issue orders that require a position to a squad group (eg. order a squad to move to position, or attack position)\n See LocalCommand_Squad for a list of all the possible squadCommands.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1109) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadPosAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadPosAbility( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> pos, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a positional ability command (SCMD_Ability) to a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (812) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadPosExt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadPosExt( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">Position</span> target, <span class="arg">Integer</span> cmdparam, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a position command to a squad group with custom data </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1048) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadPositionAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadPositionAttack( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> target, <span class="arg">Boolean</span> bCheckFOW, <span class="arg">Boolean</span> bStationary, <span class="arg">String</span> planName, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send an position command ATTACK to a squad group. </p>
                <p>Use this function to issue an position-based command to a squad group with custom FOW check flag. (eg. order a squad to attack a building)\n planName is the name of the custom plan file to execute. Pass in empty string to use the default\n stationary flag uses SCMD_StationaryAttack instead where plan file is ignored and squad does not pursue its target See LocalCommand_Squad for a list of all the possible squadCommands WARNING: Element plans need to be reimplemented in state trees.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1338) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadRetreatPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadRetreatPos( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> target, <span class="arg">Boolean</span> queued, <span class="arg">Boolean</span> allowNonInteractiveStages )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a retreat position command to a squad group. </p>
                <p>Use this function to issue retreat order that require a position to a squad group</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1071) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadSetCombatStance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadSetCombatStance( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#StanceType">StanceType</a> stanceType, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a set CombatStance command to the squads </p>
                <p>Set the CombatStance for all the Squads in the SGroup. StanceTypes: STANCE_CeaseFire (don't shoot), STANCE_StandGround (don't move, just shoot), STANCE_Attack (move and shoot)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1524) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadSetWeaponPreference"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadSetWeaponPreference( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#WeaponPreference">WeaponPreference</a> weaponPreference, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a set Weapon Preference command to the squads </p>
                <p>Set the Weapon Preference for all the Squads in the SGroup. WeaponPreference: WP_Melee, WP_Ranged,</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1581) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadSquad( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">SGroupID</span> target, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send an squad-based command to a squad group. </p>
                <p>Use this function to issue a squad-based command to a squad group. \n See LocalCommand_Squad for a list of all the possible squadCommands</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1443) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadSquadAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadSquadAbility( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">SGroupID</span> target, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad ability command (SCMD_Ability) to a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (854) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadSquadAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadSquadAttack( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">SGroupID</span> target, <span class="arg">Boolean</span> bCheckFOW, <span class="arg">Boolean</span> bStationary, <span class="arg">String</span> planName, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send an squad-based command to a squad group. </p>
                <p>Use this function to issue a squad-based command to a squad group with special boolean flag. (eg. order a squad to attack another squad)\n If bCheckFOW is set to false, the squad would be able to attack other squads hidden in FOW \n planName is the name of the custom plan file to execute. Pass in empty string to use the default\n stationary flag uses SCMD_StationaryAttack instead where plan file is ignored and squad does not pursue its target See LocalCommand_Squad for a list of all the possible squadCommands WARNING: Element plans need to be reimplemented in state trees.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1478) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadSquadExt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadSquadExt( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">SGroupID</span> target, <span class="arg">Integer</span> cmdparam, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a squad command to a squad group with custom data </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1413) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadSquadLoad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadSquadLoad( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> squadCommand, <span class="arg">SGroupID</span> target, <span class="arg">Boolean</span> bOverLoad, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send special squad command to a squad group with squad load parameters </p>
                <p>This is a special command for loading squads into vehicle (squad) holds (SCMD_Load, SCMD_InstantLoad)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (2517) </b></td>
            </tr>
          </table>
        </p><a name="LocalCommand_SquadUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 LocalCommand_SquadUpgrade( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarUpgradePBG</span> upgrade, <span class="arg">Boolean</span> instant, <span class="arg">Boolean</span> queued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sends an upgrade command to a squad group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaCommand.cpp] (1007) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Core"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Core</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Core_AddPlayerToTeam"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_AddPlayerToTeam( <span class="arg">PlayerID</span> player, <span class="arg">Team</span> teams_table )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Has a player join a specific team </p>
                <p>Will remove the player from his previous team.  If you pass in nil for newTeam, will add to a new empty team</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (1013) </b></td>
            </tr>
          </table>
        </p><a name="Core_Compare"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_Compare( <span class="arg">Number</span> value1, <span class="arg">Number</span> value2, <span class="arg">COMPARISON</span> comparator )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Compare two values using provided comparator </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (1134) </b></td>
            </tr>
          </table>
        </p><a name="Core_GetActiveTeamCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_GetActiveTeamCount(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of non-eliminated teams remaining. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (677) </b></td>
            </tr>
          </table>
        </p><a name="Core_GetPlayersTableEntry"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_GetPlayersTableEntry( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the table reference of a PLAYERS table entry </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (561) </b></td>
            </tr>
          </table>
        </p><a name="Core_GetPlayersTableEntryFromIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_GetPlayersTableEntryFromIndex( <span class="arg">Integer</span> playerIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the table reference of a PLAYERS table entry </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (574) </b></td>
            </tr>
          </table>
        </p><a name="Core_GetPlayerTeamsEntry"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_GetPlayerTeamsEntry( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the table reference of a player's TEAMS table entry </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (601) </b></td>
            </tr>
          </table>
        </p><a name="Core_GetTeamsEntryFromIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_GetTeamsEntryFromIndex( <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the entry in the Teams table that corresponds to the given teamIndex. </p>
                <p>NOTE: Use the teams table's .id entry - not the actual index of the table.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (613) </b></td>
            </tr>
          </table>
        </p><a name="Core_IsModuleRegistered"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_IsModuleRegistered( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a module is registered for delegate invocation, false if delegate invocation is disabled, nil if module not in module registry. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (477) </b></td>
            </tr>
          </table>
        </p><a name="Core_IsPlayerEliminated"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_IsPlayerEliminated( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a player is eliminated from the game. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (970) </b></td>
            </tr>
          </table>
        </p><a name="Core_IsPlayerOnPlayerTeam"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_IsPlayerOnPlayerTeam(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the two given players are on the same team. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (1002) </b></td>
            </tr>
          </table>
        </p><a name="Core_IsPlayersTableEntryValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_IsPlayersTableEntryValid( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the PLAYERS table contains the given player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (587) </b></td>
            </tr>
          </table>
        </p><a name="Core_IsTeamEliminated"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_IsTeamEliminated( <span class="arg">Team</span> teams_table )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a team is eliminated from the game. A team is considered eliminated when all of its players are eliminated. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (980) </b></td>
            </tr>
          </table>
        </p><a name="Core_IsTeamsEntryIndexValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_IsTeamsEntryIndexValid( <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if teamIndex is a valid index in the Teams table. </p>
                <p>NOTE: Use the teams table's .id entry - not the actual index of the table.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (627) </b></td>
            </tr>
          </table>
        </p><a name="Core_OnGameOver"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_OnGameOver(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Call this function to notify other modules (via their ***_OnGameOver() callback) that the match is about to end. </p>
                <p>Modules typically implement this for cleanup purposes (i.e. remove rules and UI elements) prior to the match end UI.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (994) </b></td>
            </tr>
          </table>
        </p><a name="Core_RegisterModule"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_RegisterModule( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Registers a script module for delegate invocation. The name should be the prefix used by all of the delegate functions in this module. This needs to be called in *global* scope of a module script with the prefix name of that module; use this instead of Scar_AddInit. </p>
                <p>For example, if you call Core_RegisterModule("MySystem") then any delegate functions in your script such as "MySystem_OnGameSetup" or "MySystem_OnInit" will be called at the appropriate time during the game initialization process (after the Project delegates but before the Mission delegates).</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (445) </b></td>
            </tr>
          </table>
        </p><a name="Core_RemovePlayerFromPlayersTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_RemovePlayerFromPlayersTable( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a player from player and team tables. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (639) </b></td>
            </tr>
          </table>
        </p><a name="Core_RevealFOWOnEliminationEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_RevealFOWOnEliminationEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the value of the "Reveal FOW on Elimination" match option </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (1118) </b></td>
            </tr>
          </table>
        </p><a name="Core_SetDefaultDefeatPresentation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_SetDefaultDefeatPresentation( <span class="arg">Table</span> presentationTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the default presentation table for defeated players. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (948) </b></td>
            </tr>
          </table>
        </p><a name="Core_SetDefaultVictoriousPresentation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_SetDefaultVictoriousPresentation( <span class="arg">function</span> presentationFunction )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the default presentation function for victorious players. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (856) </b></td>
            </tr>
          </table>
        </p><a name="Core_SetMutualPlayerRelationship"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_SetMutualPlayerRelationship( <span class="arg">PlayerID</span> player1, <span class="arg">PlayerID</span> player2, <span class="arg">Integer</span> relationship )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the relationship between two players </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (694) </b></td>
            </tr>
          </table>
        </p><a name="Core_SetMutualRelationship"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_SetMutualRelationship( <span class="arg">PlayerID/Table</span> player/teams_table, <span class="arg">PlayerID/Table</span> player/teams_table, <span class="arg">Relationship</span> relationship )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the relationship between two entries </p>
                <p>NOTE: You should generally be setting Team to Team only. Valid Relationships: R_NEUTRAL, R_ALLY, R_ENEMY, R_UNDEFINED</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (707) </b></td>
            </tr>
          </table>
        </p><a name="Core_SetPlayerDefeated"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_SetPlayerDefeated( <span class="arg">PlayerID</span> player, <span class="arg">function</span> presentationFunction, <span class="arg">winReason</span> reason )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a player as defeated. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (878) </b></td>
            </tr>
          </table>
        </p><a name="Core_SetPlayerVictorious"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_SetPlayerVictorious( <span class="arg">PlayerID</span> player, <span class="arg">function</span> presentationFunction, <span class="arg">winReason</span> reason )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a player as the match winner. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (778) </b></td>
            </tr>
          </table>
        </p><a name="Core_SetTeamDefeated"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_SetTeamDefeated( <span class="arg">Team</span> teams_table, <span class="arg">Table</span> presentationTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets if a team is defeated </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (955) </b></td>
            </tr>
          </table>
        </p><a name="Core_SetTeamVictorious"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_SetTeamVictorious( <span class="arg">Team</span> teams_table, <span class="arg">function</span> presentationFunction, <span class="arg">winReason</span> reason )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a team as the match winner. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (864) </b></td>
            </tr>
          </table>
        </p><a name="Core_UnregisterModule"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_UnregisterModule( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a script module from the delegate invocation system. </p>
                <p>This is usually used for a module to remove itself if it decided it isn't needed (i.e. a game mode that isn't relevant given the map). Please don't have modules removing each other!</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (460) </b></td>
            </tr>
          </table>
        </p><a name="Core_WinnerlessGameOver"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Core_WinnerlessGameOver( <span class="arg">function</span> presentationFunction, <span class="arg">winReason</span> reason )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the game to a GameOver state without an explicit winner </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core.scar] (823) </b></td>
            </tr>
          </table>
        </p><a name="Event_Delay"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_Delay( <span class="arg">Real</span> seconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pauses for a given amount of time. This function MUST be called from a CTRL object in NISlet events only! </p>
                <p>See Event_Start for more information on NISlet events.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (1601) </b></td>
            </tr>
          </table>
        </p><a name="Event_IsBeingSkipped"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_IsBeingSkipped(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the event is being skipped. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (1582) </b></td>
            </tr>
          </table>
        </p><a name="Event_Skip"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_Skip(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Completes execution of the event immediately (all calls to Wait() are ignored) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (1576) </b></td>
            </tr>
          </table>
        </p><a name="Event_Start"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_Start( <span class="arg">LuaFunction</span> eventFunction, <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Starts event.  Event will not start until all rules are evaluated for this frame! </p>
                <p>We allow saving events in multiplayer so please don't put any non-UI events in multiplayer Running events are not saved at all.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (1561) </b></td>
            </tr>
          </table>
        </p><a name="Event_StartEx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_StartEx( <span class="arg">LuaFunction</span> eventFunction, <span class="arg">Integer</span> int, <span class="arg">LuaFunction</span> onComplete )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Starts an event the same way as Event_Start, but calls a user defined function when the event is over </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (1567) </b></td>
            </tr>
          </table>
        </p><a name="Scar_AddInit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_AddInit( <span class="arg">LuaFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Register an init function with the scar system. </p>
                <p>This init function will be called when scar is started up.\n **Important: Make sure you do not register two functions with the same name; the init function names should be unique.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (1482) </b></td>
            </tr>
          </table>
        </p><a name="Scar_InitComplete"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_InitComplete(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Lets lua tell the game when it has finished initializing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (1530) </b></td>
            </tr>
          </table>
        </p><a name="Scar_InitExists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_InitExists( <span class="arg">LuaFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if an init function exists </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (1521) </b></td>
            </tr>
          </table>
        </p><a name="Scar_RemoveInit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Scar_RemoveInit( <span class="arg">LuaFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unregister an init function that was registered from Scar_AddInit </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\scar\Scar.cpp] (1509) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Debug"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Debug</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="_idleBehaviour_stop"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 _idleBehaviour_stop( <span class="arg">TABLE</span> data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>This is a global function that needs to exist for other things to work correctly. It used to be in module_defend.scar, but wasn't relevant to that particular chunk! </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3975) </b></td>
            </tr>
          </table>
        </p><a name="_IntelDebugNext"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 _IntelDebugNext(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays the next intel event in the debug queue.  IntelEvents are played sequentially as they are defined in a mission's .events file. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3769) </b></td>
            </tr>
          </table>
        </p><a name="_IntelDebugPrev"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 _IntelDebugPrev(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays the next intel event in the debug queue. IntelEvents are played sequentially as they are defined in a mission's .events file. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3792) </b></td>
            </tr>
          </table>
        </p><a name="_IntelDebugReplay"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 _IntelDebugReplay(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Replays the last intel event that was debugged. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3750) </b></td>
            </tr>
          </table>
        </p><a name="Game_DefaultGameRestore"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_DefaultGameRestore(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restores various aspects of the single player game after loading a mission from a save game </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3937) </b></td>
            </tr>
          </table>
        </p><a name="Game_GetGameRestoreCallbackExists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_GetGameRestoreCallbackExists( <span class="arg">Function</span> callback )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks whether a callback </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3921) </b></td>
            </tr>
          </table>
        </p><a name="Game_RemoveGameRestoreCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_RemoveGameRestoreCallback( <span class="arg">Function</span> callback )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a callback from being called on game restore </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3908) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetGameRestoreCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetGameRestoreCallback( <span class="arg">Function</span> callback )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a function and set of arguments to be automatically called during restore from a saved game. Maxiumum of 9 parameters. Callback will be called like this: Callback(arg[1], arg[2], ...) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3888) </b></td>
            </tr>
          </table>
        </p><a name="Util_EnterCinematicMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_EnterCinematicMode( <span class="arg">GameUICore</span> OPT_VisibilityFlag Enums, <span class="arg">List</span> OPT_of GameUICore VisibilityFlag enums to hide in cinematic mode. Pass in an empty table or nil to not hide any game components. Pass in the constant "DEFAULT_CINEMATIC_HIDDEN_GAME_COMPONENT_FLAGS" for a default set of game components to hide., <span class="arg">Function</span> skipNISCallback (optional): Skip NIS callback to set. )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enters Cinematic mode </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (4025) </b></td>
            </tr>
          </table>
        </p><a name="Util_ExitCinematicMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_ExitCinematicMode(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Exits Cinematic mode </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (4063) </b></td>
            </tr>
          </table>
        </p><a name="Util_FullscreenMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_FullscreenMode( <span class="arg">GameUICore</span> OPT_VisibilityFlag Enums, <span class="arg">List</span> OPT_of GameUICore VisibilityFlag enums to hide in fullscreen mode. Pass in an empty table or nil to not hide any game components. Pass in the constant "DEFAULT_FULLSCREEN_HIDDEN_GAME_COMPONENT_FLAGS" for a default set of game components to hide. )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enters Fullscreen mode </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (4140) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetCommandLineArgument"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetCommandLineArgument( <span class="arg">String</span> key of the argument you want to query )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Wrapper function for command line arguments. DO NOT USE MORE THAN ONCE PER ARGUMENT. It is impossible for them to change after application start, so save the result and reuse it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3989) </b></td>
            </tr>
          </table>
        </p><a name="Util_IsCinematicMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_IsCinematicMode(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether cinematic mode is active </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (4104) </b></td>
            </tr>
          </table>
        </p><a name="Util_NormalMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_NormalMode(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enters Normal mode </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (4109) </b></td>
            </tr>
          </table>
        </p><a name="Util_ReverseList"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_ReverseList( <span class="arg">table</span> list_to_reverse )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reverses the entries of the table that is passed to the function </p>
                <p>This function will iterate over a 1D array/table and flip it, so that the first element is the last, the last is the first, and so on.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (4009) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;DesignerLib"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;DesignerLib</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Are_Resources_Disabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Are_Resources_Disabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if Resources_Disable is currently applying to a player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\designerlib.scar] (74) </b></td>
            </tr>
          </table>
        </p><a name="Debug_ScartypeToString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Debug_ScartypeToString(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a string describing the Scartype </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\designerlib.scar] (91) </b></td>
            </tr>
          </table>
        </p><a name="Resources_Disable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Resources_Disable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disables any resource income - useful to stop resources accruing during the opening movie </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\designerlib.scar] (24) </b></td>
            </tr>
          </table>
        </p><a name="Resources_Enable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Resources_Enable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Re-enables resource income. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\designerlib.scar] (49) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;EGroup"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;EGroup</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="EGroup_Add"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Add( <span class="arg">EGroupID</span> group, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds an entity to the end of a group if the group doesnt already have it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (316) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_AddAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_AddAbility( <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds an ability to all entities in an egroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1459) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_AddEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_AddEGroup( <span class="arg">EGroupID</span> group, <span class="arg">EGroupID</span> grouptoadd )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Appends the entities in one group to another group. </p>
                <p>All entities from 'grouptoadd' will be added to 'group'.\n If 'group' already contains an entity from 'grouptoadd' it will not be added.\n This function does not clear the contents of 'grouptoadd'.\n Example: Add group2 (0, 10, 11, 22) to group1 (1, 11, 20) --&gt; group1 would now be (1, 11, 20, 0, 10, 22)\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (284) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CanSeeEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CanSeeEGroup( <span class="arg">EGroupID</span> egroup, <span class="arg">EGroupID</span> targetegroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY entities in a group can see ALL or ANY entities in a given egroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (482) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CanSeeSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CanSeeSGroup( <span class="arg">EGroupID</span> egroup, <span class="arg">SGroupID</span> targetsgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY entities in a group can see ALL or ANY squads in a given sgroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (494) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Clear"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Clear( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all entities from a group </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (273) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Compare"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Compare( <span class="arg">EGroupID</span> group1, <span class="arg">EGroupID</span> group2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the contents of the two groups are equal. Order of the entities does not matter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (310) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_ContainsBlueprints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_ContainsBlueprints( <span class="arg">EGroupID</span> egroup, <span class="arg">EBP/EntityType/Table</span> blueprint, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if a group contains ALL or ANY of the blueprints. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (677) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_ContainsEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_ContainsEGroup( <span class="arg">EGroupID</span> egroup1, <span class="arg">EGroupID</span> egroup2, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if EGroup1 contains ANY or ALL of EGroup2 </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1054) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_ContainsEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_ContainsEntity( <span class="arg">EGroupID</span> egroup, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if EGroup contains a particular EntityID </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1036) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Count"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Count( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total number of spawned and despawned entities in a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (255) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CountAlive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CountAlive( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the number of alive entities (both spawned and despawned) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (831) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CountBlueprints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CountBlueprints( <span class="arg">EGroupID</span> sgroup, <span class="arg">Integer</span> ebp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total count of all entities in a given EGroup with the provided blueprint </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (748) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CountDeSpawned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CountDeSpawned( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of despawned entities in a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (267) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CountSpawned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CountSpawned( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of spawned entities in a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (261) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Create"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Create( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a new entity group with the given name. </p>
                <p>Entity groups are used for buildings and objects such as rocks and trees.\n If you need to issue orders to a group vehicles or units you must use a SGroup.\n Note that you cannot create egroups with duplicate names.\n To be safe, you can check if the EGroup you want to create exists using EGroup_Exists( )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (182) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CreateIfNotFound"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CreateIfNotFound( <span class="arg">String</span> egroupname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find a entity group from name.  Creates a new one with given name if it doesnt exist. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (506) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CreateKickerMessage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CreateKickerMessage( <span class="arg">EGroupID</span> group, <span class="arg">String</span> textid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create and display kicker message on the each entity in the egroup to the player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1067) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CreateUnique"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CreateUnique( <span class="arg">String</span> OPT_prefix )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an EGroup with a unique name, prefixed by the 'prefix' parameter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (421) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CreateUniqueWithPrefix"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CreateUniqueWithPrefix( <span class="arg">String</span> prefix )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a new entity group with an autogenerated unique name, optionally prefixed by the string passed in. </p>
                <p>Use this if you want to create a new EGroup but don't necessarily care about the name.\n Entity groups are used for buildings and objects such as rocks and trees.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (208) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_DeSpawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_DeSpawn( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Despawn all spawned entities in a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (819) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Destroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Destroy( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Manually destroy a group that you don't need anymore. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (231) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_DestroyAllEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_DestroyAllEntities( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroys all spawned and despawned entities in a group. </p>
                <p>Be careful not to confuse this with EGroup_Destroy which destroys the group and NOT the items it contains.  This function will destroy spawned and despawned items in a group</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (665) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Duplicate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Duplicate( <span class="arg">EGroupID</span> egroupid1, <span class="arg">EGroupID</span> egroupid2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Duplicates an EGroup. Creates a copy of egroup1 in egroup2. The function will clear egroup2 beforehand if necessary. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1263) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_EnableMinimapIndicator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_EnableMinimapIndicator( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables the minimap indicator for all entities in a group </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1582) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_EnableUIDecorator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_EnableUIDecorator( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> enable, <span class="arg">Boolean</span> enableSelection )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable decorators on all entities in the egroup. Sets selection visuals as well unless enableSelection is specified. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1678) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Exists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Exists( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity group with the given name exists </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (420) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Filter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Filter( <span class="arg">EGroupID</span> egroup, <span class="arg">String</span> blueprint/type, <span class="arg">Integer</span> filtertype, <span class="arg">EGroupID</span> OPT_splitGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an EGroup by blueprint or type. </p>
                <p>Blueprints can be provided by name or by ID, and in a table if you want to filter on more than one type. Setting filtertype to FILTER_KEEP results in the group only containing entities of the types listed in the blueprint table. Setting filtertype to FILTER_REMOVE will strip those same entities out and leave those that aren't of the types listed.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1138) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_FilterOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_FilterOnScreen( <span class="arg">EGroupID</span> egroup, <span class="arg">Real</span> percent, <span class="arg">Integer</span> filtertype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an EGroup by whether units are on screen or not. Percent refers to the screen area you are considering (0.8 is a good value to use - it won't include things that are right at the screen edge). </p>
                <p>Setting filtertype to FILTER_KEEP results in the group only containing those entities that are on screen.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1235) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_FilterSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_FilterSquads( <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> filter_type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an EGroup by whether or not the entity is part of a squad. filter_type can be FILTER_KEEP or FILTER_REMOVE </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1176) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_FilterUnderConstruction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_FilterUnderConstruction( <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> filtertype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an EGroup by construction status. Set the filtertype to FILTER_REMOVE to remove buildings under construction. </p>
                <p>Setting filtertype to FILTER_KEEP results in the group only containing those entities that are in the process of being built.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1202) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_ForEach"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_ForEach( <span class="arg">EGroupID</span> egroup, <span class="arg">StackVarFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Call a lua function for each item in a group. Function will recieve (groupid, itemindex, itemid) and should return true to break or false to continue. </p>
                <p>function Rule_Test( )\n \tlocal DespawnEntity = function( egroupid, itemindex, entityID )\n \t\tEntity_Despawn( entityID )\n \tend\n\n \tEGroup_ForEach( EGroup_FromName("eg_PlayersHQ"), DespawnEntity )\n end\n Note: This function iterates over SPAWNED ENTITIES ONLY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (519) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_ForEachAllOrAny"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_ForEachAllOrAny( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all, <span class="arg">StackVarFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Call a lua function for each item in a group. Function will receive (groupid, itemindex, itemid) and should return a bool. </p>
                <p>Only use this to TEST conditions on entities. DO NOT use this to perform operations on all entities, since it may not call your function on all entities (due to short circuit evaluation). This is used for checking if ALL or ANY items in a group match a given predicate. (eg. Are all items in a group chaos marines)\n Note: This function iterates over SPAWNED ENTITIES ONLY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (504) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_ForEachAllOrAnyEx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_ForEachAllOrAnyEx( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all, <span class="arg">StackVarFunction</span> f, <span class="arg">Boolean</span> spawned, <span class="arg">Boolean</span> despawned )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Same as EGroup_ForEachAllOrAny except you have a choice to iterate over spawned entities, despawned entities, or both. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (440) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_ForEachEx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_ForEachEx( <span class="arg">EGroupID</span> egroup, <span class="arg">StackVarFunction</span> f, <span class="arg">Boolean</span> spawned, <span class="arg">Boolean</span> despawned )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Same as EGroup_ForEach except you have a choice to iterate over spawned entities, despawned entities, or both. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (475) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_FromName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_FromName( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find an entity group with a given name. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (240) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetAvgHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetAvgHealth( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the average health ratio of all units in a entity group. </p>
                <p>This uses the "proper" measure of health for panel buildings, so should accurately reflect what the user sees.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (571) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetClosestEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetClosestEntities(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the COUNT closest entities to POSITION from EGROUP. Does NOT remove entities from the source EGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (893) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetClosestEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetClosestEntity( <span class="arg">EGroupID</span> egroupid, <span class="arg">Marker/Pos</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the closest entity in an egroup to a given position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (869) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetDeSpawnedEntityAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetDeSpawnedEntityAt( <span class="arg">EGroupID</span> group, <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the despawned entity at the given index. </p>
                <p>Use EGroup_GetSpawnedEntityAt if you want the spawned items in the group\n Use index 1 to get the first entity in the group.\n It is an error if index &gt; EGroup_GetCountDeSpawned()\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (383) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetEntityAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetEntityAt( <span class="arg">EGroupID</span> group, <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the entity at the given index. </p>
                <p>Use EGroup_GetSpawnedEntityAt or EGroup_GetDeSpawnedEntityAt if you want the spawned/despawned items in the group\n Use index 1 to get the first entity in the group.\n It is an error if index &gt; EGroup_GetCount()\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (339) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetInvulnerable( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check invulnerablity state for ALL or ANY entity in an entity group. </p>
                <p>Set all param to true to check for ALL or set to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (793) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetLastAttacker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetLastAttacker( <span class="arg">EGroupID</span> EGroupVictim, <span class="arg">SGroupID</span> SGroupAttacker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the last attacker(s) for all the entities in an EGroup Gets the last attacker for all the squads in an SGroup and stores that in SGroupAttacker </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1554) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetName( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the name of a given entity group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (428) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetOffsetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetOffsetPosition( <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> offset, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a position (a certain distance away) relative to an entity's current position/orientation. see ScarUtil.scar for explanation of 'offset' parameter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1491) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetPosition( <span class="arg">EGroupID</span> group )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the center position of an entity group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (401) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetRandomSpawnedEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetRandomSpawnedEntity( <span class="arg">EGroupID</span> egroupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a random spawned entity from egroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (849) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetSequence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetSequence( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Builds a table of EGroupIDs that are named in a sequence. i.e. a name of "eg_building" will find groups "eg_building1", "eg_building2" and so on, up until it looks for a group that isn't there. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1370) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetSpawnedEntityAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetSpawnedEntityAt( <span class="arg">EGroupID</span> group, <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the spawned entity at the given index. </p>
                <p>Use EGroup_GetDeSpawnedEntityAt if you want the despawned items in the group\n Use index 1 to get the first entity in the group.\n It is an error if index &gt; EGroup_GetCountSpawned()\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (361) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetSpawnedEntityFilter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetSpawnedEntityFilter( <span class="arg">EGroupID</span> egroupid, <span class="arg">function</span> condition(entity) )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the first spawned entity from egroup that meets the condition (a function that takes an entity) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (936) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetSpread"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetSpread( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the distance from the centre of the group of the entity that furthest out. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1345) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetSquadsHeld"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetSquadsHeld( <span class="arg">EGroupID</span> egroup, <span class="arg">SGroupID</span> sgroupRecipient )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an sgroup containing all squads held by any entities in an egroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1476) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetTotalHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetTotalHealth( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total health of all units in a entity group. </p>
                <p>This uses the "proper" measure of health for panel buildings, so should accurately reflect what the user sees.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (601) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_HasAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_HasAbility( <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> ability, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether ANY or ALL buildings in a group have a specified ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1466) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_HasBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_HasBlueprint( <span class="arg">EGroupID</span> egroup, <span class="arg">EBP/EntityType/Table</span> blueprint, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if ANY or ALL of the entities in a group match the blueprint specified. </p>
                <p>The blueprint can be a table of blueprints or types (see Entity_HasBlueprint() for details)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (697) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_HasUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_HasUpgrade( <span class="arg">EGroupID</span> egroup, <span class="arg">UpgradeID</span> upgrade, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ANY or ALL entities in an EGroup have the specified upgrade </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1313) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Hide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Hide( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> hide )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hide or show all entities in an EGroup </p>
                <p>Bool should be true to hide, false to show</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (982) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_InstantCaptureStrategicPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_InstantCaptureStrategicPoint( <span class="arg">EGroupID</span> egroup, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Change the ownership of a Strategic Point </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (967) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_InstantRevertOccupiedBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_InstantRevertOccupiedBuilding( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reverts an occupied building </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1567) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Intersection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Intersection( <span class="arg">EGroupID</span> group, <span class="arg">EGroupID</span> grouptointersect )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Performs a group intersection. </p>
                <p>Only entities that are in both groups will be added to 'group'.\n The contents of 'grouptointersect' will not be changed.\n Example: group = (1,2,3,4,5,6)  grouptointersect = (2,4,6,8,10)   --&gt; group will now equal (2,4,6)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (294) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsBurning"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsBurning( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> ALL )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ANY or ALL entities in an egroup are on fire (ignition threshold exceeded) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1665) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsCapturedByPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsCapturedByPlayer( <span class="arg">EGroupID</span> egroup, <span class="arg">PlayerID</span> playerId, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if all or any strategic points in a group have been captured. Use ANY or ALL. </p>
                <p>This function will ignore all entities that cannot be captured and will return false if no entities in the group can be captured.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (521) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsCapturedByTeam"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsCapturedByTeam( <span class="arg">EGroupID</span> egroup, <span class="arg">TeamID</span> teamId, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if all or any strategic points in a group have been captured. Use ANY or ALL. </p>
                <p>This function will ignore all entities that cannot be captured and will return false if no entities in the group can be captured.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (545) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsDoingAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsDoingAttack( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY entities are attacking within the time </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (470) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsEmpty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsEmpty( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a named entity group contains no spawned or despawned entities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (513) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsHoldingAny"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsHoldingAny( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether any entity in an EGroup has a hold on anything </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1443) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsInCover"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsInCover( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY entities are in cover. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (434) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsMoving"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsMoving( <span class="arg">EGroupID</span> egroupid, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL entities in an EGroup are moving. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1080) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsOnScreen( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> group, <span class="arg">Boolean</span> all, <span class="arg">Real</span> OPT_percent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL (use those keywords) of the enities in the group are present onscreen. You can pass in a percentage of the screen to check, so 0.8 would be a centered rectangle occupying 80% of the screen. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1276) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsProducingSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsProducingSquads( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY entities in a group are currently producing squads </p>
                <p>Set all to true to check for ALL or set to false to check for ANY</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1520) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsSpawned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsSpawned( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> ALL )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ANY or ALL entities in an group are currently spawned or not. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1701) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsUnderAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsUnderAttack( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY entities are under attack within the time </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (445) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsUnderAttackByPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsUnderAttackByPlayer( <span class="arg">EGroupID</span> group, <span class="arg">PlayerID</span> attackerplayer, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the entities are attacked by the player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1015) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsUnderAttackFromDirection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsUnderAttackFromDirection( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all, <span class="arg">Integer</span> offset, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY entities are under attack from a direction within the time. see ScarUtil.scar for types of directions. you can pass in a table of offsets </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (457) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsUsingAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsUsingAbility( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> ALL )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ANY or ALL squads within an EGroup are using an ability </p>
                <p>also used for emplacements/entities that are built but function through the use of squads.  Does not check WHAT ability a squad is using.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1533) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_IsValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_IsValid( <span class="arg">Integer</span> egroupID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check to see if an egroup still exists without needing the name. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (170) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Kill"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Kill( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kill all entities in an EGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (997) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_NotifyOnPlayerDemolition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_NotifyOnPlayerDemolition( <span class="arg">EGroupID</span> id, <span class="arg">LuaFunction</span> function )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calls a function when any entity in an EGroup gets destroyed by the player clicking the "Detonate me" button </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1638) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Remove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Remove( <span class="arg">EGroupID</span> group, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an entity from a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (329) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_RemoveAllMatching"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_RemoveAllMatching( <span class="arg">EGroupID</span> group, <span class="arg">EGroupID</span> grouptocompare )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes any entites that exist in both groups. </p>
                <p>Entities that exist in both groups will be removed from 'group'.\n The contents of 'grouptocompare' will not be changed.\n Example: group = (1,2,3,4,5,6)  grouptocompare = (1,2,3,8,10)   --&gt; group will now equal (4,5,6)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (304) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_RemoveDemolitions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_RemoveDemolitions( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all demolition charges on an egroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1603) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_RemoveGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_RemoveGroup( <span class="arg">EGroupID</span> group, <span class="arg">EGroupID</span> grouptoremove )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove from the first EGroup all entities contained in the second EGroup. EGroup2 remains untouched. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1505) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_RemoveNonHoldEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_RemoveNonHoldEntities( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all the entities from the EGroup that don't have HoldExt on them </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (525) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_RemoveUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_RemoveUpgrade( <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> upgrade )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes upgrade(s) from an egroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1625) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_ReSpawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_ReSpawn( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Respawn all despawned entities in a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (808) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetAnimatorAction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetAnimatorAction( <span class="arg">EGroupID</span> egroup, <span class="arg">String</span> actionName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Trigger animation action for an EGroup. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1392) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetAnimatorEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetAnimatorEvent( <span class="arg">EGroupID</span> egroup, <span class="arg">String</span> eventName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set animation event for an EGroup. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1405) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetAnimatorState"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetAnimatorState( <span class="arg">EGroupID</span> egroup, <span class="arg">String</span> stateMachineName, <span class="arg">String</span> stateName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set animation state of a state machine for an EGroup. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1418) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetAnimatorVariable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetAnimatorVariable( <span class="arg">EGroupID</span> egroup, <span class="arg">String</span> variableName, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set animation variable value for an EGroup. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1431) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetAutoTargetting"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetAutoTargetting( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether a weapon to auto-target things or not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1292) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetAvgHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetAvgHealth( <span class="arg">EGroupID</span> egroup, <span class="arg">Real</span> healthPercent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the health of each unit in an entity group to a given percent [0.0, 1.0]. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (635) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetCrushable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetCrushable( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> crushable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Overrides crushable behavior for an egroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1589) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetDemolitions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetDemolitions( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroupid, <span class="arg">Integer</span> OPT_numcharges )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Instantly wires a building for demolitions </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1650) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetHealthMinCap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetHealthMinCap( <span class="arg">EGroupID</span> egroup, <span class="arg">Real</span> minhealth )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the minimum health for this entity </p>
                <p>This is usually set to zero, any higher value prevents the entity from having its health reduced below this given value</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (735) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetInvulnerable( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> enabled, <span class="arg">Real</span> OPT_reset_time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable/Disable invulnerablity for an entire entity group. Use true and false for simple on/off, or use a number between 0.0 and 1.0 for more precise control on how much damage an entity can take before it takes no more. </p>
                <p>The optional reset_time is used to automatically remove invulnerability after a set time. If invulnerable, health damage is disabled.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (712) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetPlayerOwner"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetPlayerOwner( <span class="arg">EGroupID</span> egroup, <span class="arg">PlayerID</span> owner )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Changes the player owner for all spawned and despawned entities of an EGroup. </p>
                <p>Strategic/capturable point does not support setting player owner directly</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (649) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetRallyPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetRallyPoint( <span class="arg">EGroupID</span> egroup, <span class="arg">Position</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the rally point for this entity </p>
                <p>This is usually set to zero, any higher value prevents the entity from having its health reduced below this given value</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (774) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetRecrewable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetRecrewable( <span class="arg">EGroupID</span> sgroup, <span class="arg">Boolean</span> recrewable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets all entities in an egroup to be recrewable or not when abandoned </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1692) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetSelectable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetSelectable( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> selectable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set player selectable state of entities in the egroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (957) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetSharedProductionQueue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetSharedProductionQueue( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables shared team production on a building (teammates can build using THEIR resources) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1618) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetStrategicPointNeutral"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetStrategicPointNeutral( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a strategic point to neutral (not owned by any team) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1596) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetWorldOwned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetWorldOwned( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes an egroup neutral </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1611) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_Single"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_Single( <span class="arg">EGroupID</span> egroup, <span class="arg">entityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates an entity group containing a single entity </p>
                <p>Creates an EGroup containing just one entity, creating the group if it doesn't exist and clearing it if it does. It returns the name of the EGroup.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1098) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SortBasedOnHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SortBasedOnHealth( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> ascending )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sorts the EGroup based on health </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (540) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_WarpToMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_WarpToMarker( <span class="arg">EGroupID</span> entity, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Warps all members of an EGroup immediately to a marker </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1125) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_WarpToPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_WarpToPos( <span class="arg">EGroupID</span> entity, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Warps all members of an EGroup immediately to a new position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1112) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetTotalHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetTotalHealth( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total health of all units combined in a squad group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (618) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_HasEntityUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_HasEntityUpgrade( <span class="arg">EGroupID</span> egroup, <span class="arg">UpgradeID</span> upgrade, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of the squad's entities have the specified upgrade </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1326) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Encounter"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Encounter</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Ai"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Ai( <span class="arg">SGroupID</span> sgroup, <span class="arg">ANY/ALL</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds all encounters that contain ANY or ALL squads within the given sgroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (142) </b></td>
            </tr>
          </table>
        </p><a name="Ai"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Ai( <span class="arg">Squad</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds all encounters that contain ANY or ALL squads within the given sgroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (157) </b></td>
            </tr>
          </table>
        </p><a name="AI_DisableAllEncounters"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_DisableAllEncounters(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disables all encounters </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (220) </b></td>
            </tr>
          </table>
        </p><a name="AI_EnableAllEncounters"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_EnableAllEncounters(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables all encounters </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (228) </b></td>
            </tr>
          </table>
        </p><a name="AI_GetActiveEncounters"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetActiveEncounters(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table with all active (not dead) encounters. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (201) </b></td>
            </tr>
          </table>
        </p><a name="AI_GetNumEncounters"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_GetNumEncounters(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of alive encounters currently managed by the AI manager. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (195) </b></td>
            </tr>
          </table>
        </p><a name="AI_IsMatchingDifficulty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_IsMatchingDifficulty( <span class="arg">Integer</span> difficultyList )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns True if the current AI_Manager difficulty matches any in a given list. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (249) </b></td>
            </tr>
          </table>
        </p><a name="AI_OverrideDifficulty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_OverrideDifficulty( <span class="arg">Integer</span> level )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Overrides the current difficulty setting (only for the AI Manager). Pass 'nil' to reset to Game_GetSPDifficulty() value </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (237) </b></td>
            </tr>
          </table>
        </p><a name="AI_RemoveAllEncounters"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_RemoveAllEncounters( <span class="arg">Boolean</span> stopAll )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears goals on all encounters, then empties the encounter list. Can also issue a stop command to all units. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (208) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetDebugLevel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetDebugLevel(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the level of debug information shown but Ai:Print(). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (131) </b></td>
            </tr>
          </table>
        </p><a name="AI_SetDefaultEnemyPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_SetDefaultEnemyPlayer( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the default player to use when creating an encounter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (268) </b></td>
            </tr>
          </table>
        </p><a name="AI_ToggleDebugData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ToggleDebugData(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle encounter/goal debug information on screen. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (119) </b></td>
            </tr>
          </table>
        </p><a name="AI_ToggleDebugPrint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AI_ToggleDebugPrint(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle printing console debug information for encounters. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\ai.scar] (113) </b></td>
            </tr>
          </table>
        </p><a name="AIAbilityGoal_AdjustDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIAbilityGoal_AdjustDefaultGoalData( <span class="arg">Table</span> additionalDefaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adjust default goal data for ability goals.  Sets the default GoalData to the current defaults plus additionalDefaultGoalData; any values specified are used for unspecified encounter ability goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\abilitygoal.scar] (89) </b></td>
            </tr>
          </table>
        </p><a name="AIAbilityGoal_SetDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIAbilityGoal_SetDefaultGoalData( <span class="arg">Table</span> defaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default goal data for ability goals.  defaultGoalData is cloned; any values specified are used for unspecified encounter ability goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\abilitygoal.scar] (110) </b></td>
            </tr>
          </table>
        </p><a name="AIAbilityGoal_SetModifyGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIAbilityGoal_SetModifyGoalData( <span class="arg">Table</span> modifyGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set modify goal data for ability goals.  modifyGoalData is cloned; values specified via keyname_Multiplier are used for the numeric keyname encounter ability goal value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\abilitygoal.scar] (138) </b></td>
            </tr>
          </table>
        </p><a name="AIAbilityGoal_SetOverrideGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIAbilityGoal_SetOverrideGoalData( <span class="arg">Table</span> overrideGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set override goal data for ability goals.  overrideGoalData is cloned; any values specified are used for encounter ability goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\abilitygoal.scar] (124) </b></td>
            </tr>
          </table>
        </p><a name="AIAttackGoal_AdjustDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIAttackGoal_AdjustDefaultGoalData( <span class="arg">Table</span> additionalDefaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adjust default goal data for attack goals.  Sets the default GoalData to the current defaults plus additionalDefaultGoalData; any values specified are used for unspecified encounter attack goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\attackgoal.scar] (90) </b></td>
            </tr>
          </table>
        </p><a name="AIAttackGoal_SetDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIAttackGoal_SetDefaultGoalData( <span class="arg">Table</span> defaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default goal data for attack goals.  defaultGoalData is cloned; any values specified are used for unspecified encounter attack goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\attackgoal.scar] (111) </b></td>
            </tr>
          </table>
        </p><a name="AIAttackGoal_SetModifyGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIAttackGoal_SetModifyGoalData( <span class="arg">Table</span> modifyGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set modify goal data for attack goals.  modifyGoalData is cloned; values specified via keyname_Multiplier are used for the numeric keyname encounter attack goal value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\attackgoal.scar] (139) </b></td>
            </tr>
          </table>
        </p><a name="AIAttackGoal_SetOverrideGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIAttackGoal_SetOverrideGoalData( <span class="arg">Table</span> overrideGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set override goal data for attack goals.  overrideGoalData is cloned; any values specified are used for encounter attack goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\attackgoal.scar] (125) </b></td>
            </tr>
          </table>
        </p><a name="AIBaseGoal_AdjustDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIBaseGoal_AdjustDefaultGoalData( <span class="arg">Table</span> additionalDefaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adjust default goal data.  Sets the default GoalData to the current defaults plus additionalDefaultGoalData; any values specified are used for unspecified encounter goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\basegoal.scar] (133) </b></td>
            </tr>
          </table>
        </p><a name="AIBaseGoal_SetDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIBaseGoal_SetDefaultGoalData( <span class="arg">Table</span> defaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default goal data.  defaultGoalData is cloned; any values specified are used for unspecified encounter goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\basegoal.scar] (152) </b></td>
            </tr>
          </table>
        </p><a name="AIBaseGoal_SetModifyGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIBaseGoal_SetModifyGoalData( <span class="arg">Table</span> modifyGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set modify goal data.  modifyGoalData is cloned; values specified via keyname_Multiplier are used for the numeric keyname encounter goal value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\basegoal.scar] (180) </b></td>
            </tr>
          </table>
        </p><a name="AIBaseGoal_SetOverrideGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIBaseGoal_SetOverrideGoalData( <span class="arg">Table</span> overrideGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set override goal data.  overrideGoalData is cloned; any values specified are used for encounter goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\basegoal.scar] (166) </b></td>
            </tr>
          </table>
        </p><a name="AIDefendGoal_AdjustDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIDefendGoal_AdjustDefaultGoalData( <span class="arg">Table</span> additionalDefaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adjust default goal data for defend goals.  Sets the default GoalData to the current defaults plus additionalDefaultGoalData; any values specified are used for unspecified encounter defend goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\defendgoal.scar] (145) </b></td>
            </tr>
          </table>
        </p><a name="AIDefendGoal_SetDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIDefendGoal_SetDefaultGoalData( <span class="arg">Table</span> defaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default goal data for defend goals.  defaultGoalData is cloned; any values specified are used for unspecified encounter defend goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\defendgoal.scar] (166) </b></td>
            </tr>
          </table>
        </p><a name="AIDefendGoal_SetModifyGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIDefendGoal_SetModifyGoalData( <span class="arg">Table</span> modifyGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set modify goal data for defend goals.  modifyGoalData is cloned; values specified via keyname_Multiply are used for the numeric keyname encounter defend goal value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\defendgoal.scar] (194) </b></td>
            </tr>
          </table>
        </p><a name="AIDefendGoal_SetOverrideGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIDefendGoal_SetOverrideGoalData( <span class="arg">Table</span> overrideGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set override goal data for defend goals.  overrideGoalData is cloned; any values specified are used for encounter defend goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\defendgoal.scar] (180) </b></td>
            </tr>
          </table>
        </p><a name="AIFormationAttackGoal_AdjustDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIFormationAttackGoal_AdjustDefaultGoalData( <span class="arg">Table</span> additionalDefaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adjust default goal data for attack goals.  Sets the default GoalData to the current defaults plus additionalDefaultGoalData; any values specified are used for unspecified encounter attack goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\formationattackgoal.scar] (94) </b></td>
            </tr>
          </table>
        </p><a name="AIFormationAttackGoal_SetDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIFormationAttackGoal_SetDefaultGoalData( <span class="arg">Table</span> defaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default goal data for attack goals.  defaultGoalData is cloned; any values specified are used for unspecified encounter attack goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\formationattackgoal.scar] (115) </b></td>
            </tr>
          </table>
        </p><a name="AIFormationAttackGoal_SetModifyGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIFormationAttackGoal_SetModifyGoalData( <span class="arg">Table</span> modifyGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set modify goal data for attack goals.  modifyGoalData is cloned; values specified via keyname_Multiplier are used for the numeric keyname encounter attack goal value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\formationattackgoal.scar] (143) </b></td>
            </tr>
          </table>
        </p><a name="AIFormationAttackGoal_SetOverrideGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIFormationAttackGoal_SetOverrideGoalData( <span class="arg">Table</span> overrideGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set override goal data for attack goals.  overrideGoalData is cloned; any values specified are used for encounter attack goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\formationattackgoal.scar] (129) </b></td>
            </tr>
          </table>
        </p><a name="AIFormationDefendAreaGoal_AdjustDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIFormationDefendAreaGoal_AdjustDefaultGoalData( <span class="arg">Table</span> additionalDefaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adjust default goal data for DefendArea goals.  Sets the default GoalData to the current defaults plus additionalDefaultGoalData; any values specified are used for unspecified encounter DefendArea goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\formationdefendareagoal.scar] (125) </b></td>
            </tr>
          </table>
        </p><a name="AIFormationDefendAreaGoal_SetDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIFormationDefendAreaGoal_SetDefaultGoalData( <span class="arg">Table</span> defaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default goal data for DefendArea goals.  defaultGoalData is cloned; any values specified are used for unspecified encounter DefendArea goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\formationdefendareagoal.scar] (146) </b></td>
            </tr>
          </table>
        </p><a name="AIFormationDefendAreaGoal_SetModifyGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIFormationDefendAreaGoal_SetModifyGoalData( <span class="arg">Table</span> modifyGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set modify goal data for DefendArea goals.  modifyGoalData is cloned; values specified via keyname_Multiplier are used for the numeric keyname encounter DefendArea goal value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\formationdefendareagoal.scar] (174) </b></td>
            </tr>
          </table>
        </p><a name="AIFormationDefendAreaGoal_SetOverrideGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIFormationDefendAreaGoal_SetOverrideGoalData( <span class="arg">Table</span> overrideGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set override goal data for DefendArea goals.  overrideGoalData is cloned; any values specified are used for encounter DefendArea goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\formationdefendareagoal.scar] (160) </b></td>
            </tr>
          </table>
        </p><a name="AIMoveGoal_AdjustDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIMoveGoal_AdjustDefaultGoalData( <span class="arg">Table</span> additionalDefaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adjust default goal data for move goals.  Sets the default GoalData to the current defaults plus additionalDefaultGoalData; any values specified are used for unspecified encounter move goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\movegoal.scar] (81) </b></td>
            </tr>
          </table>
        </p><a name="AIMoveGoal_SetDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIMoveGoal_SetDefaultGoalData( <span class="arg">Table</span> defaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default goal data for move goals.  defaultGoalData is cloned; any values specified are used for unspecified encounter move goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\movegoal.scar] (102) </b></td>
            </tr>
          </table>
        </p><a name="AIMoveGoal_SetModifyGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIMoveGoal_SetModifyGoalData( <span class="arg">Table</span> modifyGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set modify goal data for move goals.  modifyGoalData is cloned; values specified via keyname_Multiply are used for the numeric keyname encounter move goal value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\movegoal.scar] (130) </b></td>
            </tr>
          </table>
        </p><a name="AIMoveGoal_SetOverrideGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AIMoveGoal_SetOverrideGoalData( <span class="arg">Table</span> overrideGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set override goal data for move goals.  overrideGoalData is cloned; any values specified are used for encounter move goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\movegoal.scar] (116) </b></td>
            </tr>
          </table>
        </p><a name="AITownLifeGoal_AdjustDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AITownLifeGoal_AdjustDefaultGoalData( <span class="arg">Table</span> additionalDefaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adjust default goal data for TownLife goals.  Sets the default GoalData to the current defaults plus additionalDefaultGoalData; any values specified are used for unspecified encounter TownLife goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\townlifegoal.scar] (81) </b></td>
            </tr>
          </table>
        </p><a name="AITownLifeGoal_SetDefaultGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AITownLifeGoal_SetDefaultGoalData( <span class="arg">Table</span> defaultGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default goal data for TownLife goals.  defaultGoalData is cloned; any values specified are used for unspecified encounter TownLife goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\townlifegoal.scar] (102) </b></td>
            </tr>
          </table>
        </p><a name="AITownLifeGoal_SetModifyGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AITownLifeGoal_SetModifyGoalData( <span class="arg">Table</span> modifyGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set modify goal data for TownLife goals.  modifyGoalData is cloned; values specified via keyname_Multiply are used for the numeric keyname encounter TownLife goal value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\townlifegoal.scar] (130) </b></td>
            </tr>
          </table>
        </p><a name="AITownLifeGoal_SetOverrideGoalData"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AITownLifeGoal_SetOverrideGoalData( <span class="arg">Table</span> overrideGoalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set override goal data for TownLife goals.  overrideGoalData is cloned; any values specified are used for encounter TownLife goal values. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\townlifegoal.scar] (116) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">EncounterData</span> data, <span class="arg">Boolean</span> OPT_spawnNow, <span class="arg">Integer</span> OPT_spawnStaggered )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter from encounter data. If spawnNow is true, spawns specified units immediately. </p>
                <p>See: http://relicwiki/display/REL/Ai+Encounters</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (44) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">String</span> name, <span class="arg">SBP/Table</span> encUnits, <span class="arg">Marker/Pos</span> spawnLoc, <span class="arg">EGroupID</span> encTarget, <span class="arg">Marker/Pos</span> OPT_dynamicSpawn, <span class="arg">Integer</span> OPT_encRange, <span class="arg">Integer</span> OPT_encLeash )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter with a generic FormationAttack goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (112) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">String</span> name, <span class="arg">SBP/Table</span> encUnits, <span class="arg">Marker/Pos</span> spawnLoc, <span class="arg">EGroupID</span> encTarget, <span class="arg">Marker/Pos</span> OPT_dynamicSpawn, <span class="arg">Integer</span> OPT_encRange, <span class="arg">Integer</span> OPT_encLeash )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter with a generic FormationAttack goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (133) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">String</span> name, <span class="arg">SBP/Table</span> encUnits, <span class="arg">Marker/Pos</span> spawnLoc, <span class="arg">EGroupID</span> encTarget, <span class="arg">Marker/Pos</span> OPT_dynamicSpawn, <span class="arg">Integer</span> OPT_encRange, <span class="arg">Integer</span> OPT_encLeash )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter with a generic Attack goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (153) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">String</span> name, <span class="arg">SBP/Table</span> encUnits, <span class="arg">Marker/Pos</span> spawnLoc, <span class="arg">EGroupID</span> encTarget, <span class="arg">Marker/Pos</span> OPT_dynamicSpawn, <span class="arg">Integer</span> OPT_encRange, <span class="arg">Integer</span> OPT_encLeash )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter with a generic Defend goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (173) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">String</span> name, <span class="arg">SBP/Table</span> encUnits, <span class="arg">Marker/Pos</span> spawnLoc, <span class="arg">String</span> encPath, <span class="arg">Marker/Pos</span> OPT_dynamicSpawn, <span class="arg">Integer</span> OPT_pathWait, <span class="arg">Integer</span> OPT_pathLoop )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter with a generic Patrol goal. </p>
                <p>pathLoop can be: LOOP_NONE, LOOP_NORMAL, LOOP_TOGGLE_DIRECTION</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (194) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">String</span> name, <span class="arg">SBP/Table</span> encUnits, <span class="arg">Marker/Pos</span> spawnLoc, <span class="arg">EGroupID</span> encTarget, <span class="arg">Marker/Pos</span> OPT_dynamicSpawn, <span class="arg">Integer</span> OPT_moveRange )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter with a generic Move goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (231) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">String</span> name, <span class="arg">SBP/Table</span> encUnits, <span class="arg">Marker/Pos</span> spawnLoc, <span class="arg">EGroupID</span> encTarget, <span class="arg">Marker/Pos</span> OPT_dynamicSpawn, <span class="arg">Integer</span> OPT_moveRange )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter with a generic Ability goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (250) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">String</span> name, <span class="arg">SBP/Table</span> encUnits, <span class="arg">Marker/Pos</span> spawnLoc, <span class="arg">EGroupID</span> encTarget, <span class="arg">Marker/Pos</span> OPT_dynamicSpawn, <span class="arg">Integer</span> OPT_townLifeRange )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter with a generic TownLife goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (271) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">String</span> name, <span class="arg">Marker/Pos</span> spawnLoc, <span class="arg">SBP/Table</span> encUnits, <span class="arg">Marker/Pos</span> OPT_dynamicSpawn )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new basic encounter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (290) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">SGroupID</span> squadgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a new encounter from an SGroup, with default encounter data </p>
                <p>Encounter player is derived from sgroup; all squads in sgroup must be owned by same player.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (311) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">Boolean</span> spawnStaggered )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Spawns the units within an. Does nothing if the encounter has already been spawned. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (402) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">Table</span> unitData, <span class="arg">SPAWN</span> spawnType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds unit(s) to the encounter </p>
                <p>See Encounter.scar for details unitData is a table that can either hold a single unit OR a set of unit tables The format of each individual unit table is the same as regular encounter unit tables spawnType is of type SPAWN.&lt;&gt;</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (607) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">GoalData</span> goalData, <span class="arg">Boolean</span> triggerGoal (dafault:true), <span class="arg">HandleID</span> OPT_previousEncounterID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates encounter goal from goal data; goals determine unit behaviours. </p>
                <p>See: http://relicwiki/display/REL/Ai+Goal</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (734) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Determines whether or not the encounter has an active and valid goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (776) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the current goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (786) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an encounter's onSight/onEngage event and immediately starts its goal. </p>
                <p>Only works if the encounter has both data.goal, and a valid goal trigger</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (821) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Moves back the goal to the original location </p>
                <p>Only works if the goal was previously relocated after being triggered</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (908) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>If encounter has a goal, but no currently running AI Encounter, restarts the goal. </p>
                <p>Returns true if goal was restarted, false otherwise. If we pass a previousEncounterID, it restarts the encounter using that handle id. This is used for save / load</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (960) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">GoalData</span> goalData )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the goal data for the encounter. If encounter has a goal with a running AI Encounter, updates the goal. </p>
                <p>See: http://relicwiki/display/REL/Ai+Goal Use GetGoalData() to get</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (969) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets clone of current goal data.  May be nil. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (981) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the encounter's sgroup. Caution: sgroup may be empty </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (987) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the encounter's nearby allied Egroup. Caution: egroup may be empty. Automatically created whenever the Encounter triggers OnEngage or OnAttacked. To force the EGroup creation call Encounter:UpdateNearbyAllies() </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (993) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Starts encounter running (encounters are enabled by default) if it was disabled previously. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1023) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stops running the encounter and clears the current goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1039) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>After adding units to a pre-existing encounter it is sometimes necessary to reboot it, as it may have disabled itself if all it's units died. This function checks and does that safely. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1055) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all encounter units that belong to the given sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1066) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find and removes a unit from an encounter based on the squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1077) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds an sgroup to an encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1103) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Forces the encounter to spawn its units instantly </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1134) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">Boolean</span> includeUnits )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the encounter's onDeath callback. If includeUnits is set to true, it clears onDeath callbacks for units as well. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1154) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter( <span class="arg">ScarFn</span> func )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a new onDeath callback for the encounter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1167) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the goal's OnSuccess callback. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1243) </b></td>
            </tr>
          </table>
        </p><a name="Encounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Encounter(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the goal's OnFailure callback. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (1253) </b></td>
            </tr>
          </table>
        </p><a name="EventHandler_RelocateGoal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EventHandler_RelocateGoal( <span class="arg">Table</span> data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback helper function for relocate an Encounter goal. Name of parameters: 'encounter'. </p>
                <p>Example usage: Event_*(EventHandler_ResetGoalRelocation, {encounter = &lt;myEncounter&gt;}, ...)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (14) </b></td>
            </tr>
          </table>
        </p><a name="EventHandler_ResetGoalRelocation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EventHandler_ResetGoalRelocation( <span class="arg">Table</span> data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback helper function for relocate  an Encounter goal to the original location. Name of parameters: 'encounter'. </p>
                <p>Example usage: Event_*(EventHandler_ResetGoalRelocation, {encounter = &lt;myEncounter&gt;}, ...)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (21) </b></td>
            </tr>
          </table>
        </p><a name="EventHandler_TriggerEncounterGoal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EventHandler_TriggerEncounterGoal( <span class="arg">Table</span> data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback helper function for triggering an Encounter goal. Name of parameters: 'encounter'. </p>
                <p>Invokes Encounter:TriggerGoal() for data.encounter Example usage: Event_*(EventHandler_TriggerEncounterGoal, {encounter = &lt;myEncounter&gt;}, ...)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\encounter.scar] (7) </b></td>
            </tr>
          </table>
        </p><a name="MergeClone"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MergeClone( <span class="arg">Table</span> defaultTable, <span class="arg">Table</span> overrideTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Merge clones two table (recursively) into a single table combining into a new table allowing for unadulterated use of the data </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\aimanager\goals\basegoal.scar] (345) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Entity"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Entity</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Entity_ActiveCommandIs"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ActiveCommandIs( <span class="arg">EntityID</span> entity, <a href="enum_list.htm#EntityCommandType">EntityCommandType</a> cmdtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the active command is of the type we specified </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (854) </b></td>
            </tr>
          </table>
        </p><a name="Entity_AddAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_AddAbility( <span class="arg">EntityID</span> entity, <span class="arg">ScarAbilityPBG</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Allows the entity to use this ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2095) </b></td>
            </tr>
          </table>
        </p><a name="Entity_AddResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_AddResource( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> type, <span class="arg">Real</span> amount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a specific amount of a certain resource type to an entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2755) </b></td>
            </tr>
          </table>
        </p><a name="Entity_AdjustAbilityCooldown"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_AdjustAbilityCooldown( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> tickAmount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Advance ability cooldown </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2109) </b></td>
            </tr>
          </table>
        </p><a name="Entity_BuildCycleList"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_BuildCycleList(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Builds the cycle list based on current tagged entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (637) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CalculatePassableSpawnPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CalculatePassableSpawnPosition( <span class="arg">EntityID</span> entity, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>pass in a entity and position to resolve the position into a open space position, if the position is not free, position returned will try to be the closest position near the original position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (435) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CanAttackNow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CanAttackNow( <span class="arg">EntityID</span> attacker, <span class="arg">Position</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an entity can attack a target without moving or turning. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2002) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CancelProductionQueueItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CancelProductionQueueItem( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Cancels an item in a production queue.  Index 0 is the currently producing item. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (999) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CanCurrentlyBeDamaged"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CanCurrentlyBeDamaged( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if an entity can currently be damaged. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1252) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CanLoadSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CanLoadSquad( <span class="arg">EntityID</span> entity, <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> assumeEmpty, <span class="arg">Boolean</span> assumeVisible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the entity can load squad or not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1651) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CanSeeEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CanSeeEntity( <span class="arg">EntityID</span> entity, <span class="arg">EntityID</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the distance between a target entity and the source entity is less than it entity's sight distance.  There is no LOS or FOW check. </p>
                <p>Try Player_CanSeeEntity() if you care about LOS or FOW.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1216) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CanSeeSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CanSeeSquad( <span class="arg">EntityID</span> entity, <span class="arg">SquadID</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the distance between a target squad and the source entity is less than it entity's sight distance.  There is no LOS or FOW check. </p>
                <p>Try Player_CanSeeSquad() if you care about LOS or FOW.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1232) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CanTargetEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CanTargetEntity( <span class="arg">Entity&amp;</span> entity, <span class="arg">Entity&amp;</span> target, <span class="arg">Boolean</span> checkFOW )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if an entity can target and attack another entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1246) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ClearPendingDeathFlag"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ClearPendingDeathFlag( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear the pending death flag manually. Should be used when campaign leaders are revived. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (837) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ClearPostureSuggestion"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ClearPostureSuggestion( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears any previous posture suggestions made to an entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2302) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ClearStateModelEnumTableTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ClearStateModelEnumTableTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a TargetHandle value in the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2723) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ClearStateModelTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ClearStateModelTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a TargetHandle value in the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2627) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ClearTagDebug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ClearTagDebug(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the tagged entity used for debugging </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (643) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CompleteUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CompleteUpgrade( <span class="arg">EntityID</span> pEntity, <span class="arg">ScarUpgradePBG</span> upgradePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Instantly adds an upgrade to a given entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1753) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ConvertBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ConvertBlueprint( <span class="arg">Entity&amp;</span> entity, <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts Entity's blueprint to the specified blueprint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3015) </b></td>
            </tr>
          </table>
        </p><a name="Entity_CycleDebug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_CycleDebug(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Cycle through the existing list built for the originally tagged entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (631) </b></td>
            </tr>
          </table>
        </p><a name="Entity_DeSpawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_DeSpawn( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DeSpawn the entity at its current position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (530) </b></td>
            </tr>
          </table>
        </p><a name="Entity_Destroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_Destroy( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove an entity from the world and destroy it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (364) </b></td>
            </tr>
          </table>
        </p><a name="Entity_DisableCancelConstructionCommand"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_DisableCancelConstructionCommand( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> disable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Forces the cancel construction command to be disabled, meaning you can't cancel construction for this </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3140) </b></td>
            </tr>
          </table>
        </p><a name="Entity_DoBurnDamage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_DoBurnDamage( <span class="arg">EntityID</span> entity, <span class="arg">Real</span> val, <span class="arg">Boolean</span> ignoreMaxDamagePerSecond )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adjusts the entity's burn level by val </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2313) </b></td>
            </tr>
          </table>
        </p><a name="Entity_EnableAttention"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_EnableAttention( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> attentive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether an entity pays attention to its surroundings </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2051) </b></td>
            </tr>
          </table>
        </p><a name="Entity_EnableProductionQueue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_EnableProductionQueue( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether an entity can produce anything (including upgrades) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (928) </b></td>
            </tr>
          </table>
        </p><a name="Entity_EnableStrategicPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_EnableStrategicPoint( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether an strategic point is active </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (869) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ExtensionCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ExtensionCount(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns total entity extension count. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2205) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ExtensionEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ExtensionEnabled( <span class="arg">EntityID</span> pEntity, <span class="arg">ComponentDependencyIndex</span> extID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity has the specific extension enabled. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2229) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ExtensionExecuting"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ExtensionExecuting( <span class="arg">EntityID</span> pEntity, <span class="arg">ComponentDependencyIndex</span> extID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the specified extension on the entity will update every frame. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2249) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ExtensionName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ExtensionName( <span class="arg">EntityID</span> pEntity, <span class="arg">ComponentDependencyIndex</span> extID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a string name of the given extension on the entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2213) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ForceConstruct"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ForceConstruct( <span class="arg">EntityID</span> e )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Force constructs this entity but only if its a building </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1271) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ForceSelfConstruct"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ForceSelfConstruct( <span class="arg">EntityID</span> e )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Force a building to self construct if it's a building </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1281) </b></td>
            </tr>
          </table>
        </p><a name="Entity_FromID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_FromID( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get an entity from a mission editor ID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (401) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetActiveCommand"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetActiveCommand( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the active entity command. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (843) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetAttackTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetAttackTarget( <span class="arg">EntityID</span> entity, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the entity target. If found, the target squad is added to the sgroup. Entity targets like buildings are ignored. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1103) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetAttackTargetEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetAttackTargetEntity( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the entity targeted by the given entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1121) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetAttackTargetSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetAttackTargetSquad( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the squad targeted by the given entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1130) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetBlueprint( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the entity's blueprint </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (609) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetBuildingProgress"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetBuildingProgress( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the construction progress (with range [0.0, 1.0] for a given entity.  Returns 0.0 if the entity is not a building. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1259) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetCoverValue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetCoverValue( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get cover safety value from the where the entity is standing. The safety value is number from -.5 to .5. </p>
                <p>Higher value means better cover. If the entity doesn't have cover_ext, value of 0 would be returned</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1693) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetDebugEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetDebugEntity(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the currently tagged debug entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (649) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetFenceEntityCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetFenceEntityCount( <span class="arg">PropertyBagGroup</span> ebp, <span class="arg">Position</span> startPos, <span class="arg">Position</span> endPos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns number of entities that will be placed if this ebp is built in a fence. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2837) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetFilledHoldSquadSlots"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetFilledHoldSquadSlots( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of filled slots for squads in a hold in the HoldExtInfo </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1675) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetHeading"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetHeading( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the heading of the entity.  The heading is currently a lua table with three entries (x, y, z) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (478) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetHealth( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the health of an entity. </p>
                <p>Health will be zero for entities with no health extension.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (740) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetHealthMax"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetHealthMax( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the max health of an entity. </p>
                <p>Max health will be zero for entities with no health extension.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (747) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetHealthPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetHealthPercentage( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the percentage health, taking into account destructible buildings </p>
                <p>Health will be zero for entities with no health extension, health max equals to zero</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (754) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetID( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the entities unique id in the world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (615) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetInvulnerable( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the entity is invulnerable or not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\entity.scar] (101) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetInvulnerableMinCap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetInvulnerableMinCap( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the invulnerable point in terms of percentage </p>
                <p>For units, retrieve the percentage value of hitpoints below which the entity would become invulnerable to both critical hit and damage For buildings, retrieve the percentage value of healthy below which no more panels could be destroyed</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1499) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetLastAttacker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetLastAttacker( <span class="arg">EntityID</span> entity, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the last squad attacker on this entity. If found, the squad is added to the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1145) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetLastAttackers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetLastAttackers( <span class="arg">EntityID</span> entity, <span class="arg">SGroupID</span> group, <span class="arg">Real</span> timeSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the squad attackers on this entity from the last seconds specified. The sgroup is cleared, then any squads found are added to the sgroup. Building attackers are ignored. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1159) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetLastEntityAttackers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetLastEntityAttackers( <span class="arg">EntityID</span> entity, <span class="arg">EGroupID</span> group, <span class="arg">Real</span> timeSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the entity attackers on this entity from the last seconds specified. The sgroup is cleared, then any squads found are added to the sgroup. Building attackers are ignored. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1190) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetMaxCaptureCrewSize"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetMaxCaptureCrewSize( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the maximum capture crew size from a recrewable entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1741) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetMaxHoldSquadSlots"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetMaxHoldSquadSlots( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of specified slots for squads in a hold in the HoldExtInfo </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1664) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetMeleeBlocksPerAttacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetMeleeBlocksPerAttacks( <span class="arg">Entity</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of blocks the entity will perform per number of attacks </p>
                <p>For each numAttacks melee attacks the entity receives, it will block a random numBlocks of them. Block rate is numBlocks / numAttacks</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2896) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetNumInteractors"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetNumInteractors( <span class="arg">EntityID</span> entity, <span class="arg">String</span> interactionType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of entities connected to an entity via the interaction system. </p>
                <p>interactionType should match one of the values defined in the `interaction_type` attribute enum</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1608) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetOffsetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetOffsetPosition( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> offset, <span class="arg">Real</span> distance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a position relative to an entity's current position and orientation. see ScarUtil.scar for explanation of 'offset' parameter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\entity.scar] (138) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetOnFireHealthPercentThreshold"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetOnFireHealthPercentThreshold( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the entity health percentage where it can be set on fire </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2352) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetPlayerOwner"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetPlayerOwner( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the Player owner of the given entity. Entity MUST NOT be owned by the world. </p>
                <p>Use World_OwnsEntity to make sure entity is not owned by the world before calling this function</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (537) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetPosition( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the position of the entity.  The position is currently a lua table with three entries (x, y, z) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (428) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetProductionQueueItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetProductionQueueItem( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the blueprint for a production queue item with index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (938) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetProductionQueueItemType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetProductionQueueItemType( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the production type (PITEM_Upgrade, PITEM_Spawn, PITEM_SquadUpgrade, PITEM_SquadReinforce, PITEM_PlayerUpgrade) for a production queue item with index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (969) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetProductionQueueSize"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetProductionQueueSize( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of items in the entities production queue. </p>
                <p>It is an error to call this function on an entity that does not have a production queue.\n Use Entity_HasProductionQueue to check that the entity has a queue.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (896) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetProjectileBlocksPerAttacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetProjectileBlocksPerAttacks( <span class="arg">Entity</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of blocks the entity will perform per number of attacks </p>
                <p>For each numAttacks projectile attacks the entity receives, it will block a random numBlocks of them. Block rate is numBlocks / numAttacks</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2932) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetRangedBlocksPerAttacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetRangedBlocksPerAttacks( <span class="arg">Entity</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of blocks the entity will perform per number of attacks </p>
                <p>For each numAttacks ranged attacks the entity receives, it will block a random numBlocks of them. Block rate is numBlocks / numAttacks</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2914) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetRemainingResourceDepositAmount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetRemainingResourceDepositAmount( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get remaining resource amount of the given entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2729) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetResource( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> resourceType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the amount of a certain resource that an entity has. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2792) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetSightInnerHeight"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetSightInnerHeight( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the inner sight height for this entity </p>
                <p>Height will be zero for entities without a sight extension</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (712) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetSightInnerRadius"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetSightInnerRadius( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the inner sight radius for this entity </p>
                <p>Radius will be zero for entities without a sight extension</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (684) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetSightOuterHeight"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetSightOuterHeight( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the outer sight height for this entity </p>
                <p>Height will be zero for entities without a sight extension</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (726) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetSightOuterRadius"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetSightOuterRadius( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the outer sight radius for this entity </p>
                <p>Radius will be zero for entities without a sight extension</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (698) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetSquad( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the Squad for the passed Entity. (May be nullptr) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1432) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetSquadsHeld"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetSquadsHeld( <span class="arg">EntityID</span> pEntity, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds squads held by an entity to an SGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1853) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelBool( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a boolean value from the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2446) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelEntityTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Entity value from the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2484) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelEnumTableBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelEnumTableBool( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a boolean value from the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2514) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelEnumTableEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelEnumTableEntityTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Entity value from the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2558) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelEnumTableFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelEnumTableFloat( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a float value from the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2528) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelEnumTableInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelEnumTableInt( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer value from the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2521) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelEnumTablePlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelEnumTablePlayerTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Player value from the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2542) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelEnumTableSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelEnumTableSquadTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Squad value from the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2550) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelEnumTableVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelEnumTableVector3f( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Vector3f value from the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2535) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelFloat( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a float value from the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2458) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelInt( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer value from the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2452) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelPlayerTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Player value from the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2470) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelSquadTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Squad value from the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2477) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateModelVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateModelVector3f( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Vector3f value from the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2464) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateTreeTargeting_EntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateTreeTargeting_EntityTarget( <span class="arg">Entity&amp;</span> entity, <span class="arg">String</span> type, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Entity value from the entity's StateTree EntityTargetingExt with the given type and key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3046) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateTreeTargeting_PlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateTreeTargeting_PlayerTarget( <span class="arg">Entity&amp;</span> entity, <span class="arg">String</span> type, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Player value from the entity's StateTree EntityTargetingExt with the given type and key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3032) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateTreeTargeting_SquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateTreeTargeting_SquadTarget( <span class="arg">Entity&amp;</span> entity, <span class="arg">String</span> type, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Squad value from the entity's StateTree EntityTargetingExt with the given type and key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3039) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStateTreeTargeting_Vector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStateTreeTargeting_Vector3f( <span class="arg">Entity&amp;</span> entity, <span class="arg">String</span> type, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Vector3f value from the entity's StateTree EntityTargetingExt with the given type and key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3025) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetStrategicPointSecureCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetStrategicPointSecureCount( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of entities or squads currently securing this strategic point </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1595) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetTargetingType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetTargetingType( <span class="arg">Entity&amp;</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the entity's targeting type - auto, manual, or none </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2880) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetWeaponBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetWeaponBlueprint( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> hardPointIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a weapon hardpoint  ( 0 indexed ) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2176) </b></td>
            </tr>
          </table>
        </p><a name="Entity_GetWeaponHardpointCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_GetWeaponHardpointCount( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns how many hardpoints an entity has </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2147) </b></td>
            </tr>
          </table>
        </p><a name="Entity_HandleAllAsserts"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_HandleAllAsserts(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Call HandleAssert on an EntityAssertHandler for each entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (385) </b></td>
            </tr>
          </table>
        </p><a name="Entity_HasAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_HasAbility( <span class="arg">EntityID</span> entity, <span class="arg">ScarAbilityPBG</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests to see if an entity has an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2135) </b></td>
            </tr>
          </table>
        </p><a name="Entity_HasBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_HasBlueprint( <span class="arg">EntityID</span> entity, <span class="arg">EBP/EntityType/Table</span> blueprints )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks whether an entity is of any of the Blueprints or EntityTypes specified. </p>
                <p>Blueprint can be a single Blueprint, a single EntityType, or a table of multiple Blueprints or EntityTypes. If you want to see if an entity has ALL of a set of EntityTypes, then wrap them all in a sub-table.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\entity.scar] (14) </b></td>
            </tr>
          </table>
        </p><a name="Entity_HasProductionQueue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_HasProductionQueue( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if an entity has a production queue. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (909) </b></td>
            </tr>
          </table>
        </p><a name="Entity_HasUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_HasUpgrade( <span class="arg">EntityID</span> pEntity, <span class="arg">ScarUpgradePBG</span> upgradePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return true if the entity has purchased the specified upgrade. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1768) </b></td>
            </tr>
          </table>
        </p><a name="Entity_InstantCaptureStrategicPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_InstantCaptureStrategicPoint( <span class="arg">EntityID</span> entity, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Strategic point will be captured instantly by the team of the supplied player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1547) </b></td>
            </tr>
          </table>
        </p><a name="Entity_InstantConvertBuildingToFieldSupport"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_InstantConvertBuildingToFieldSupport( <span class="arg">EntityID</span> building, <span class="arg">PlayerID</span> owner )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>instantly converts a building into a fieldsupport </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1639) </b></td>
            </tr>
          </table>
        </p><a name="Entity_InstantRevertOccupiedBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_InstantRevertOccupiedBuilding( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reverts an occupied building </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1627) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsAbilityActive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsAbilityActive( <span class="arg">EntityID</span> entity, <span class="arg">ScarAbilityPBG</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if the ability is active </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1774) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsActive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsActive( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if entity is alive and spawned </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1449) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsAlive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsAlive( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if entity is still alive </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1443) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsAttacking"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsAttacking( <span class="arg">EntityID</span> entity, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is attacking within the time </p>
                <p>Time is in seconds</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1096) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsBuilding( <span class="arg">EntityID</span> e )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given entity is a building </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1303) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsBurnable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsBurnable( <span class="arg">EntityID</span> e )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity can be set on fire </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1291) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsBurning"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsBurning( <span class="arg">EntityID</span> e )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given entity is burning (buildings on fire or non-buildings with burn_exts) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1297) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsCamouflaged"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsCamouflaged( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the entity is camouflaged. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1990) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsCapturableBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsCapturableBuilding( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is a capturable building </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1541) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsCasualty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsCasualty( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if entity is a casualty else false </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2067) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsCuttable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsCuttable( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether this entity is cuttable </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1933) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsDemolitionReady"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsDemolitionReady( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether this entity's demolition charges are ready to be detonated </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1890) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsDoingAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsDoingAbility( <span class="arg">EntityID</span> entity, <span class="arg">ScarAbilityPBG</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if entity is currently performing the given ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1900) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsEBPBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsEBPBuilding( <span class="arg">ScarEntityPBG</span> ebp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given blueprint is a building </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1309) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsEBPObjCover"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsEBPObjCover( <span class="arg">ScarEntityPBG</span> ebp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given blueprint is objcover </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1315) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsEBPOfType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsEBPOfType( <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given blueprint is of the given type. Types are defined in type_ext/unit_type_list </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1342) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsHardpointActive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsHardpointActive( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> hardPointIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether a hardpoint is active ( 0 indexed ) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2159) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsHoldingAny"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsHoldingAny( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the entity has a hold on anything </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1658) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsInBackground"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsInBackground( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether or not the entity is in the background. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2419) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsInCover"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsInCover( <span class="arg">EntityID</span> entityId )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if entity is in cover. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\entity.scar] (68) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsInfantry"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsInfantry( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an entity is an infantry unit </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1806) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsInHold"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsInHold( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if an entity is in a hold </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1686) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsInvulnerable( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>get if an entity is invulnerable </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1462) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsMoving"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsMoving( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an entity is moving. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1794) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsOfType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsOfType( <span class="arg">EntityID</span> entity, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Determines if this entity is of the given type. Types are defined in type_ext/unit_type_list </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1322) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsOnWalkableWall"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsOnWalkableWall( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns if an Entity is currently on walkable wall. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3066) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsPartOfSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsPartOfSquad( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is part of a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1426) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsPlane"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsPlane( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an entity is a plane (has a flight extension) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1812) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsPlannedStructure"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsPlannedStructure( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an entity is a planned structure. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1818) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsProducingSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsProducingSquad( <span class="arg">EntityID</span> entity, <span class="arg">ScarSquadPBG</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether a particular squad blueprint is being produced by a given entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1824) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsProductionQueueAvailable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsProductionQueueAvailable( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if an entity has a production queue and if the queue is available </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (916) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsResourceGenerator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsResourceGenerator( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is a resource generator and has resources remaining </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2384) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsSlotItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsSlotItem( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return true if the entity is a slot item </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1714) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsSpawned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsSpawned( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>if entity is spawned return true </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1455) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsStartingPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsStartingPosition( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is a starting position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1535) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsStrategicPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsStrategicPoint( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is a strategic point. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1523) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsStrategicPointCapturedBy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsStrategicPointCapturedBy( <span class="arg">EntityID</span> entity, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if strategic point is captured by the team of the player provided. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1582) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsSyncWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsSyncWeapon( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return true if the entity is a team weapon </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1707) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsUnderAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsUnderAttack( <span class="arg">EntityID</span> entity, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is under attack. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1053) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsUnderAttackByPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsUnderAttackByPlayer( <span class="arg">EntityID</span> entity, <span class="arg">PlayerID</span> pAttackerOwner, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is under attack by a certain player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1139) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsUnderAttackFromDirection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsUnderAttackFromDirection( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> offset, <span class="arg">Real</span> timeSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity was under attack from a certain direction (8 offset types, see ScarUtil.scar) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1059) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsUnderConstruction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsUnderConstruction( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is under construction. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2278) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsUnderRepair"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsUnderRepair( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the entity is being repaired. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2266) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsValid( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if an entity with the given ID can be found in the world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (416) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsVaultable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsVaultable( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an entity can be vaulted </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1847) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsVehicle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsVehicle( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an entity is a vehicle </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1800) </b></td>
            </tr>
          </table>
        </p><a name="Entity_IsVictoryPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_IsVictoryPoint( <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if entityID is a victory point </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1511) </b></td>
            </tr>
          </table>
        </p><a name="Entity_Kill"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_Kill( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kill the entity.  Sets health to 0, and triggers death effects. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (807) </b></td>
            </tr>
          </table>
        </p><a name="Entity_NotifyOnPlayerDemolition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_NotifyOnPlayerDemolition( <span class="arg">Entity</span> entity, <span class="arg">LuaFunction</span> function )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calls a function when an entity gets destroyed by the player clicking the "Detonate me" button next to an entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\entity.scar] (126) </b></td>
            </tr>
          </table>
        </p><a name="Entity_Population"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_Population( <span class="arg">EntityID</span> entity, <a href="enum_list.htm#CapType">CapType</a> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>get entity pop cost, use CT_Personnel, CT_Vehicle, CT_Medic for captype </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2374) </b></td>
            </tr>
          </table>
        </p><a name="Entity_RagDoll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_RagDoll( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>trigger the RagDoll skeleton driving. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3081) </b></td>
            </tr>
          </table>
        </p><a name="Entity_RemoveAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_RemoveAbility( <span class="arg">EntityID</span> entity, <span class="arg">ScarAbilityPBG</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an ability that was previously added by Entity_AddAbility. You cannot remove static abilities (from AE: ability_ext) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2121) </b></td>
            </tr>
          </table>
        </p><a name="Entity_RemoveBoobyTraps"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_RemoveBoobyTraps( <span class="arg">EntityID</span> pEntityTarget )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all booby-traps on this entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1945) </b></td>
            </tr>
          </table>
        </p><a name="Entity_RemoveDemolitions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_RemoveDemolitions( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all demolition charges on an entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1980) </b></td>
            </tr>
          </table>
        </p><a name="Entity_RemoveUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_RemoveUpgrade( <span class="arg">EntityID</span> entity, <span class="arg">ScarUpgradePBG</span> upgrade )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an upgrade from an entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1785) </b></td>
            </tr>
          </table>
        </p><a name="Entity_RequiresSlottedSplineUpdateAfterBlueprintConversion"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_RequiresSlottedSplineUpdateAfterBlueprintConversion( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if you should call Misc_UpdateSlottedSplinesContainingEGroupAfterBlueprintConversion with an egroup containing this entity after blueprint converting it. Make sure to batch together all your entities when using that function to reduce duplicated work. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3074) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ResetMeleeBlocksPerAttacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ResetMeleeBlocksPerAttacks( <span class="arg">Entity&amp;</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset melee block rate to AE tuned values </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2985) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ResetProjectileBlocksPerAttacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ResetProjectileBlocksPerAttacks( <span class="arg">Entity&amp;</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset Projectile block rate to AE tuned values </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3005) </b></td>
            </tr>
          </table>
        </p><a name="Entity_ResetRangedBlocksPerAttacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_ResetRangedBlocksPerAttacks( <span class="arg">Entity&amp;</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset ranged block rate to AE tuned values </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2995) </b></td>
            </tr>
          </table>
        </p><a name="Entity_RestoreTargetingType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_RestoreTargetingType( <span class="arg">Entity&amp;</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restore the targeting type to the default found in the ebp </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2869) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetAnimatorAction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetAnimatorAction( <span class="arg">EntityID</span> pEntity, <span class="arg">String</span> actionName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Trigger animation action for an entity. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1395) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetAnimatorActionParameter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetAnimatorActionParameter( <span class="arg">EntityID</span> pEntity, <span class="arg">String</span> actionParameterName, <span class="arg">String</span> actionParameterValue )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set animation action parameter for an entity. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1385) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetAnimatorEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetAnimatorEvent( <span class="arg">EntityID</span> pEntity, <span class="arg">String</span> eventName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set animation event for an entity. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1372) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetAnimatorState"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetAnimatorState( <span class="arg">EntityID</span> pEntity, <span class="arg">String</span> stateMachineName, <span class="arg">String</span> stateName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set animation state of a state machine for an entity. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1405) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetAnimatorVariable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetAnimatorVariable( <span class="arg">EntityID</span> pEntity, <span class="arg">String</span> variableName, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set animation variable value for an entity. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1416) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetBackground"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetBackground( <span class="arg">EntityID</span> pEntity, <span class="arg">Boolean</span> isInBackground )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the entity to be in the background or foreground. By default, all entities are in the foreground </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2413) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetBurnExtEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetBurnExtEnabled( <span class="arg">EGroupID</span> unit, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables the BurnExt extensions for squads / entities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\entity.scar] (145) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetCrushable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetCrushable( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> crushable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Overrides crushable behavior for an entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2026) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetCrushMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetCrushMode( <span class="arg">EntityID</span> entity, <a href="enum_list.htm#CrushMode">CrushMode</a> mode )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Changes the crush mode of a given entity.  Entity must have a crush extension. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2032) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetDemolitions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetDemolitions( <span class="arg">PlayerID</span> player, <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> numcharges )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fully wires this entity for demolitions, if it's set up to be demolishable. 'player' is the one that owns the demolitions and can detonate them. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1907) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetEnableCasualty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetEnableCasualty( <span class="arg">Boolean</span> enable, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>enable or disable the casualtext </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2073) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetExtEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetExtEnabled( <span class="arg">EntityID</span> entity, <span class="arg">String</span> extID, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables an extension on the entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2199) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetHeading"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetHeading( <span class="arg">EntityID</span> entity, <span class="arg">Position</span> pos, <span class="arg">Boolean</span> bInterpolate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the heading of the entity.  The position is currently a lua table with three entries (x, y, z) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (494) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetHeadingGroundSnapOptional"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetHeadingGroundSnapOptional( <span class="arg">EntityID</span> entity, <span class="arg">Position</span> pos, <span class="arg">Boolean</span> bSnapToGround, <span class="arg">Boolean</span> bInterpolate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the heading of the entity.  The position is currently a lua table with three entries (x, y, z) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (484) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetHealth( <span class="arg">EntityID</span> entity, <span class="arg">Real</span> healthPercent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the health of an entity.  healthPercent must be in the range [0.0, 1.0]. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (765) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetInvulnerable( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> enable, <span class="arg">Real</span> reset_time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set invulnerability on the entity. Reset time is in seconds. If it it set, the invulnerability will expire after this time. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\entity.scar] (84) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetInvulnerableMinCap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetInvulnerableMinCap( <span class="arg">EntityID</span> entity, <span class="arg">Real</span> minHealthPercentage, <span class="arg">Real</span> resetTime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Make an entity invulnerable to physical damage when health is below the minimum health percentage </p>
                <p>percentage of 0.0 means entity is vulnerable; percentage of 1.0 sets the entity in god mode resetTime is the time in seconds that vulnerability will be restored.; zero time for reset time means the buff will last forever</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1476) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetLockCurrentTierVisuals"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetLockCurrentTierVisuals( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> lockVisuals )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the lockCurrentTierVisuals flag in the TierExt so when an entity gets BP converted it doesn't update the visual assets. Must be called before BP conversion </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (3151) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetMeleeBlocksPerAttacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetMeleeBlocksPerAttacks( <span class="arg">Entity</span> entity, <span class="arg">Integer</span> blocks, <span class="arg">Integer</span> attacks )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the number of blocks the entity will perform per number of attacks </p>
                <p>For each numAttacks melee attacks the entity receives, it will block a random numBlocks of them. Block rate is numBlocks / numAttacks</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2949) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetOnFire"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetOnFire( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an object on fire (also works on buildings) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2330) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetPlayerOwner"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetPlayerOwner( <span class="arg">EntityID</span> entity, <span class="arg">PlayerID</span> owner )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Changes the owner of the given squad. </p>
                <p>This function doesn't work with strategic/capturable point</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (554) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetPosition( <span class="arg">EntityID</span> entity, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the position of the entity.  The position is currently a lua table with three entries (x, y, z) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (443) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetPositionWithinCell"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetPositionWithinCell( <span class="arg">EntityID</span> entity, <span class="arg">Position</span> desiredPosition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>If the entity is at the same cell as desiredPosition, try to set the entity position to it. If the cell is next to impass, set it to the center of the cell. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (454) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetProjectileBlocksPerAttacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetProjectileBlocksPerAttacks( <span class="arg">Entity</span> entity, <span class="arg">Integer</span> blocks, <span class="arg">Integer</span> attacks )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the number of blocks the entity will perform per number of attacks </p>
                <p>For each numAttacks projectile attacks the entity receives, it will block a random numBlocks of them. Block rate is numBlocks / numAttacks</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2975) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetProjectileCanExplode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetProjectileCanExplode( <span class="arg">EntityID</span> projectile, <span class="arg">Boolean</span> canExplode )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether or not a projectile can explode. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1872) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetRangedBlocksPerAttacks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetRangedBlocksPerAttacks( <span class="arg">Entity</span> entity, <span class="arg">Integer</span> blocks, <span class="arg">Integer</span> attacks )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the number of blocks the entity will perform per number of attacks </p>
                <p>For each numAttacks ranged attacks the entity receives, it will block a random numBlocks of them. Block rate is numBlocks / numAttacks</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2962) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetRecrewable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetRecrewable( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> capturable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an entity to be recrewable or not when it becomes abandoned </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1721) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetRemainingResourceDepositAmount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetRemainingResourceDepositAmount( <span class="arg">EntityID</span> entity, <span class="arg">Real</span> amount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set remaining resource amount of the given entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2742) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetResource( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> type, <span class="arg">Real</span> amount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a specific amount of a certain resource type for an entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2772) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetSharedProductionQueue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetSharedProductionQueue( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> shared )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables shared team production on a building (teammates can build using THEIR resources) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1029) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetShowSilhouette"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetShowSilhouette( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> show )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Show or hide the entity's silhouette when behind other objects </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1042) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelBool( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a boolean value in the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2585) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelEntityTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">EntityID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an Entity TargetHandle value in the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2621) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelEnumTableBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelEnumTableBool( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a boolean value in the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2658) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelEnumTableEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelEnumTableEntityTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">EntityID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an Entity TargetHandle value in the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2716) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelEnumTableFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelEnumTableFloat( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a float value in the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2672) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelEnumTableInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelEnumTableInt( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Integer</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an integer value in the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2665) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelEnumTablePlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelEnumTablePlayerTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">PlayerID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Player TargetHandle value in the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2694) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelEnumTableSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelEnumTableSquadTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">SquadID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Squad TargetHandle value in the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2705) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelEnumTableVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelEnumTableVector3f( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Position</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Vector3f value in the entity's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2683) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelFloat( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a float value in the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2597) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelInt( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Integer</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an integer value in the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2591) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelPlayerTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">PlayerID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Player TargetHandle value in the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2609) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelSquadTarget( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">SquadID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Squad TargetHandle value in the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2615) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStateModelVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStateModelVector3f( <span class="arg">EntityID</span> entity, <span class="arg">String</span> key, <span class="arg">Position</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Vector3f value in the entity's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2603) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStayBurningWhileInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStayBurningWhileInvulnerable( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> shouldStayBurning )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a flag that tells a building to keep burning while invulnerable (for atmosphere). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2364) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStrategicPointNeutral"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStrategicPointNeutral( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a strategic point to neutral (not owned by any team) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1565) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetStrategicPointReticuleVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetStrategicPointReticuleVisible( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether a strategic point's reticule is visible </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (884) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetTargetingType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetTargetingType( <span class="arg">Entity&amp;</span> entity, <span class="arg">TargetingType</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the allowable methods of targeting this entity </p>
                <p>Targeting_Automatic: allow auto and manual targeting Targeting_Manual: only allow manual targeting Targeting_None: do not allow targeting</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2856) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SetWorldOwned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SetWorldOwned( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes an entity neutral </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (585) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SimHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SimHide( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> hide )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Shows/hides the entity in the simulation </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2061) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SnapToGridAndGround"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SnapToGridAndGround( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> interpolate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Snaps the entity to the grid and ground. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (465) </b></td>
            </tr>
          </table>
        </p><a name="Entity_Spawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_Spawn( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Spawn the entity at its current position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (500) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SpawnDoNotAddPathfindingAndCollision"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SpawnDoNotAddPathfindingAndCollision( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Spawn the entity at its current position without pathfinding and collision </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (524) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SpawnToward"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SpawnToward( <span class="arg">EntityID</span> entity, <span class="arg">Position</span> pos, <span class="arg">Position</span> toward, <span class="arg">String</span> spawnType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Spawn the entity at a given position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (506) </b></td>
            </tr>
          </table>
        </p><a name="Entity_StopAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_StopAbility( <span class="arg">EntityID</span> entity, <span class="arg">ScarAbilityPBG</span> ability, <span class="arg">Boolean</span> bIsEarlyExit )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Abruptly stops an active ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2086) </b></td>
            </tr>
          </table>
        </p><a name="Entity_StopFire"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_StopFire( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Puts out the fire on an object (also works on buildings) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2342) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SuggestPosture"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SuggestPosture( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> posture, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Suggests a posture to an entity, lasting the passed duration </p>
                <p>Posture of 0 is prone, 1 is kneel/crouch, and 2 is standing.  Duration is in seconds, negative means indefinite.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (2291) </b></td>
            </tr>
          </table>
        </p><a name="Entity_SupportsDemolition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_SupportsDemolition( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether this entity is set up to have demolitions placed on it </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (1884) </b></td>
            </tr>
          </table>
        </p><a name="Entity_TagDebug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_TagDebug( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tags the entity to be used for debugging </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (625) </b></td>
            </tr>
          </table>
        </p><a name="Entity_VisHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_VisHide( <span class="arg">EntityID</span> pEntity, <span class="arg">Boolean</span> bHide )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hides or shows an entity visually. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaentity.cpp] (655) </b></td>
            </tr>
          </table>
        </p><a name="Entity_WarpToPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_WarpToPos( <span class="arg">EntityID</span> entity, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Warps an entity immediately to a new position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\entity.scar] (75) </b></td>
            </tr>
          </table>
        </p><a name="Misc_DoesPositionHaveAssociatedDistrict"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_DoesPositionHaveAssociatedDistrict( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if the given position has an associated district. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMisc.cpp] (130) </b></td>
            </tr>
          </table>
        </p><a name="Misc_DoWeaponHitEffectOnPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_DoWeaponHitEffectOnPosition( <span class="arg">Position</span> pos, <span class="arg">ScarWeaponPBG</span> weaponPBG, <span class="arg">Boolean</span> penetrated )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Do weapon hit effect on the ground </p>
                <p>WeaponID is the property bag group id; if penetrated is set to false, deflection effect would be played instead</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMisc.cpp] (44) </b></td>
            </tr>
          </table>
        </p><a name="Misc_FindDepositsCloseToSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_FindDepositsCloseToSquad( <span class="arg">EGroupID</span> group, <span class="arg">SquadID</span> squad, <span class="arg">Real</span> searchRange )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find deposits within the specified range of a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMisc.cpp] (67) </b></td>
            </tr>
          </table>
        </p><a name="Misc_FindDepositsOfTypeCloseToPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_FindDepositsOfTypeCloseToPosition( <span class="arg">ResourceType</span> resourceType, <span class="arg">EBP</span> gathererEBP, <span class="arg">Position</span> position, <span class="arg">Number</span> searchRange )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds resource deposits of given type within the specified range of a position, that can be collected by the provided gathererEBP </p>
                <p>Returns an egroup of resource deposits named "eg_Misc_FindNearbyDepositOfType_result", sorted by proximity to the position</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMisc.cpp] (97) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetDistrictGeneratorFromPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetDistrictGeneratorFromPosition( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the entity generating the district containing the given position. Use with Misc_DoesPositionHaveAssociatedDistrict </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMisc.cpp] (170) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetDistrictValueFromPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetDistrictValueFromPosition( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the district value of the district containing the given position. Use with Misc_DoesPositionHaveAssociatedDistrict </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMisc.cpp] (149) </b></td>
            </tr>
          </table>
        </p><a name="Misc_UpdateSlottedSplinesContainingEGroupAfterBlueprintConversion"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_UpdateSlottedSplinesContainingEGroupAfterBlueprintConversion( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Updates the slotted spline system to handle the fact that the entities in the given EGroup have done a blueprint conversion. This must be called after converting slotted spline entities from script. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaMisc.cpp] (195) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Event System"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Event System</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Event_CreateAND"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_CreateAND( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">Table</span> events, <span class="arg">Real</span> delay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a Callback Event that triggers when ALL of the specified events are triggered. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (2556) </b></td>
            </tr>
          </table>
        </p><a name="Event_Death"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_Death( <span class="arg">Function</span> callback, <span class="arg">EGroupID</span> group, <span class="arg">ALL_UNITS/ANY_MEMBER/ANY_SQUAD</span> selection, <span class="arg">Boolean</span> repeat, <span class="arg">Boolean</span> requireAllEntitiesDead, <span class="arg">Table</span> data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when the certain objects die. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (2348) </b></td>
            </tr>
          </table>
        </p><a name="Event_EncounterCanSeePlayerSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_EncounterCanSeePlayerSquads( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">SGroupID</span> encounter, <span class="arg">PlayerID</span> player, <span class="arg">Real</span> delay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when any squad in the encounter can see any squad owned by the player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (839) </b></td>
            </tr>
          </table>
        </p><a name="Event_EnterProximity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_EnterProximity( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">ConstTargetHandle</span> target, <span class="arg">Boolean</span> arequireAll, <span class="arg">Marker</span> location, <span class="arg">REAL</span> range, <span class="arg">Boolean</span> repeat, <span class="arg">Boolean</span> triggerOnEnter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data when target enters range </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (1517) </b></td>
            </tr>
          </table>
        </p><a name="Event_ExitProximity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_ExitProximity( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">ConstTargetHandle</span> target, <span class="arg">Boolean</span> arequireAll, <span class="arg">Marker</span> location, <span class="arg">REAL</span> range, <span class="arg">Boolean</span> repeat, <span class="arg">Boolean</span> triggerOnEnter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data when target exits range </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (1535) </b></td>
            </tr>
          </table>
        </p><a name="Event_GroupCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_GroupCount( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">EGroupID</span> / SGroup group, <span class="arg">Integer</span> amount (value to be compared against), <span class="arg">Boolean</span> repeat )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when the amount of objects matches the requested conditions - Note: Does not count team weapons </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (1876) </b></td>
            </tr>
          </table>
        </p><a name="Event_GroupIsDeadOrRetreating"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_GroupIsDeadOrRetreating( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">EGroupID</span> / SGroup group, <span class="arg">Real</span> delay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when group is dead(empty). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (2472) </b></td>
            </tr>
          </table>
        </p><a name="Event_GroupLeftAlive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_GroupLeftAlive( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">EGroupID</span> / SGroup group, <span class="arg">Integer</span> amount, <span class="arg">Real</span> delay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when the amount of entities left in a group drops below amount. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (1039) </b></td>
            </tr>
          </table>
        </p><a name="Event_IsEngaged"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_IsEngaged( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">Real</span> attackTime, <span class="arg">Real</span> delay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when group is doing an attack or is under attack in the last attackTime seconds. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (713) </b></td>
            </tr>
          </table>
        </p><a name="Event_IsOutOfCombat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_IsOutOfCombat( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">EGroupID</span> / SGroup group, <span class="arg">Real</span> attackTime, <span class="arg">Real</span> delay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when group is out of combat  in the last attackTime seconds. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (926) </b></td>
            </tr>
          </table>
        </p><a name="Event_IsSelected"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_IsSelected( <span class="arg">Function</span> callback, <span class="arg">Table</span> data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback when a target element is selected. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (118) </b></td>
            </tr>
          </table>
        </p><a name="Event_IsUnderAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_IsUnderAttack( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">SGroupID</span> = SGroup, <span class="arg">EGroupID</span> = EGroup, <span class="arg">Real</span> attackTime, <span class="arg">PlayerID</span> player, <span class="arg">Real</span> delay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when sgroup or egroup are under attack in the last attackTime seconds. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (484) </b></td>
            </tr>
          </table>
        </p><a name="Event_PlayerCanSeeElement"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_PlayerCanSeeElement( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">PlayerID</span> team, <span class="arg">SGroupID</span> element )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when the given player can see the element. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (304) </b></td>
            </tr>
          </table>
        </p><a name="Event_Proximity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_Proximity( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">ConstTargetHandle</span> target, <span class="arg">Marker</span> location, <span class="arg">REAL</span> range, <span class="arg">Real</span> delay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data when target enters location. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (215) </b></td>
            </tr>
          </table>
        </p><a name="Event_SGroupCountMember"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_SGroupCountMember( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> amount (value to be compared against), <span class="arg">Boolean</span> repeat )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data, when the amount of members left in a squad matches the requested conditions </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (1702) </b></td>
            </tr>
          </table>
        </p><a name="Event_WhileInProximity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_WhileInProximity( <span class="arg">Function</span> callback, <span class="arg">Table</span> data, <span class="arg">ConstTargetHandle</span> target, <span class="arg">Boolean</span> arequireAll, <span class="arg">Marker</span> location, <span class="arg">REAL</span> range, <span class="arg">Boolean</span> repeat, <span class="arg">Boolean</span> triggerOnEnter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Callback given callback function with data when target remains in range (called every interval seconds) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameConditionalRules.cpp] (1553) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;FOW"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;FOW</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="FOW_ExploreAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_ExploreAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Explores entire map for all players. (Careful where this is used. For example, if used before the first tick, a statetree may change an entity's visual on the first tick, so the ghost's visual will not reflect the entity's.) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (419) </b></td>
            </tr>
          </table>
        </p><a name="FOW_ForceRevealAllUnblockedAreas"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_ForceRevealAllUnblockedAreas(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveal FOW except blockers for all players. Does not create ghosts and ghosts will not be present if undone. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (370) </b></td>
            </tr>
          </table>
        </p><a name="FOW_PlayerExploreAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_PlayerExploreAll( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Explores entire map for one player. (Careful where this is used. For example, if used before the first tick, a statetree may change an entity's visual on the first tick, so the ghost's visual will not reflect the entity's.) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (459) </b></td>
            </tr>
          </table>
        </p><a name="FOW_PlayerRevealAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_PlayerRevealAll( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveal FOW for specified player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (307) </b></td>
            </tr>
          </table>
        </p><a name="FOW_PlayerRevealArea"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_PlayerRevealArea( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> pos, <span class="arg">Real</span> radius, <span class="arg">Real</span> durationSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals a circular area for the given player over a given duration. </p>
                <p>Pass in a duration of -1 for indefinite duration ( or until unreveal is called on the same position )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (119) </b></td>
            </tr>
          </table>
        </p><a name="FOW_PlayerRevealSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_PlayerRevealSGroup( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> group, <span class="arg">Real</span> radius, <span class="arg">Real</span> durationSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals a SGroup in the Fog of War for a player over a given duration. </p>
                <p>Pass in a duration of -1 for indefinite duration ( until the squads are dead or UnReveal is called )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (268) </b></td>
            </tr>
          </table>
        </p><a name="FOW_PlayerUnExploreAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_PlayerUnExploreAll( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unexplores entire map for one player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (471) </b></td>
            </tr>
          </table>
        </p><a name="FOW_PlayerUnRevealAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_PlayerUnRevealAll( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use to undo a FOW_RevealAll for specified player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (319) </b></td>
            </tr>
          </table>
        </p><a name="FOW_PlayerUnRevealArea"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_PlayerUnRevealArea( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>UnReveals a circular area that was previously revealed for a given player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (135) </b></td>
            </tr>
          </table>
        </p><a name="FOW_PlayerUnRevealSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_PlayerUnRevealSGroup( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> group )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>UnReveal a SGroup previously revealed to a Player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (290) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveal FOW for all players </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (331) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealArea"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealArea( <span class="arg">Position</span> pos, <span class="arg">Real</span> radius, <span class="arg">Real</span> durationSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals a circular area for all alive players over a given duration. </p>
                <p>Pass in a duration of -1 for indefinite duration ( or until unreveal is called at the same position )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (72) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealEGroup( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> radius, <span class="arg">Real</span> durationSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals an EGroup in the Fog of War for all alive players over a given duration. </p>
                <p>Pass in a duration of -1 for indefinite duration ( until the entities are dead or UnReveal is called )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (204) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealEGroupOnly"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealEGroupOnly( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> durationSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals an entity group in the FOW for alive players for a duration. </p>
                <p>Pass in a duration of -1 for an indefinite duration.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1099) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealEntity( <span class="arg">EntityID</span> entity, <span class="arg">Real</span> radius, <span class="arg">Real</span> durationSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals an entity in the Fog of War for all alive players over a given duration. </p>
                <p>Pass in a duration of -1 for indefinite duration ( until the entity is dead or UnReveal is called with the same entity )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (149) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealMarker( <span class="arg">MarkerID</span> marker, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals an area the size of a given markers proximity at that markers position for a given amount of time. Pass in a duration of -1 for indefinite duration. YOU SHOULD ONLY CALL THIS ONCE FOR EACH AREA. </p>
                <p>This function will reveal the FOW for ALL alive players. This does not work with markers with rectangular proximity type</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1060) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealSGroup( <span class="arg">SGroupID</span> group, <span class="arg">Real</span> radius, <span class="arg">Real</span> durationSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals a SGroup in the Fog of War for all alive players over a given duration. </p>
                <p>Pass in a duration of -1 for indefinite duration ( until the squads are dead or UnReveal is called )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (236) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealSGroupOnly"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealSGroupOnly( <span class="arg">SGroupID</span> group, <span class="arg">Real</span> durationSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals a squad group in the FOW for alive players for a duration. </p>
                <p>Pass in a duration of -1 for an indefinite duration.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1107) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealSquad( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> radius, <span class="arg">Real</span> durationSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals a squad in the Fog of War for all alive players over a given duration. </p>
                <p>Pass in a duration of -1 for indefinite duration ( until the squad is dead or UnReveal is called with the same squad )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (177) </b></td>
            </tr>
          </table>
        </p><a name="FOW_RevealTerritory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_RevealTerritory( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> sectorID, <span class="arg">Real</span> durationSecs, <span class="arg">Boolean</span> mustOwn )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveals a territory to a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (390) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UIRevealAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UIRevealAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reveal FOW for all players by disabling rendering of FOW without triggering a FOW in the game simulation </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (514) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UIRevealAll_Transition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UIRevealAll_Transition( <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use to transition from game to RevealAll </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (542) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UIRevealAllEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UIRevealAllEntities(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use to reveal all Entities in FoW </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (530) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UIUnRevealAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UIUnRevealAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use to undo a FOW_UIRevealAll </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (524) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UIUnRevealAll_Transition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UIUnRevealAll_Transition( <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use to transition into game </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (550) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UIUnRevealAllEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UIUnRevealAllEntities(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use to unreveal all Entities in FoW </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (536) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UndoForceRevealAllUnblockedAreas"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UndoForceRevealAllUnblockedAreas(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use to undo a FOW_ForceRevealAllUnblockedAreas. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (380) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UnExploreAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UnExploreAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unexplores entire map for all players </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (439) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UnRevealAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UnRevealAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use to undo a FOW_RevealAll </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (349) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UnRevealArea"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UnRevealArea( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>UnReveals a circular area that was previously revealed for all alive players. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (97) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UnRevealMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UnRevealMarker( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unreveals an area the size of a given markers proximity at that markers position. YOU SHOULD ONLY CALL THIS ONCE FOR EACH AREA. </p>
                <p>This does not work with markers with rectangular proximity type</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1082) </b></td>
            </tr>
          </table>
        </p><a name="FOW_UnRevealTerritory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_UnRevealTerritory( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> sectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unreveals a territory sector </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaFOW.cpp] (405) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;ID"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;ID</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="EGroup_CreateTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CreateTable( <span class="arg">String</span> format, <span class="arg">Integer</span> size )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of egroups NOT in the world builder </p>
                <p>See Marker_GetTable for more info on format parameter</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\uid.scar] (107) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_GetWBTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_GetWBTable( <span class="arg">String</span> format )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of egroups from the world builder </p>
                <p>See Marker_GetTable for more info on format parameter</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\uid.scar] (87) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetNonSequentialTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetNonSequentialTable( <span class="arg">String</span> format, <span class="arg">Integer</span> size )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a fixed size table of markers from the world builder.  Markers that do not exist in the WB, will be nil in the table.  This is why we call it 'non-sequential' </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\uid.scar] (69) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetTable( <span class="arg">String</span> format )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of markers from the world builder. Creates as many as it finds </p>
                <p>mkr_table = Marker_GetTable( 'mkr_%d' ) -- creates a table with 3 markers named 'mkr_1', 'mkr_2', and 'mkr_3' (and so on) from the WB\n\n mkr_table2 = Marker_GetTable( 'mkr_%02d' )  -- creates a table with 3 markers named 'mkr_01', 'mkr_02', 'mkr_03' (and so on) from the WB\n\n mkr_table3 = Marker_GetTable( 'mkr_%03d_patrol' )  -- creates a table with 3 markers named 'mkr_001_patrol', 'mkr_002_patrol' (and so on) from the WB\n\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\uid.scar] (57) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CreateTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CreateTable( <span class="arg">String</span> format, <span class="arg">Integer</span> size )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of sgroups NOT in the world builder </p>
                <p>See Marker_GetTable for more info on format parameter</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\uid.scar] (117) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetWBTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetWBTable( <span class="arg">String</span> format )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of sgroups from the world builder </p>
                <p>See Marker_GetTable for more info on format parameter</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\uid.scar] (97) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Marker"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Marker</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="AllMarkersFromName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 AllMarkersFromName( <span class="arg">String</span> name, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns all ScarMarkers from the Mission Editor with the given name. If you don't care about the type, pass in an empty string ( "" ) </p>
                <p>The type is defined in the markers list of the mission editor when placing markers.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\markers\MarkerManager.cpp] (67) </b></td>
            </tr>
          </table>
        </p><a name="Marker_GetSequence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_GetSequence( <span class="arg">String</span> name, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Builds a table of MarkerIDs that are named in a sequence. i.e. a name of "spot" will find markers "spot1", "spot2" and so on, up until it looks for a marker that isn't there. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3259) </b></td>
            </tr>
          </table>
        </p><a name="MarkerCountFromName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MarkerCountFromName( <span class="arg">String</span> name, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of ScarMarkers with the given name If you don't care about the type, pass in an empty string ( "" ) </p>
                <p>The type is defined in the markers list of the mission editor when placing markers.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\markers\MarkerManager.cpp] (32) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Modifiers"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Modifiers</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Modifier_IsEnabledOnEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_IsEnabledOnEGroup( <span class="arg">EGroupID</span> egroup, <span class="arg">String</span> modifier, <span class="arg">String</span> modtype, <span class="arg">Boolean</span> all, <span class="arg">Boolean</span> bEnabledByDefault )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if a modifier is enabled on all or any entities in an egroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (216) </b></td>
            </tr>
          </table>
        </p><a name="Modifier_Remove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_Remove( <span class="arg">modids</span> modifier )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove an applied modifier. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (108) </b></td>
            </tr>
          </table>
        </p><a name="Modifier_RemoveAllFromEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_RemoveAllFromEGroup( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all SCAR-applied modifiers for a specific EGroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (199) </b></td>
            </tr>
          </table>
        </p><a name="Modifier_RemoveAllFromSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modifier_RemoveAllFromSGroup( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all SCAR-applied modifiers for a specific SGroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (179) </b></td>
            </tr>
          </table>
        </p><a name="Modify_AbilityCastTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_AbilityCastTime( <span class="arg">PlayerID</span> player, <span class="arg">AbilityID</span> ability, <span class="arg">Real</span> scalefactor, <span class="arg">Integer</span> OPT_mathtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the cast time of an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1613) </b></td>
            </tr>
          </table>
        </p><a name="Modify_AbilityChannelingTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_AbilityChannelingTime( <span class="arg">PlayerID</span> player, <span class="arg">AbilityID</span> ability, <span class="arg">Real</span> scalefactor, <span class="arg">Integer</span> OPT_mathtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the channeling time of an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1627) </b></td>
            </tr>
          </table>
        </p><a name="Modify_AbilityDelayTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_AbilityDelayTime( <span class="arg">PlayerID</span> player, <span class="arg">AbilityID</span> ability, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the initial delay time of an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1680) </b></td>
            </tr>
          </table>
        </p><a name="Modify_AbilityDurationTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_AbilityDurationTime( <span class="arg">PlayerID</span> player, <span class="arg">AbilityID</span> ability, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the duration of an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1715) </b></td>
            </tr>
          </table>
        </p><a name="Modify_AbilityManpowerCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_AbilityManpowerCost( <span class="arg">PlayerID</span> player, <span class="arg">AbilityID</span> ability, <span class="arg">Real</span> scalefactor, <span class="arg">Integer</span> OPT_mathtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the manpower cost of an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1665) </b></td>
            </tr>
          </table>
        </p><a name="Modify_AbilityMaxCastRange"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_AbilityMaxCastRange( <span class="arg">PlayerID</span> player, <span class="arg">AbilityID</span> ability, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the maximum casting range of an ability. NOTE: it assumes that the actions that the ability executes can also handle the modified range </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1704) </b></td>
            </tr>
          </table>
        </p><a name="Modify_AbilityMinCastRange"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_AbilityMinCastRange( <span class="arg">PlayerID</span> player, <span class="arg">AbilityID</span> ability, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the minimum casting range of an ability. NOTE: it assumes that the actions that the ability executes can also handle the modified range </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1692) </b></td>
            </tr>
          </table>
        </p><a name="Modify_AbilityMunitionsCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_AbilityMunitionsCost( <span class="arg">PlayerID</span> player, <span class="arg">AbilityID</span> ability, <span class="arg">Real</span> scalefactor, <span class="arg">Integer</span> OPT_mathtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the munitions cost of an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1650) </b></td>
            </tr>
          </table>
        </p><a name="Modify_AbilityRechargeTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_AbilityRechargeTime( <span class="arg">PlayerID/EntityID/SquadID</span> player/entity/squad, <span class="arg">AbilityID</span> ability, <span class="arg">Real</span> scalefactor, <span class="arg">Integer</span> OPT_mathtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the recharge time of an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1593) </b></td>
            </tr>
          </table>
        </p><a name="Modify_Armor"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_Armor( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> scalefactor, <span class="arg">Boolean</span> OPT_exclusive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad or entity's armor </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1023) </b></td>
            </tr>
          </table>
        </p><a name="Modify_CaptureTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_CaptureTime( <span class="arg">EGroupID</span> egroup, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the capture time of all strategic points in an EGroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1495) </b></td>
            </tr>
          </table>
        </p><a name="Modify_CoverCaptureTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_CoverCaptureTime( <span class="arg">EGroupID</span> egroup, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the capture time of all cover objects in an EGroup.  Higher = less time to capture. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1523) </b></td>
            </tr>
          </table>
        </p><a name="Modify_DisableHold"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_DisableHold( <span class="arg">EGroupID</span> group, <span class="arg">Boolean</span> disable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable hold (garrisoning) for an egroup or sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1867) </b></td>
            </tr>
          </table>
        </p><a name="Modify_EnableCamoflage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_EnableCamoflage( <span class="arg">EGroupID</span> group, <span class="arg">Boolean</span> disable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable camoflage for an egroup or sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1905) </b></td>
            </tr>
          </table>
        </p><a name="Modify_EntityBuildTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_EntityBuildTime( <span class="arg">PlayerID</span> playerId, <span class="arg">String</span> ebp, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the time taken to build a particular EBP. This only affects the given player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (227) </b></td>
            </tr>
          </table>
        </p><a name="Modify_EntityConstructionTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_EntityConstructionTime( <span class="arg">EGroupID</span> group, <span class="arg">Integer</span> Factor, <span class="arg">MUT</span> Usage (MUT_Multiplication )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies an entity's construction time </p>
                <p>Should only be used on entities, NOT squads</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (483) </b></td>
            </tr>
          </table>
        </p><a name="Modify_EntityCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_EntityCost( <span class="arg">PlayerID</span> player, <span class="arg">String</span> blueprint, <span class="arg">Integer</span> resourcetype, <span class="arg">Integer</span> addition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the cost of an entity for a particular player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1729) </b></td>
            </tr>
          </table>
        </p><a name="Modify_EntityHealthRegen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_EntityHealthRegen( <span class="arg">EGroupID</span> group, <span class="arg">Integer</span> Factor, <span class="arg">MUT</span> Usage (MUT_Multiplication )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies an entity's health regen </p>
                <p>Should only be used on entities, NOT squads</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (520) </b></td>
            </tr>
          </table>
        </p><a name="Modify_EntityMaxHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_EntityMaxHealth( <span class="arg">EGroupID</span> group, <span class="arg">Integer</span> Factor, <span class="arg">MUT</span> Usage (MUT_Multiplication )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies an entity's max health </p>
                <p>Should only be used on entities, NOT squads</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (411) </b></td>
            </tr>
          </table>
        </p><a name="Modify_EntitySelectionName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_EntitySelectionName( <span class="arg">EGroupID</span> group, <span class="arg">Integer</span> value, <span class="arg">MUT</span> Usage (MUT_Set) )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies an entity's selection name </p>
                <p>Should only be used on entities, NOT squads</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (454) </b></td>
            </tr>
          </table>
        </p><a name="Modify_PlayerExperienceReceived"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_PlayerExperienceReceived( <span class="arg">PlayerID</span> player, <span class="arg">Real</span> factor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the veterancy experience received by a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1856) </b></td>
            </tr>
          </table>
        </p><a name="Modify_PlayerProductionRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_PlayerProductionRate( <span class="arg">PlayerID</span> sgroup, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the production rate of a player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1578) </b></td>
            </tr>
          </table>
        </p><a name="Modify_PlayerResourceCap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_PlayerResourceCap( <span class="arg">PlayerID</span> playerId, <span class="arg">Integer</span> resourceType, <span class="arg">Real</span> scalefactor, <span class="arg">Integer</span> OPT_mathtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a player's resource cap. Possible math types are MUT_Multiplication, MUT_Addition. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (353) </b></td>
            </tr>
          </table>
        </p><a name="Modify_PlayerResourceRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_PlayerResourceRate( <span class="arg">PlayerID</span> playerId, <span class="arg">Integer</span> resourceType, <span class="arg">Real</span> scalefactor, <span class="arg">Integer</span> OPT_mathtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a player's incoming resource rate. Possible math types are MUT_Multiplication, MUT_Addition. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (332) </b></td>
            </tr>
          </table>
        </p><a name="Modify_PlayerSightRadius"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_PlayerSightRadius( <span class="arg">PlayerID</span> player, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the sight radius for a player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1174) </b></td>
            </tr>
          </table>
        </p><a name="Modify_PlayerUpkeep"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_PlayerUpkeep( <span class="arg">PlayerID</span> playerId, <span class="arg">Integer</span> resourceType, <span class="arg">Real</span> scalefactor, <span class="arg">Integer</span> OPT_mathtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the upkeep for a player's resource.  Possible math types are MUT_Multiplication, MUT_Addition. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (275) </b></td>
            </tr>
          </table>
        </p><a name="Modify_ProductionRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_ProductionRate( <span class="arg">EGroupID</span> sgroup, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the production rate of all factories in an EGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1554) </b></td>
            </tr>
          </table>
        </p><a name="Modify_ProductionSpeed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_ProductionSpeed( <span class="arg">Entity</span> entity, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the build time for a particular upgrade. This only affects the given player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (252) </b></td>
            </tr>
          </table>
        </p><a name="Modify_ProjectileDelayTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_ProjectileDelayTime( <span class="arg">PlayerID</span> player, <span class="arg">PBG</span> entityBP, <span class="arg">Real</span> factor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a projectile's delay_detonate_time. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1965) </b></td>
            </tr>
          </table>
        </p><a name="Modify_ReceivedAccuracy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_ReceivedAccuracy( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> scalefactor, <span class="arg">Boolean</span> OPT_exclusive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the chance of a squad/entity being hit </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1065) </b></td>
            </tr>
          </table>
        </p><a name="Modify_ReceivedDamage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_ReceivedDamage( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> scalefactor, <span class="arg">Boolean</span> OPT_exclusive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the damage a squad/entity receives. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (981) </b></td>
            </tr>
          </table>
        </p><a name="Modify_ReceivedSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_ReceivedSuppression( <span class="arg">SGroupID</span> sgroup, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the rate at which a squad gets suppressed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1108) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SetUpgradeCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SetUpgradeCost( <span class="arg">PlayerID</span> playerId, <span class="arg">UpgradeID</span> upgrade, <span class="arg">Integer</span> resourceType, <span class="arg">Real</span> newCost )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the cost of an upgrade. This only affects the given player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (314) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SightRadius"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SightRadius( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the sight radius for an egroup or an sgroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1252) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SquadAvailability"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SquadAvailability( <span class="arg">PlayerID</span> player, <span class="arg">String</span> blueprint, <span class="arg">Integer</span> addition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the availability limit of a squad type for any given player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1373) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SquadCaptureRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SquadCaptureRate( <span class="arg">SGroupID</span> group, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's rate at which it will capture a strategic point. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1387) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SquadCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SquadCost( <span class="arg">PlayerID</span> player, <span class="arg">String</span> blueprint, <span class="arg">Integer</span> resourcetype, <span class="arg">Integer</span> addition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the cost of an squad for a particular player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1745) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SquadHealthRegen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SquadHealthRegen( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> Factor, <span class="arg">MUT</span> Usage (MUT_Multiplication, <span class="arg">Boolean</span> OPT_exclusive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's health regen. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1414) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SquadInvulnerableToKnockback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SquadInvulnerableToKnockback( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> disable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or Disable a squad's vulnerability to knock back </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1934) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SquadMaxHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SquadMaxHealth( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> Factor, <span class="arg">MUT</span> Usage (MUT_Multiplication )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's max health </p>
                <p>Should only be used on squads</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1223) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SquadTypeSightRadius"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SquadTypeSightRadius( <span class="arg">PlayerID</span> player, <span class="arg">String</span> blueprint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the sight radius of a squad type for any given player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1189) </b></td>
            </tr>
          </table>
        </p><a name="Modify_TargetPriority"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_TargetPriority( <span class="arg">EGroupID</span> group, <span class="arg">Integer</span> addition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the target priority of a squad or entity group from the attacker. The value is an addition </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1453) </b></td>
            </tr>
          </table>
        </p><a name="Modify_TeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_TeamWeapon( <span class="arg">EGroupID</span> group, <span class="arg">String</span> modifier, <span class="arg">Real</span> scalefactor, <span class="arg">String</span> OPT_hardpoint )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a sync weapon only. </p>
                <p>The hardpoint defaults to "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (375) </b></td>
            </tr>
          </table>
        </p><a name="Modify_TerritoryRadius"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_TerritoryRadius( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the territory radius for an egroup or an sgroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1291) </b></td>
            </tr>
          </table>
        </p><a name="Modify_UnitSpeed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_UnitSpeed( <span class="arg">SGroupID</span> sgroup, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the maximum speed for a vehicle. This has no effect on infantry. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1135) </b></td>
            </tr>
          </table>
        </p><a name="Modify_UnitVeterancyValue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_UnitVeterancyValue( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> scalefactor, <span class="arg">Integer</span> OPT_mathtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the Veterancy Experience value of the target SGroup, EGroup, Entity, or Squad. Mathtype is Multiplication by default </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1160) </b></td>
            </tr>
          </table>
        </p><a name="Modify_UpgradeBuildTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_UpgradeBuildTime( <span class="arg">PlayerID</span> playerId, <span class="arg">UpgradeID</span> upgrade, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the build time for a particular upgrade. This only affects the given player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (239) </b></td>
            </tr>
          </table>
        </p><a name="Modify_VehicleRepairRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_VehicleRepairRate( <span class="arg">PlayerID</span> player, <span class="arg">Real</span> factor, <span class="arg">String</span> engineer_entity_blueprint )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the vehicle repair rate of all a player's engineers </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1762) </b></td>
            </tr>
          </table>
        </p><a name="Modify_VehicleRotationSpeed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_VehicleRotationSpeed( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> factor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the vehicle rotation speed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1779) </b></td>
            </tr>
          </table>
        </p><a name="Modify_VehicleTurretRotationSpeed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_VehicleTurretRotationSpeed( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies the turret rotation speed of a vehicle squad </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1819) </b></td>
            </tr>
          </table>
        </p><a name="Modify_Vulnerability"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_Vulnerability( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Increases the received accuracy, penetration, and damage on a squad by the scalefactor.  For example, a scalefactor of 2 means that the squad gets 2x the received accuracy, 2x the received penetration, and 2x the received damage. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1317) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponAccuracy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponAccuracy( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon accuracy. </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (709) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponBurstLength"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponBurstLength( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon burst length (time). </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (863) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponBurstRateOfFire"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponBurstRateOfFire( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon rate of fire. </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (901) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponCooldown"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponCooldown( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon cooldown time. </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (748) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponDamage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponDamage( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon damage. </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (941) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponEnabled( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables a weapon hardpoint </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (550) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponPenetration"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponPenetration( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon penetration. Does not work on artillery (mortar, nebelwerfer, etc.) </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (632) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponRange"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponRange( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon range. Does not work on artillery (mortar, nebelwerfer, etc.) </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (594) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponReload"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponReload( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon reload time. </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (787) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponScatter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponScatter( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon scatter. </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (825) </b></td>
            </tr>
          </table>
        </p><a name="Modify_WeaponSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_WeaponSuppression( <span class="arg">EGroupID</span> group, <span class="arg">String</span> hardpoint, <span class="arg">Real</span> scalefactor )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies a squad's weapon suppression. Does not work on artillery (mortar, nebelwerfer, etc.) </p>
                <p>The hardpoint should be specified as a string - i.e. "hardpoint_01"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (670) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Music"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Music</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Music_GetDefaultMovement"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_GetDefaultMovement(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the 'default music movement'.  This is the current default that can always be called </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (43) </b></td>
            </tr>
          </table>
        </p><a name="Music_GetMusicEventIntensityLevel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_GetMusicEventIntensityLevel( <span class="arg">String</span> music event (see Cardinal.scar for event enums) )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Translates the string music event level into the engine designated intensity value </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (219) </b></td>
            </tr>
          </table>
        </p><a name="Music_LockIntensity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_LockIntensity( <span class="arg">Real</span> level , <span class="arg">Real</span> OPT_duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Lock the music's intensity to a given level, for a given length of time (if you omit duration, the music plays indefinately until Music_UnlockIntensity is called) </p>
                <p>You can chain several level/duration pairs together to create a playlist of sorts. To do this, just use more parameters: Music_LockIntensity(level1, duration1, level2, duration2, ...)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (74) </b></td>
            </tr>
          </table>
        </p><a name="Music_Outro_End"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_Outro_End(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays the music end outro segement and stop music after for about 50 secs. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (314) </b></td>
            </tr>
          </table>
        </p><a name="Music_PlayDefaultMovement"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_PlayDefaultMovement(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play Music at the 'default music movement' </p>
                <p>Set current music movement with Music_SetDefaultMovement</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (50) </b></td>
            </tr>
          </table>
        </p><a name="Music_PlayMovement"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_PlayMovement( <span class="arg">String</span> movement )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a specific movement immediately - useful for things like NISes </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (59) </b></td>
            </tr>
          </table>
        </p><a name="Music_PlayStinger"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_PlayStinger( <span class="arg">String</span> Stinger )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a stinger audio event.  The wwise event should handle ducking, ending, etc. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (265) </b></td>
            </tr>
          </table>
        </p><a name="Music_PostCombat_End"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_PostCombat_End(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays the music short end outro segement after combat finishes and goes to silence for around 20 secs. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (321) </b></td>
            </tr>
          </table>
        </p><a name="Music_RestartAfterObjective"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_RestartAfterObjective( <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>This restart the music after objective after certain </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (209) </b></td>
            </tr>
          </table>
        </p><a name="Music_SetDefaultMovement"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_SetDefaultMovement( <span class="arg">String</span> newMovement )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the 'default music movement'.  This is the current default that can always be called </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (37) </b></td>
            </tr>
          </table>
        </p><a name="Music_SetIntensityAfterObjective"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_SetIntensityAfterObjective( <span class="arg">Real</span> delay, <span class="arg">Integer</span> level, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>This restart the music after objective after certain </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (234) </b></td>
            </tr>
          </table>
        </p><a name="Music_Stop"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_Stop(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stops all music currently playing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (270) </b></td>
            </tr>
          </table>
        </p><a name="Music_StopAfterObjective"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_StopAfterObjective( <span class="arg">Real</span> delay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>This stops music after objective and make sound go to silence </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (181) </b></td>
            </tr>
          </table>
        </p><a name="Music_UnlockIntensity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Music_UnlockIntensity(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unlock the music's intensity and revert to gameplay-driven </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\music.scar] (138) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;NIS"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;NIS</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="NIS_CameraCheckpoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 NIS_CameraCheckpoint(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>ONLY USE THIS INSIDE AN NIS EVENT. Wait until the NIS camera hits its counterpart checkpoint. </p>
                <p>Makes the script pause and wait until the camera portion hits "nis_pause()" (the counterpart checkpoint) on it's timeline. With these two functions, you can have the event script and camera sync up - i.e. make one wait for the other - at various points in the NIS and avoid all sorts of timing issues.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\nis.scar] (92) </b></td>
            </tr>
          </table>
        </p><a name="NIS_END"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 NIS_END( <span class="arg">Table</span> OPT_details )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>ONLY USE THIS INSIDE AN NIS EVENT. Transition from the NIS back to the game. </p>
                <p>You can safely do any cleanup after calling this, and it will occur once the screen is black.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\nis.scar] (242) </b></td>
            </tr>
          </table>
        </p><a name="NIS_FadeCameraCut"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 NIS_FadeCameraCut(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Used to create a fade cut in an NIS </p>
                <p>Call this in your NIS Event.  This will require an nis_pause() frame in your NIS file in order to work.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\nis.scar] (107) </b></td>
            </tr>
          </table>
        </p><a name="NIS_PREAMBLE"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 NIS_PREAMBLE( <span class="arg">Table</span> details )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>ONLY USE THIS INSIDE AN NIS EVENT. Transition from the game into an NIS preamble - a quick section before the NIS proper. A preamble is totally optional, if you want to go straight into an NIS, skip this and use NIS_START instead. </p>
                <p>See NIS_START for information about the details table.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\nis.scar] (141) </b></td>
            </tr>
          </table>
        </p><a name="NIS_START"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 NIS_START( <span class="arg">Table</span> OPT_details )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>ONLY USE THIS INSIDE AN NIS EVENT. Transition from the game (or a preamble) into an NIS. </p>
                <p>You can do any setup after calling this, as that will occur once the screen has faded to black on the transition in. The game will fade back in to the NIS over the next half second or so (apart from opening cinematics, which is two seconds), so you may want to delay your first action accordingly. The details table should include, at the very least, the following items: style (NIS_OPENING, NIS_MID, or NIS_CLOSING), revealFOW (a Boolean). If you included details in a preamble, you don't need to supply them again here.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\nis.scar] (180) </b></td>
            </tr>
          </table>
        </p><a name="NIS_StartDrift"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 NIS_StartDrift( <span class="arg">Real</span> OPT_totalTime, <span class="arg">Real</span> OPT_driftScale )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>ONLY USE THIS INSIDE AN NIS EVENT with an NIS camera. Starts the NIS camera drifting. </p>
                <p>"Drifting" moves the camera around in the shape of an infinity symbol, so it doesn't look quite so static.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\nis.scar] (68) </b></td>
            </tr>
          </table>
        </p><a name="NIS_StopDrift"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 NIS_StopDrift(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>ONLY USE THIS INSIDE AN NIS EVENT with an NIS camera. Stops the NIS camera drifting. </p>
                <p>"Drifting" moves the camera around in the shape of an infinity symbol, so it doesn't look quite so static.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\nis.scar] (84) </b></td>
            </tr>
          </table>
        </p><a name="NIS_StoreCurrentCameraPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 NIS_StoreCurrentCameraPos(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stores the current camera position as the NIS's end_camera position. </p>
                <p>Useful if you want the camera to always end where the player was last looking. If it does not return a position, nothing will be stored.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\nis.scar] (121) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Objectives"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Objectives</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Objective_AddAreaHighlight"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AddAreaHighlight( <span class="arg">LuaTable</span> objTable, <span class="arg">Marker/Position/Group</span> pos, <span class="arg">AreaType</span> OPT_areatype, <span class="arg">Real</span> OPT_scale, <span class="arg">Table</span> OPT_color, <span class="arg">Real</span> OPT_alpha )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a map highlight around a specific point </p>
                <p>AreaType is AT_CIRCLE (the default) or AT_SQUARE. Color is a table with three values for red, green and blue - i.e. {255, 0, 0}.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (703) </b></td>
            </tr>
          </table>
        </p><a name="Objective_AddGroundReticule"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AddGroundReticule( <span class="arg">LuaTable</span> objTable, <span class="arg">Marker/Pos</span> position, <span class="arg">Real</span> OPT_size, <span class="arg">BP</span> OPT_reticuleBlueprint, <span class="arg">String</span> OPT_hintpointTemplate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a visual splat on the ground in the world around a certain position, returning the ID </p>
                <p>The reticule blueprint (the circle on the ground) and the hintpoint template (the arrow) are by defualt taken from the objective type, but you can override them or set them to false to turn that element off.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1111) </b></td>
            </tr>
          </table>
        </p><a name="Objective_AddHealthBar"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AddHealthBar( <span class="arg">LuaTable</span> objTable, <span class="arg">EGroupID</span> group , <span class="arg">Boolean</span> OPT_onlyWhenDamaged, <span class="arg">Integer</span> OPT_barIndex, <span class="arg">String</span> OPT_text )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a Healthbar tied to a squad or entity at a location.  Will update the health bar as the unit's health fluctuates.  Can be removed with Objective_RemoveHealthBar or completing/failing the objective </p>
                <p>If you want to use one of the "global" progress bars (if your project supports them), supply the relevant barIndex value and text string to show alongside it.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1205) </b></td>
            </tr>
          </table>
        </p><a name="Objective_AddPing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AddPing( <span class="arg">LuaTable</span> objectiveTable, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a tactical map ping to an objective </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1058) </b></td>
            </tr>
          </table>
        </p><a name="Objective_AddTimerBar"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AddTimerBar( <span class="arg">LuaTable</span> objTable, <span class="arg">Integer</span> OPT_barIndex, <span class="arg">String</span> OPT_text )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a Timer bar for objective timers, which is automatically updated. The bar can be removed with Objective_RemoveTimerBar or by completing/failing the objective. </p>
                <p>Requires a timer to have been started with Objective_StartTimer to work. If you want to use one of the "global" progress bars (if your project supports them), supply the relevant barIndex value and text string to show alongside it.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1274) </b></td>
            </tr>
          </table>
        </p><a name="Objective_AddUIElements"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AddUIElements( <span class="arg">LuaTable</span> objTable, <span class="arg">Position</span> pos, <span class="arg">Boolean</span> OPT_ping, <span class="arg">String</span> OPT_hintpointText, <span class="arg">Boolean</span> OPT_worldArrow, <span class="arg">Real</span> OPT_objectiveArrowOffset, <span class="arg">Entity/Squad/Position</span> OPT_objectiveArrowFacing, <span class="arg">Integer</span> OPT_actionType, <span class="arg">String</span> OPT_iconName, <span class="arg">String</span> OPT_templateName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds multiple UI elements on one position. 'pos' can be group/entity/squad/marker. worldArrow adds a 3D arrow which points to the thing in the world. hintpointText adds a hint point that appears on the thing when moused over. If you're adding an arrow or a hintpoint, this thing will be among those potentially pointed to by the 2D HUD arrow. objectiveArrowOffset is an offset applied to the arrow's position (you can specify a height offset or a 3D position offset). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (759) </b></td>
            </tr>
          </table>
        </p><a name="Objective_AreAllPrimaryObjectivesComplete"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AreAllPrimaryObjectivesComplete(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether all primary objectives have been completed. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (650) </b></td>
            </tr>
          </table>
        </p><a name="Objective_AreSubObjectivesComplete"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AreSubObjectivesComplete( <span class="arg">LuaTable</span> objTable, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ALL or ANY sub-objectives of the given objective are complete </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (528) </b></td>
            </tr>
          </table>
        </p><a name="Objective_AreSubObjectivesExpired"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AreSubObjectivesExpired( <span class="arg">LuaTable</span> objTable, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ALL or ANY sub-objectives of the given objective are expired </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (574) </b></td>
            </tr>
          </table>
        </p><a name="Objective_AreSubObjectivesFailed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_AreSubObjectivesFailed( <span class="arg">LuaTable</span> objTable, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ALL or ANY sub-objectives of the given objective are failed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (551) </b></td>
            </tr>
          </table>
        </p><a name="Objective_BlinkUIElements"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_BlinkUIElements( <span class="arg">LuaTable</span> objTable, <span class="arg">Integer</span> elementID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Bring attention to some UI elements by blinking them. This causes the hintpoint and the off-screen arrow to blink, but leaves the minimap ping and other elements constant. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (952) </b></td>
            </tr>
          </table>
        </p><a name="Objective_Complete"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_Complete( <span class="arg">LuaTable</span> objTable, <span class="arg">Boolean</span> OPT_showTitle, <span class="arg">Boolean</span> OPT_playIntel )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Completes an objective and removes it from the list (unless it is a sub-objective, in which case it is marked as complete but stays visible until the parent objective is finished) </p>
                <p>Automatically removes any elements added with Objective_AddUIElements(). The showTitle and playIntel flags let you control whether the titlecard and Intel_Complete event are played (default: true).</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (236) </b></td>
            </tr>
          </table>
        </p><a name="Objective_Expire"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_Expire( <span class="arg">LuaTable</span> objTable, <span class="arg">Boolean</span> OPT_showTitle, <span class="arg">Boolean</span> OPT_playIntel )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Expires an objective and removes it from the list (unless it is a sub-objective, in which case it is marked as expired but stays visible until the parent objective is finished) </p>
                <p>Automatically removes any elements added with Objective_AddUIElements(). The showTitle and playIntel flags let you control whether the titlecard and Intel_Expire event are played (default: true).</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (307) </b></td>
            </tr>
          </table>
        </p><a name="Objective_Fail"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_Fail( <span class="arg">LuaTable</span> objTable, <span class="arg">Boolean</span> OPT_showTitle, <span class="arg">Boolean</span> OPT_playIntel )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fails an objective and removes it from the list (unless it is a sub-objective, in which case it is marked as failed but stays visible until the parent objective is finished) </p>
                <p>Automatically removes any elements added with Objective_AddUIElements(). The showTitle and playIntel flags let you control whether the titlecard and Intel_Fail event are played (default: true).</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (274) </b></td>
            </tr>
          </table>
        </p><a name="Objective_GetCounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_GetCounter( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current count associated with this objective. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1497) </b></td>
            </tr>
          </table>
        </p><a name="Objective_GetSubObjectives"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_GetSubObjectives( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of all sub-objectives of the given objective </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (509) </b></td>
            </tr>
          </table>
        </p><a name="Objective_GetTimerSeconds"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_GetTimerSeconds( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the amount of seconds on the timer (time remaining or time elapsed, based on the type of timer used) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1410) </b></td>
            </tr>
          </table>
        </p><a name="Objective_IncreaseCounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_IncreaseCounter( <span class="arg">LuaTable</span> objTable, <span class="arg">Integer</span> OPT_amount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Increases the counter that is associated with this objective in the UI. You can provide an amount to increase by. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1461) </b></td>
            </tr>
          </table>
        </p><a name="Objective_IsComplete"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_IsComplete( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an objective is complete </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (496) </b></td>
            </tr>
          </table>
        </p><a name="Objective_IsCounterSet"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_IsCounterSet( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a counter has been set for this objective </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1510) </b></td>
            </tr>
          </table>
        </p><a name="Objective_IsExpired"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_IsExpired( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an objective is expired </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (610) </b></td>
            </tr>
          </table>
        </p><a name="Objective_IsFailed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_IsFailed( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an objective is failed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (597) </b></td>
            </tr>
          </table>
        </p><a name="Objective_IsStarted"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_IsStarted( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an objective has been started. Completed and failed / expired objectives will also return true. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (623) </b></td>
            </tr>
          </table>
        </p><a name="Objective_IsTimerSet"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_IsTimerSet( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a timer has been set for this objective </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1429) </b></td>
            </tr>
          </table>
        </p><a name="Objective_IsVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_IsVisible( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether an objective is visible or not. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (636) </b></td>
            </tr>
          </table>
        </p><a name="Objective_PauseTimer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_PauseTimer( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pauses the objective's timer. If a timer has not been set, it does nothing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1373) </b></td>
            </tr>
          </table>
        </p><a name="Objective_Register"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_Register( <span class="arg">LuaTable</span> objTable, <span class="arg">PlayerID/TeamID</span> OPT_owner )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>'Registers' an objective. Wrapper function for Objective_Create with a few other features. </p>
                <p>Includes pings as defined by the objective table created in the main scar file. You can pass in a team or player, so that the objective only applies to it.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (95) </b></td>
            </tr>
          </table>
        </p><a name="Objective_RemoveGroundReticule"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_RemoveGroundReticule(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an existing ground reticule by its ID </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1175) </b></td>
            </tr>
          </table>
        </p><a name="Objective_RemoveHealthBar"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_RemoveHealthBar( <span class="arg">LuaTable</span> objectiveTable, <span class="arg">Element</span> healthBarID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a health bar monitor </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1304) </b></td>
            </tr>
          </table>
        </p><a name="Objective_RemovePing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_RemovePing( <span class="arg">LuaTable</span> objectiveTable, <span class="arg">Integer</span> PingID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a tactical map ping from an objective </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1087) </b></td>
            </tr>
          </table>
        </p><a name="Objective_RemoveProgressBar"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_RemoveProgressBar( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove a progress bar for this objective. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1555) </b></td>
            </tr>
          </table>
        </p><a name="Objective_RemoveTimerBar"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_RemoveTimerBar( <span class="arg">LuaTable</span> objectiveTable, <span class="arg">Element</span> timerBarID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a timer bar monitor </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1317) </b></td>
            </tr>
          </table>
        </p><a name="Objective_RemoveUIElements"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_RemoveUIElements( <span class="arg">LuaTable</span> objTable, <span class="arg">Integer</span> elementID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a group of UI elements that were added by Objective_AddUIElements </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (865) </b></td>
            </tr>
          </table>
        </p><a name="Objective_ResumeTimer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_ResumeTimer( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Resume the objective's timer. If a timer has not been set, it does nothing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1385) </b></td>
            </tr>
          </table>
        </p><a name="Objective_SetAlwaysShowDetails"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_SetAlwaysShowDetails( <span class="arg">LuaTable</span> objTable, <span class="arg">Boolean</span> title, <span class="arg">Boolean</span> hud_arrow, <span class="arg">Boolean</span> hintpoints )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether this objective always shows detailed text, the HUD arrow, or the hintpoints. There can only be one objective at a time that forces the HUD arrow to show up. If you pass in 'nil' for hud_arrow then its behavior is not affected. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1579) </b></td>
            </tr>
          </table>
        </p><a name="Objective_SetCounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_SetCounter( <span class="arg">LuaTable</span> objTable, <span class="arg">Real</span> current, <span class="arg">Real</span> OPT_maximum )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a counter that is associated with this objective in the UI. You can provide a 'maximum' so that it shows up as "1 of 5" </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1441) </b></td>
            </tr>
          </table>
        </p><a name="Objective_SetProgressBar"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_SetProgressBar( <span class="arg">LuaTable</span> objTable, <span class="arg">Real</span> value, <span class="arg">Boolean</span> OPT_flashing, <span class="arg">Integer</span> OPT_barIndex, <span class="arg">String</span> OPT_text )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Show a progress bar for this objective with the given value (which should be a percentage from 0.0 (empty) to 1.0 (full)). This bar can be removed with Objective_RemoveProgressBar or by completing or failing the mission. </p>
                <p>If you want to use one of the "global" progress bars (if your project supports them), supply the relevant barIndex value and text string to show alongside it.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1524) </b></td>
            </tr>
          </table>
        </p><a name="Objective_Show"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_Show( <span class="arg">LuaTable</span> objective_table, <span class="arg">Boolean</span> on/off, <span class="arg">Boolean</span> ShowTitle )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Shows or hides an objective from the UI and tactical map </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (362) </b></td>
            </tr>
          </table>
        </p><a name="Objective_Start"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_Start( <span class="arg">LuaTable</span> objTable, <span class="arg">Boolean</span> OPT_showTitle, <span class="arg">Boolean</span> OPT_playIntel )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Shows an objective to the player and activates it </p>
                <p>Includes pings and FOW as defined by the SetupUI() function. The showTitle and playIntel flags let you control whether the titlecard and Intel_Start event are played (default: true).</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (203) </b></td>
            </tr>
          </table>
        </p><a name="Objective_StartTimer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_StartTimer( <span class="arg">LuaTable</span> objTable, <span class="arg">Integer</span> direction, <span class="arg">Real</span> OPT_initialTime, <span class="arg">Real</span> OPT_flashThreshold )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Starts a timer that is associated with this objective in the UI. Use COUNT_DOWN or COUNT_UP for the 'direction' parameter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1338) </b></td>
            </tr>
          </table>
        </p><a name="Objective_Stop"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_Stop( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stops an objective that is in progress and puts it back into the waiting-to-start state </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (336) </b></td>
            </tr>
          </table>
        </p><a name="Objective_StopCounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_StopCounter( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stops the objective's counter. If a counter has not been set, it does nothing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1485) </b></td>
            </tr>
          </table>
        </p><a name="Objective_StopTimer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_StopTimer( <span class="arg">LuaTable</span> objTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stops the objective's timer. If a timer has not been set, it does nothing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (1397) </b></td>
            </tr>
          </table>
        </p><a name="Objective_TogglePings"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_TogglePings( <span class="arg">LuaTable</span> objective_table, <span class="arg">Boolean</span> on/off )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggles minimap blips on or off. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (693) </b></td>
            </tr>
          </table>
        </p><a name="Objective_TriggerTitleCard"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_TriggerTitleCard(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>ONLY CALL THIS FROM INSIDE AN OBJECTIVE'S INTEL START / COMPLETE / FAIL / EXPIRE EVENT. The objective titlecard will present itself at this point inside the event. </p>
                <p>If you omit this call, the titlecard will appear at the end of the event by default. You also do not have to wrap this with CTRL and WAIT stuff - it does all of the internally.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (416) </b></td>
            </tr>
          </table>
        </p><a name="Objective_UpdateText"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Objective_UpdateText( <span class="arg">LuaTable</span> objTable, <span class="arg">String</span> new_title, <span class="arg">String</span> new_description, <span class="arg">Boolean</span> OPT_showTitle, <span class="arg">Boolean</span> OPT_immediate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Updates the title and description for the objective. If you only want to set one of them, pass in nil for the other </p>
                <p>Use the immediate flag to make this change happen immediately, bypassing the queue that objective updates normally sit in (i.e. you're updating the objective's title in the middle of its PreStart() function!)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\core_objectives.scar] (384) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Player"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Player</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Player_AddAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_AddAbility( <span class="arg">Player&amp;</span> player, <span class="arg">ScarAbilityPBG</span> pAbilityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add an ability to a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1169) </b></td>
            </tr>
          </table>
        </p><a name="Player_AddAbilityLockoutZone"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_AddAbilityLockoutZone( <span class="arg">Player&amp;</span> player, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Specifies a marker where an ability cannot be used. This only applies to abilities where you use the cursor to pick a location in the world (like a location to paradrop at). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (945) </b></td>
            </tr>
          </table>
        </p><a name="Player_AddResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_AddResource( <span class="arg">PlayerID</span> playerId, <span class="arg">Integer</span> resourceType, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add resource to player, as opposed to just setting it. </p>
                <p>Player::AddResourceReason, the resource add reason enum, can be nil, RES_Other, RES_Gift, RES_Resourcing, RES_Refund, RES_RefundOnDeath</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (467) </b></td>
            </tr>
          </table>
        </p><a name="Player_AddResources"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_AddResources( <span class="arg">PlayerID</span> playerId, <span class="arg">Table</span> resources )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add resources to player, as opposed to just setting it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (483) </b></td>
            </tr>
          </table>
        </p><a name="Player_AddSquadsToSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_AddSquadsToSGroup( <span class="arg">PlayerID</span> playerId, <span class="arg">String</span> squadgroupName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>For the given player, get all of the squads gathered into a squadgroup of your naming. </p>
                <p>Squads will be added to given squad group.  If the given squad group does not exist it will be created.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (498) </b></td>
            </tr>
          </table>
        </p><a name="Player_AddUnspentCommandPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_AddUnspentCommandPoints( <span class="arg">Player&amp;</span> player, <span class="arg">Real</span> points )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gives the player new command points to spent on </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (799) </b></td>
            </tr>
          </table>
        </p><a name="Player_AreSquadsNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_AreSquadsNearMarker( <span class="arg">PlayerID</span> playerid, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY of a players squads are in proximity of a marker </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (947) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanCastAbilityOnEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanCastAbilityOnEntity( <span class="arg">PlayerID</span> player, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">EntityID</span> targetEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests if the player can currently use an ability on target entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1030) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanCastAbilityOnPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanCastAbilityOnPlayer( <span class="arg">PlayerID</span> player, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">PlayerID</span> targetPlayer )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests if the player can currently use an ability on target player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1010) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanCastAbilityOnPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanCastAbilityOnPosition( <span class="arg">PlayerID</span> player, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Position</span> targetPosition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests if the player can currently use an ability on target position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1070) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanCastAbilityOnSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanCastAbilityOnSquad( <span class="arg">PlayerID</span> player, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">SquadID</span> targetSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests if the player can currently use an ability on target squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1050) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanConstruct"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanConstruct( <span class="arg">PlayerID</span> player, <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests if the player is able to construct a given blueprint </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1090) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanConstructOnPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanConstructOnPosition( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroupid, <span class="arg">Entity</span> ebp, <span class="arg">EGroupID</span> targetid, <span class="arg">Position</span> OPT_Facing )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns TRUE if player can construct the specified entity at specified position and facing.  Otherwise, returns FALSE. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (423) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanPlaceStructureOnPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanPlaceStructureOnPosition( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> position, <span class="arg">Position</span> facing )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if a player of specified group can place an entity at the specified position and facing angle. </p>
                <p>ebp is the structureBlueprint that must be a valid building that can be constructed by the sgroup.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1241) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanSeeEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanSeeEGroup( <span class="arg">PlayerID</span> playerid, <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a player can see ALL or ANY items in an egroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (699) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanSeeEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanSeeEntity( <span class="arg">PlayerID</span> player, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a player can see a given entity (revealed in FOW) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (745) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanSeePosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanSeePosition( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a player can see a given position. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (758) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanSeeSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanSeeSGroup( <span class="arg">PlayerID</span> playerid, <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a player can see ALL or ANY items in an sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (714) </b></td>
            </tr>
          </table>
        </p><a name="Player_CanSeeSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CanSeeSquad( <span class="arg">PlayerID</span> player, <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a player can see ALL or ANY units in a given squad (revealed in FOW) </p>
                <p>Set all to true to check that ALL units are visible or set to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (752) </b></td>
            </tr>
          </table>
        </p><a name="Player_ClearArea"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_ClearArea( <span class="arg">PlayerID</span> player, <span class="arg">MarkerID</span> marker, <span class="arg">Boolean</span> invulnerable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Any of the player's units in the marker area move out of the area, and can be made invulnerable for a bit whilst they do it </p>
                <p>You can replace the marker with a position and a range - i.e. Player_ClearArea(player, pos, range, invulnerable)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (966) </b></td>
            </tr>
          </table>
        </p><a name="Player_ClearAvailabilities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_ClearAvailabilities( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears item, command and construction menu availabilities for the player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (938) </b></td>
            </tr>
          </table>
        </p><a name="Player_ClearPopCapOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_ClearPopCapOverride( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the pop cap override so that modifiers can take effect again </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (980) </b></td>
            </tr>
          </table>
        </p><a name="Player_ClearStateModelEnumTableTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_ClearStateModelEnumTableTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a TargetHandle value in the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1557) </b></td>
            </tr>
          </table>
        </p><a name="Player_ClearStateModelTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_ClearStateModelTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a TargetHandle value in the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1462) </b></td>
            </tr>
          </table>
        </p><a name="Player_CompleteUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_CompleteUpgrade( <span class="arg">Player&amp;</span> pPlayer, <span class="arg">ScarUpgradePBG</span> pUpgradePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finish upgrade for a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1149) </b></td>
            </tr>
          </table>
        </p><a name="Player_FindFirstEnemyPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_FindFirstEnemyPlayer( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Searches the player list in the world and returns the id of the first enemy player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (957) </b></td>
            </tr>
          </table>
        </p><a name="Player_FindFirstNeutralPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_FindFirstNeutralPlayer( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Searches the player list in the world and returns the id of the first neutral player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (963) </b></td>
            </tr>
          </table>
        </p><a name="Player_FromId"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_FromId( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a player given a player id from the ME. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (116) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetAbilityBPCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetAbilityBPCost( <span class="arg">PlayerID</span> pPlayer, <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the modified cost of the given ability including all modifications added by the given player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (294) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetAIType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetAIType( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the type of the given player if it is an AI. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1119) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetAll( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> OPT_sgroup, <span class="arg">EGroupID</span> OPT_egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates/Clears groups that contain all of a player's units and buildings. Defaults - sg_allsquads and eg_allentities </p>
                <p>Fills an SGroup with all of the given player's squads, and an EGroup with all the player's entities. If you don't provide and groups, then it defaults to using sg_allsquads and eg_allentities.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (512) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetAllEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetAllEntities( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an sim::EntityGroupObs containing all the players entities including ones in squad. </p>
                <p>This function returns a 'global' entity group with the name '__Player%dEntities', where %d is the player ID.  This means that you should never need to destroy it./n However, if you do destroy it, it will be recreated the next time this function is called.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (580) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetAllEntitiesFromType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetAllEntitiesFromType( <span class="arg">PlayerID</span> player, <span class="arg">String</span> unitType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an EGroup containing all of the players entities(including non_squad entities) of a specific unit_type (as defined by the type_ext on the entity) </p>
                <p>This function returns a new EGroup to allow tracking of different types.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (587) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetAllEntitiesNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetAllEntitiesNearMarker( <span class="arg">PlayerID</span> playerid, <span class="arg">EGroupID</span> egroup, <span class="arg">MarkerID/Pos/SectorID</span> position, <span class="arg">Real</span> OPT_range )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gather together all of a player's entities that are in proximity to a marker, a position, or within a territory sector into an EGroup. The EGroup is cleared beforehand. </p>
                <p>You can override a marker's normal proximity by specifying a range.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (660) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetAllSquadsNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetAllSquadsNearMarker( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID/Pos/SectorID</span> position, <span class="arg">Real</span> OPT_range )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gather together all of a player's squads that are in proximity to a marker, a position, or within a territory sector into an SGroup. The SGroup is cleared beforehand. </p>
                <p>You can override a marker's normal proximity by specifying a range.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (622) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetBuildingID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetBuildingID( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> entitytypes/unit_types )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the entityID of the first player owned building listed in the table. </p>
                <p>This only looks at completed buildings</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (387) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetBuildingsCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetBuildingsCount( <span class="arg">PlayerID</span> playerId )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total number of buildings owned by this player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (402) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetBuildingsCountExcept"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetBuildingsCountExcept( <span class="arg">PlayerID</span> playerId, <span class="arg">Integer</span> exceptions )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total number of buildings owned by this player (with exclusions). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (409) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetBuildingsCountOnly"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetBuildingsCountOnly( <span class="arg">PlayerID</span> playerId, <span class="arg">Integer</span> ebplist )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of buildings owned by this player (inclusive). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (416) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetBuildingUnderConstructionID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetBuildingUnderConstructionID( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> entitytypes/unit_types )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the entityID of the first player owned building listed in the table. </p>
                <p>This only looks at under construction buildings</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (395) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetCurrentPopulation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetCurrentPopulation( <span class="arg">Player&amp;</span> player, <a href="enum_list.htm#CapType">CapType</a> capType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Use capType CT_Personnel to get current squad cap, CT_Vehicle to get current vehicle cap, CT_Medic to get current medic cap </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (765) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetCurrentPopulationCap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetCurrentPopulationCap( <span class="arg">Player&amp;</span> player, <a href="enum_list.htm#CapType">CapType</a> capType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get current popcap. Use capType CT_Personnel to get current squad cap or CT_VehicleCap to get current vehicle cap. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (772) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetDisplayName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetDisplayName( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the players UI name. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (823) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetEntities( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an sim::EntityGroupObs containing all the players entities excluding ones in squad. </p>
                <p>This function returns a 'global' entity group with the name '__Player%dEntities', where %d is the player ID.  This means that you should never need to destroy it./n However, if you do destroy it, it will be recreated the next time this function is called.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (548) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetEntitiesEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetEntitiesEGroup( <span class="arg">Player&amp;</span> player, <span class="arg">EGroupID</span> group )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets all the player's current entities and loads them into the specified egroup. </p>
                <p>Gets all the player's current entities and loads them into the specified egroup. The egroup is cleared before being loaded.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (606) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetEntitiesFromType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetEntitiesFromType( <span class="arg">PlayerID</span> player, <span class="arg">String</span> unitType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an EGroup containing all of the players entities(excluding non_squad entities) of a specific unit_type (as defined by the type_ext on the entity) </p>
                <p>This function returns a new EGroup to allow tracking of different types.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (570) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetEntityBPCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetEntityBPCost( <span class="arg">PlayerID</span> player, <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the modified cost of the given entity including all modifications added by the given player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (538) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetEntityConcentration"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetEntityConcentration( <span class="arg">PlayerID</span> player, <span class="arg">Boolean</span> OPT_popcapOnly, <span class="arg">Table</span> OPT_includeBlueprints, <span class="arg">Table</span> OPT_excludeBlueprints, <span class="arg">Boolean</span> OPT_bLeastConcentrated, <span class="arg">MarkerID/Table</span> OPT_onlyInThisMarker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds the greatest (or least) concentration of entities owned by a player. </p>
                <p>This function is slow, so don't call it very often</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (1062) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetEntityCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetEntityCount( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of entities a player currently owns </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (259) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetEntityCountByUnitType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetEntityCountByUnitType( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> unitTypeString )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of entities of a certain unit type </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (265) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetEntityName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetEntityName( <span class="arg">Player&amp;</span> player, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the name of an entity a player currently owns </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (302) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetID( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the id of the player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (793) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetMaxPopulationCap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetMaxPopulationCap( <span class="arg">Player&amp;</span> player, <a href="enum_list.htm#CapType">CapType</a> capType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get maximum popcap. Use capType CT_Personnel to get max squad cap or CT_VehicleCap to get max vehicle cap. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (779) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetMaxPopulationCapOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetMaxPopulationCapOverride( <span class="arg">Player&amp;</span> player, <a href="enum_list.htm#CapType">CapType</a> capType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get maximum popcap including any overrides. Use capType CT_Personnel to get max squad cap or CT_VehicleCap to get max vehicle cap. If there are no overrides, the default max pop cap is returned. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (787) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetNumGatheringSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetNumGatheringSquads( <span class="arg">Player&amp;</span> player, <span class="arg">Integer</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of squads currently gathering resources of a given type </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (622) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetNumStrategicPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetNumStrategicPoints( <span class="arg">Player&amp;</span> p )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of strategic points (not objectives) this player owns </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (636) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetNumVictoryPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetNumVictoryPoints( <span class="arg">Player&amp;</span> p )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of strategic objectives this player owns </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (660) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetPopulationPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetPopulationPercentage( <span class="arg">PlayerID</span> playerid, <span class="arg">Integer</span> OPT_captype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the current personnel or vehicle population as a percetange of the current max-cap. The captype is either CT_Personnel or CT_Vehicle. </p>
                <p>If MaxPopulation is 0, returns 1.0 captype is CT_Personnel by default.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (808) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetRace"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetRace( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the race for the given player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (176) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetRaceName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetRaceName( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the name of the race for a given player (always in english) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (160) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetRelationship"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetRelationship( <span class="arg">PlayerID</span> player1, <span class="arg">PlayerID</span> player2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DEPRECATED, use Player_ObserveRelationship instead. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (200) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetResource( <span class="arg">Player&amp;</span> player, <span class="arg">Integer</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the amount of resources a given player has. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (446) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetResourceRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetResourceRate( <span class="arg">Player&amp;</span> player, <span class="arg">Integer</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the amount of resources a given player is getting per second. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (471) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetResources"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetResources( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the list of all the resources a given player has. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (465) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetSlotIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetSlotIndex( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the lobby slot index for this player, starting at one </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (137) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetSquadBPCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetSquadBPCost( <span class="arg">PlayerID</span> pPlayer, <span class="arg">PropertyBagGroup</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the modified cost of the given unit including all modifications added by the given player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (288) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetSquadConcentration"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetSquadConcentration( <span class="arg">PlayerID</span> player, <span class="arg">Boolean</span> OPT_popcapOnly, <span class="arg">Table</span> OPT_includeBlueprints, <span class="arg">Table</span> OPT_excludeBlueprints, <span class="arg">Boolean</span> OPT_bLeastConcentrated, <span class="arg">MarkerID/Table</span> OPT_onlyInThisMarker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds the greatest (or least) concentration of squads owned by a player. </p>
                <p>This function is slow, so don't call it very often</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (1054) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetSquadCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetSquadCount( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of squads a player currently owns </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (282) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetSquads( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a SquadGroupObs containing all the players units. </p>
                <p>This function returns a 'global' squad group with the name '__Player%dSquads', where %d is the player ID.  This means that you should never need to destroy it./n However, if you do destroy it, it will be recreated the next time this function is called.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (512) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetSquadsFromType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetSquadsFromType( <span class="arg">PlayerID</span> player, <span class="arg">String</span> unitType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an SGroup containing all of the players squads of a specific unit_type (as defined by the type_ext on the squad) </p>
                <p>This function returns a new SGroup.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (604) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStartingPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStartingPosition( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the starting position for this player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (131) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelBool( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a boolean value from the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1283) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelEntityTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Entity value from the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1321) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelEnumTableBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelEnumTableBool( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a boolean value from the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1350) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelEnumTableEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelEnumTableEntityTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Entity value from the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1394) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelEnumTableFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelEnumTableFloat( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a float value from the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1364) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelEnumTableInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelEnumTableInt( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer value from the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1357) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelEnumTablePlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelEnumTablePlayerTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Player value from the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1378) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelEnumTableSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelEnumTableSquadTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Squad value from the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1386) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelEnumTableVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelEnumTableVector3f( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Vector3f value from the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1371) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelFloat( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a float value from the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1295) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelInt( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer value from the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1289) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelPlayerTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Player value from the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1307) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelSquadTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Squad value from the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1314) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStateModelVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStateModelVector3f( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Vector3f value from the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1301) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetStrategicPointCaptureProgress"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetStrategicPointCaptureProgress( <span class="arg">PlayerID</span> player, <span class="arg">EntityID</span> strategicPoint )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a value (-1.0 to 1.0) of how close a point is to being controlled by the team of the player provided </p>
                <p>Progress between -1.0 and 0 means an enemy has progress toward owning a point.  Values between 0 and 1.0 represent progress being made toward capture. 1.0 is a team controlled point.  -1.0 is an enemy controlled point.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (733) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetTeam"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetTeam( <span class="arg">Player&amp;</span> p )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the team a player is on </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (183) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetTotalPopulation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetTotalPopulation( <span class="arg">Player</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the toal population including Personnel, Vehicle and Medic </p>
                <p>Directly uses the C++ API Player_GetCurrentPopulation to get the current population for CT_Personnel, CT_Vehicle and CT_Medic.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (828) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetUIColour"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetUIColour( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the UI colour of a player with respect to the local machine. Access with .r .g .b .a. Values are in the range 0-255. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (147) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetUnitCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetUnitCount( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current number of units the player has. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (253) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetUpgradeBPCost"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetUpgradeBPCost( <span class="arg">PlayerID</span> player, <span class="arg">ScarUpgradePBG</span> upgradePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the cost of an upgrade. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1002) </b></td>
            </tr>
          </table>
        </p><a name="Player_GetUpgradeBPCostByResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GetUpgradeBPCostByResource( <span class="arg">PlayerID</span> player, <span class="arg">ScarUpgradePBG</span> upgradePBG, <span class="arg">Integer</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the cost of an upgrade in a specific resource. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (986) </b></td>
            </tr>
          </table>
        </p><a name="Player_GiftResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_GiftResource( <span class="arg">Player&amp;</span> player, <span class="arg">Integer</span> type, <span class="arg">Real</span> amount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the gifted resource amount for a given player A positive resource amount means the player receives the resources A negative resource amount means the player sends the resources Ignores income cap and resource sharing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (411) </b></td>
            </tr>
          </table>
        </p><a name="Player_HasAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_HasAbility( <span class="arg">Player&amp;</span> player, <span class="arg">ScarAbilityPBG</span> pAbilityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests to see if a player has an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1175) </b></td>
            </tr>
          </table>
        </p><a name="Player_HasBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_HasBuilding( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> entitytypes/unit_types )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if this player owns any buildings listed in the table. </p>
                <p>This only looks at completed buildings - use Player_HasBuildingUnderConstruction to see if the player is building something</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (364) </b></td>
            </tr>
          </table>
        </p><a name="Player_HasBuildingsExcept"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_HasBuildingsExcept( <span class="arg">PlayerID</span> playerId, <span class="arg">Integer</span> exceptions/unit_types )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if this player owns any buildings. (with exclusions). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (372) </b></td>
            </tr>
          </table>
        </p><a name="Player_HasBuildingUnderConstruction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_HasBuildingUnderConstruction( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> entitytypes/unit_types )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if this player owns any buildings listed in the table currently under construction. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (379) </b></td>
            </tr>
          </table>
        </p><a name="Player_HasCapturingSquadNearStrategicPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_HasCapturingSquadNearStrategicPoint( <span class="arg">PlayerID</span> player, <span class="arg">EntityID</span> strategicPoint )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given player has units that are able to capture in the capturable area of the given strategic point </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (685) </b></td>
            </tr>
          </table>
        </p><a name="Player_HasEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_HasEntity( <span class="arg">Player&amp;</span> player, <span class="arg">ScarEntityPBG</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests to see if the player has any entities with the specified PBG </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1192) </b></td>
            </tr>
          </table>
        </p><a name="Player_HasMapEntryPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_HasMapEntryPosition( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether a player has a map entry position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1097) </b></td>
            </tr>
          </table>
        </p><a name="Player_HasUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_HasUpgrade( <span class="arg">PlayerID</span> pPlayer, <span class="arg">ScarUpgradePBG</span> upgradePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return true if the squad has purchased the specified upgrade. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (830) </b></td>
            </tr>
          </table>
        </p><a name="Player_IsAbilityActive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_IsAbilityActive( <span class="arg">Player&amp;</span> player, <span class="arg">ScarAbilityPBG</span> abilityPBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true or false, depending on whether the passed in player ability is active on the player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (817) </b></td>
            </tr>
          </table>
        </p><a name="Player_IsAlive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_IsAlive( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if player is still alive and false if player is dead.  Will error if playerIdx is an invalid index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (241) </b></td>
            </tr>
          </table>
        </p><a name="Player_IsAllied"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_IsAllied( <span class="arg">PlayerID</span> playerId1, <span class="arg">PlayerID</span> playerId2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the players are allied and false if they are not. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (353) </b></td>
            </tr>
          </table>
        </p><a name="Player_IsHuman"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_IsHuman( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether a player is human controlled (local or remote), not dead, and not replaced by an AI </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1125) </b></td>
            </tr>
          </table>
        </p><a name="Player_IsSurrendered"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_IsSurrendered( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if player has surrendered and false if not.  Will error if playerIdx is an invalid index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (247) </b></td>
            </tr>
          </table>
        </p><a name="Player_IsValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_IsValid( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if id corresponds to a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1564) </b></td>
            </tr>
          </table>
        </p><a name="Player_NumUpgradeComplete"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_NumUpgradeComplete( <span class="arg">Player&amp;</span> player, <span class="arg">ScarUpgradePBG</span> upgradePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of upgrades that this player has. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (807) </b></td>
            </tr>
          </table>
        </p><a name="Player_ObserveRelationship"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_ObserveRelationship( <span class="arg">PlayerID</span> observer, <span class="arg">PlayerID</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the relationship that observer has to target. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (207) </b></td>
            </tr>
          </table>
        </p><a name="Player_ObserveReputation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_ObserveReputation( <span class="arg">PlayerID</span> observer, <span class="arg">PlayerID</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the reputation that observer has to target. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (214) </b></td>
            </tr>
          </table>
        </p><a name="Player_OwnsEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_OwnsEGroup( <span class="arg">Player</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> OPT_all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a given player owns ALL or ANY items in a group </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (872) </b></td>
            </tr>
          </table>
        </p><a name="Player_OwnsEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_OwnsEntity( <span class="arg">PlayerID</span> playerid, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a given player owns an entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (890) </b></td>
            </tr>
          </table>
        </p><a name="Player_OwnsSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_OwnsSGroup( <span class="arg">Player</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> OPT_all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a given player owns ALL or ANY items in a group </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (908) </b></td>
            </tr>
          </table>
        </p><a name="Player_OwnsSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_OwnsSquad( <span class="arg">PlayerID</span> playerid, <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a given player owns a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (926) </b></td>
            </tr>
          </table>
        </p><a name="Player_RemoveAbilityLockoutZone"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_RemoveAbilityLockoutZone( <span class="arg">Player&amp;</span> player, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a marker that was previously a lockout zone. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (951) </b></td>
            </tr>
          </table>
        </p><a name="Player_RemoveAllUpgrades"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_RemoveAllUpgrades( <span class="arg">Player&amp;</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all upgrade from a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1163) </b></td>
            </tr>
          </table>
        </p><a name="Player_RemoveUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_RemoveUpgrade( <span class="arg">Player&amp;</span> player, <span class="arg">ScarUpgradePBG</span> upgrade )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an upgrade from a player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1157) </b></td>
            </tr>
          </table>
        </p><a name="Player_ResetAbilityCooldowns"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_ResetAbilityCooldowns( <span class="arg">Player&amp;</span> player, <span class="arg">ScarAbilityPBG</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset the cooldown of an ability on every unit a player has, and the player itself. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1198) </b></td>
            </tr>
          </table>
        </p><a name="Player_ResetResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_ResetResource( <span class="arg">Player&amp;</span> player, <span class="arg">Integer</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reset the resource amount for a given player to zero. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (313) </b></td>
            </tr>
          </table>
        </p><a name="Player_RestrictAddOnList"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_RestrictAddOnList( <span class="arg">PlayerID</span> playerid, <span class="arg">Table</span> addonlist )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restrict a list of addons. </p>
                <p>list should contain an array of strings to restrict.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (840) </b></td>
            </tr>
          </table>
        </p><a name="Player_RestrictBuildingList"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_RestrictBuildingList( <span class="arg">PlayerID</span> playerid, <span class="arg">Table</span> blueprintlist )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restrict a list of buildings. </p>
                <p>list should contain an array of strings to restrict.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (851) </b></td>
            </tr>
          </table>
        </p><a name="Player_RestrictResearchList"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_RestrictResearchList( <span class="arg">Player</span> playerid, <span class="arg">String</span> list )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restrict a list of research items. </p>
                <p>list should contain an array of strings to restrict.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (862) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetAbilityAvailability"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetAbilityAvailability( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> bp, <span class="arg">Integer</span> availability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the availability of an ability. Availability can be either ITEM_LOCKED, ITEM_UNLOCKED, ITEM_REMOVED or ITEM_DEFAULT </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (1015) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetAllCommandAvailabilityInternal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetAllCommandAvailabilityInternal( <span class="arg">Player&amp;</span> player, <a href="enum_list.htm#Availability">Availability</a> availability, <span class="arg">String</span> reason )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets availability of ALL entity, squad and player commands. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (910) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetCommandAvailability"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetCommandAvailability( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> command, <span class="arg">Integer</span> availability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the availability of entity, squad and player commands. Availability can be either ITEM_LOCKED, ITEM_UNLOCKED, ITEM_REMOVED or ITEM_DEFAULT </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (1033) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetConstructionMenuAvailability"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetConstructionMenuAvailability( <span class="arg">PlayerID</span> player, <span class="arg">String</span> menuname, <span class="arg">Integer</span> availability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the availability of a construction menu. Availability can be either ITEM_LOCKED, ITEM_UNLOCKED, ITEM_REMOVED or ITEM_DEFAULT </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (1039) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetDefaultSquadMoodMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetDefaultSquadMoodMode( <span class="arg">Player&amp;</span> player, <span class="arg">SquadCombatBehaviourMoodMode</span> mood )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set default squad mood mode which can be overrided by squad level mood mode settings </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (872) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetEntityProductionAvailability"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetEntityProductionAvailability( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> bp, <span class="arg">Integer</span> availability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the availability of an entity production item. Availability can be either ITEM_LOCKED, ITEM_UNLOCKED, ITEM_REMOVED or ITEM_DEFAULT </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (1027) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetMaxCapPopulation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetMaxCapPopulation( <span class="arg">PlayerID</span> playerid, <span class="arg">Integer</span> captype, <span class="arg">Integer</span> newcap )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the current personnel or vehicle max-cap for a player. The captype is either CT_Personnel or CT_Vehicle (you can't adjust Medic caps just yet). </p>
                <p>Note that any modifiers that adjust the current max cap will be applied on top of this.  Also note, this is only adjusting the max cap, not the current cap, you will have to call Player_SetMaxPopulation to adjust the current max population to do this.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (769) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetMaxPopulation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetMaxPopulation( <span class="arg">PlayerID</span> playerid, <span class="arg">Integer</span> captype, <span class="arg">Integer</span> newcap )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the current personnel or vehicle cap for a player. The captype is either CT_Personnel or CT_Vehicle (you can't adjust Medic caps just yet). </p>
                <p>Note that any modifiers that adjust the current cap will be applied on top of this.  Also note, the current cap cannot go higher than the max cap.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (730) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetPopCapOverride"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetPopCapOverride( <span class="arg">Player&amp;</span> player, <span class="arg">Real</span> personnel )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a pop cap override that ignores any modifiers. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (969) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetRelationship"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetRelationship( <span class="arg">PlayerID</span> observer, <span class="arg">PlayerID</span> target, <span class="arg">Relation</span> relationship )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the relationship that observer has to target. If the relationship does not match the current reputation, the reputation will be changed to match it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (222) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetReputation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetReputation( <span class="arg">PlayerID</span> observer, <span class="arg">PlayerID</span> target, <span class="arg">BaseType</span> reputation )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the reputation that observer has to target. If the reputation does not match the current relationship, the relationship will be changed to match it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (233) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetResource( <span class="arg">Player&amp;</span> player, <span class="arg">Integer</span> type, <span class="arg">Real</span> amt )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the resource amount for a given player.  Ignores income cap and resource sharing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (362) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetResourceInternal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetResourceInternal( <span class="arg">Player&amp;</span> player, <span class="arg">Integer</span> type, <span class="arg">Real</span> amt, <span class="arg">AddResourceReason</span> reason )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the resource amount for a given player.  Ignores income cap and resource sharing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (341) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetResources"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetResources( <span class="arg">Player&amp;</span> player, <span class="arg">ResourceAmount</span> resourceAmount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set all the resource amount for a given player.  Ignores income cap and resource sharing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (399) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetSquadProductionAvailability"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetSquadProductionAvailability( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> bp, <span class="arg">Integer</span> availability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the availability of a squad production item. Availability can be either ITEM_LOCKED, ITEM_UNLOCKED, ITEM_REMOVED or ITEM_DEFAULT </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (1021) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelBool( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a boolean value in the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1420) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelEntityTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">EntityID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an Entity TargetHandle value in the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1456) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelEnumTableBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelEnumTableBool( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a boolean value in the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1492) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelEnumTableEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelEnumTableEntityTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">EntityID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an Entity TargetHandle value in the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1550) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelEnumTableFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelEnumTableFloat( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a float value in the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1506) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelEnumTableInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelEnumTableInt( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Integer</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an integer value in the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1499) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelEnumTablePlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelEnumTablePlayerTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">PlayerID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Player TargetHandle value in the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1528) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelEnumTableSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelEnumTableSquadTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">SquadID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Squad TargetHandle value in the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1539) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelEnumTableVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelEnumTableVector3f( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Position</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Vector3f value in the player's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1517) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelFloat( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a float value in the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1432) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelInt( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Integer</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an integer value in the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1426) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelPlayerTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">PlayerID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Player TargetHandle value in the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1444) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelSquadTarget( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">SquadID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Squad TargetHandle value in the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1450) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetStateModelVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetStateModelVector3f( <span class="arg">Player&amp;</span> player, <span class="arg">String</span> key, <span class="arg">Position</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Vector3f value in the Player's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1438) </b></td>
            </tr>
          </table>
        </p><a name="Player_SetUpgradeAvailability"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_SetUpgradeAvailability( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> bp, <span class="arg">Integer</span> availability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the availability of an upgrade. Availability can be either ITEM_LOCKED, ITEM_UNLOCKED, ITEM_REMOVED or ITEM_DEFAULT </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (1009) </b></td>
            </tr>
          </table>
        </p><a name="Player_StopAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_StopAbility( <span class="arg">PlayerID</span> player, <span class="arg">ScarAbilityPBG</span> ability, <span class="arg">Boolean</span> bIsEarlyExit )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Abruptly stops an active ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (1183) </b></td>
            </tr>
          </table>
        </p><a name="Player_StopEarningActionPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Player_StopEarningActionPoints( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prevents a player from earning any action points (and by extention, command points) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\player.scar] (998) </b></td>
            </tr>
          </table>
        </p><a name="Team_GetRelationship"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Team_GetRelationship( <span class="arg">Integer</span> team1, <span class="arg">Integer</span> team2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the relationship between 2 teams. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaPlayer.cpp] (194) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Prefab System"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Prefab System</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Prefab_ApplyDefaults"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_ApplyDefaults( <span class="arg">String</span> instance_data, <span class="arg">Table</span> prefab_schema )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Applies the defaults listed in the prefab schema to the instance data. Any items NOT included explicitly in the instance data will have default values pulled from the schema. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (301) </b></td>
            </tr>
          </table>
        </p><a name="Prefab_DoAction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_DoAction( <span class="arg">String</span> instance_data, <span class="arg">String</span> actionName, <span class="arg">Var</span> OPT_param1, <span class="arg">Var</span> OPT_param2... )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calls an action function with a given name on an instance, making sure it calls the right version for the type of Prefab. Instance can be a string, this will convert it. </p>
                <p>Example: Calling the "Trigger" action on an instance that is a PlaneCrash prefab will look for a function called "PlaneCrash_Trigger"</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (434) </b></td>
            </tr>
          </table>
        </p><a name="Prefab_ForcePostInit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_ForcePostInit(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finalize the initialization of any prefab instances that have been run through Prefab_Init(). This is automatically called one frame after a prefab is initialized, but you can force it early if necessary. </p>
                <p>If you are creating prefabs and using them in the same frame, call this function once, after all the Prefab_Inits, but before you start using them. This will force the post-initialization to occur early.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (268) </b></td>
            </tr>
          </table>
        </p><a name="Prefab_GetAllOfType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_GetAllOfType( <span class="arg">String</span> instance_data, <span class="arg">Table</span> prefab_schema )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of all current prefabs matching the instance type </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (312) </b></td>
            </tr>
          </table>
        </p><a name="Prefab_GetInstance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_GetInstance( <span class="arg">String</span> instance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the instance data for a given instance, specified by a number of methods. </p>
                <p>This normalizes your instance data. You can pass in the instance name as a string, a data table with an instance subtable (i.e. the input params from an event function) or a real instance data table, and it normalizes the format and returns you the instance data table.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (336) </b></td>
            </tr>
          </table>
        </p><a name="Prefab_Init"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_Init( <span class="arg">Table</span> instance_data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Initialize a specific prefab instance. In many cases, this is all you need to do (see the documentation for the specific prefab for details) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (209) </b></td>
            </tr>
          </table>
        </p><a name="Prefab_IsValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_IsValid( <span class="arg">String</span> instance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns if a String is a valid </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (361) </b></td>
            </tr>
          </table>
        </p><a name="Prefab_Reset"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_Reset( <span class="arg">String</span> instance_data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stop and restart a prefab instance, pulling a fresh set of the instance data from the WB-exported prefabs. This is meant for testing and debug purposes, rather than use in mission scripts. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (402) </b></td>
            </tr>
          </table>
        </p><a name="Prefab_Stop"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_Stop( <span class="arg">String</span> instance_data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stops a prefab instance from continuing to run. </p>
                <p>If the prefab has a prefabName_Stop() function, that will be called. Also, all events with the instance as the data parameter will be removed.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (378) </b></td>
            </tr>
          </table>
        </p><a name="Prefab_Trigger"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prefab_Trigger( <span class="arg">String</span> instance_data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Triggers the specified prefab </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (499) </b></td>
            </tr>
          </table>
        </p><a name="PrefabHelper_StandardTriggerSystem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PrefabHelper_StandardTriggerSystem( <span class="arg">String</span> instance_data, <span class="arg">String</span> action_name, <span class="arg">Table</span> trigger_parameters )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add this helper function to your prefab's Init function to cover standard trigger zone functionality. </p>
                <p>It will call a Trigger function in your prefab when appropriate. Your schema needs to include the standard elements: trigger_enable, ignore_planes, trigger_player, trigger_zone and delay</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\prefabs.scar] (763) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Presentation"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Presentation</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Actor_PlaySpeech"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Actor_PlaySpeech( <span class="arg">ActorTable</span> actor, <span class="arg">Integer</span> locID, <span class="arg">SGroupID</span> OPT_speechbubble, <span class="arg">String</span> OPT_audioCtrlEvent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a speech event for a given actor WITH a portrait and subtitle </p>
                <p>If the speech file is not available, a placeholder time will be calculated for the message using the number of words and the message will be displayed for that length of time.\n speechbubble: Who a speech bubble should appear over ingame. Can be a squadID or an SGroup (where it appears over the first guy in the group) \n It can also be a table in the format {sgroup = sg_orkboys, closest_to = sg_gorgutz} where it finds the squad in the group closest to the reference point. It can also be in the format {sbp = SBP.ORKS.ORK_BOY, closest_to = mkr_orkIdol} to find the closest unit of the specified type, and you can also add a player entry to that table to specify which player (default is the local player)\n You can also specify just an SBP, in which case it will play on the first SBP found owned - use this for elite units who may or may not be on the map audioCtrlEvent:  is a wwise event name. This parameter is used to apply an effect on the line of speech. Ex. "Comm_on" plays speech through a comm effect. Work with an audio designer to get more effects.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\speech.scar] (17) </b></td>
            </tr>
          </table>
        </p><a name="Actor_PlaySpeechWithoutPortrait"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Actor_PlaySpeechWithoutPortrait( <span class="arg">ActorTable</span> actor, <span class="arg">Integer</span> locID, <span class="arg">SGroupID</span> OPT_speechbubble, <span class="arg">String</span> OPT_audioCtrlEvent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a speech event for a given actor WITHOUT a portrait or subtitle. See Actor_PlaySpeech for more details </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\speech.scar] (32) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Proximity"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Proximity</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Prox_AreEntitiesNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_AreEntitiesNearMarker( <span class="arg">EGroupID</span> egroup, <span class="arg">MarkerID/Position/SectorID</span> position, <span class="arg">Boolean</span> all, <span class="arg">Real</span> OPT_range )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL entities from a group are in range of a given position, marker, or territory sector. </p>
                <p>You MUST specify a range if you are using a position rather than a marker. Markers with proximity type rectangle will use circular proximity check if custom range is supplied\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (366) </b></td>
            </tr>
          </table>
        </p><a name="Prox_ArePlayerEntitiesNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_ArePlayerEntitiesNearMarker( <span class="arg">PlayerID</span> player, <span class="arg">MarkerID/Position/SectorID</span> position, <span class="arg">Boolean</span> all, <span class="arg">Real</span> OPT_range, <span class="arg">EBP/Table</span> OPT_filterlist, <span class="arg">Integer</span> OPT_filtertype, <span class="arg">Boolean</span> OPT_ignore_camouflage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of a player's entities are in range of a given position, marker, or territory sector. THIS FUNCTION IS VERY SLOW. DO NOT USE THIS UNLESS ABSOLUTELY NECESSARY. </p>
                <p>You MUST specify a range if you are using a position rather than a marker.\n Markers with proximity type rectangle will use circular proximity check if custom range is supplied\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (466) </b></td>
            </tr>
          </table>
        </p><a name="Prox_ArePlayerMembersNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_ArePlayerMembersNearMarker( <span class="arg">PlayerID</span> player, <span class="arg">MarkerID/Position/SectorID</span> position, <span class="arg">Boolean</span> all, <span class="arg">Real</span> OPT_range, <span class="arg">SBP/Table</span> OPT_filterlist, <span class="arg">Integer</span> OPT_filtertype, <span class="arg">Boolean</span> OPT_ignore_camouflage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of a player's members (i.e. individual guys, not squads as a whole) are in range of a given position, marker, or territory sector. DO NOT USE THIS FUNCTION UNLESS YOU ABSOLUTELY HAVE TO!! </p>
                <p>You MUST specify a range if you are using a position rather than a marker.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (517) </b></td>
            </tr>
          </table>
        </p><a name="Prox_ArePlayersNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_ArePlayersNearMarker( <span class="arg">PlayerID</span> player, <span class="arg">MarkerID/Position/SectorID</span> position, <span class="arg">Boolean</span> all, <span class="arg">Real</span> OPT_range, <span class="arg">SBP/Table</span> OPT_filterlist, <span class="arg">Integer</span> OPT_filtertype, <span class="arg">Boolean</span> OPT_ignore_camouflage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of a player's squads are in range of a given position, marker, or territory sector. THIS FUNCTION IS VERY SLOW. DO NOT USE THIS UNLESS ABSOLUTELY NECESSARY. </p>
                <p>You MUST specify a range if you are using a position rather than a marker.\n Markers with proximity type rectangle will use circular proximity check if custom range is supplied\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (432) </b></td>
            </tr>
          </table>
        </p><a name="Prox_AreSquadMembersNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_AreSquadMembersNearMarker( <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID/Position/SectorID</span> position, <span class="arg">Boolean</span> all, <span class="arg">Real</span> OPT_range )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL squad members (i.e. individual guys, not squads as a whole) from a group are in range of a given position, marker, or territory sector. DO NOT USE THIS FUNCTION UNLESS YOU ABSOLUTELY HAVE TO!! </p>
                <p>You MUST specify a range if you are using a position rather than a marker.\n Markers with proximity type rectangle will use circular proximity check if custom range is supplied\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (283) </b></td>
            </tr>
          </table>
        </p><a name="Prox_AreSquadsNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_AreSquadsNearMarker( <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID/Position/SectorID</span> position, <span class="arg">Boolean</span> all, <span class="arg">Real</span> OPT_range )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL squads from a group are in range of a given position, marker, or territory sector </p>
                <p>You MUST specify a range if you are using a position rather than a marker.\n Markers with proximity type rectangle will use circular proximity check if custom range is supplied\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (251) </b></td>
            </tr>
          </table>
        </p><a name="Prox_AreTeamsNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_AreTeamsNearMarker( <span class="arg">TeamID</span> team, <span class="arg">MarkerID/Position/SectorID</span> position, <span class="arg">Boolean</span> all, <span class="arg">Real</span> OPT_range, <span class="arg">SBP/Table</span> OPT_filterlist, <span class="arg">Integer</span> OPT_filtertype, <span class="arg">Boolean</span> OPT_ignore_camouflage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of a teams's squads are in range of a given position, marker, or territory sector. THIS FUNCTION IS VERY SLOW. DO NOT USE THIS UNLESS ABSOLUTELY NECESSARY. </p>
                <p>You MUST specify a range if you are using a position rather than a marker.\n Markers with proximity type rectangle will use circular proximity check if custom range is supplied\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (500) </b></td>
            </tr>
          </table>
        </p><a name="Prox_EGroupEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_EGroupEGroup( <span class="arg">EGroupID</span> egroup1, <span class="arg">EGroupID</span> egroup2, <span class="arg">ProxType</span> checktype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the distance between two entity groups. use checktype PROX_SHORTEST, PROX_LONGEST, or PROX_CENTER. </p>
                <p>If check is PROX_SHORTEST this will return the shortest distance between the two groups.\n If check is PROX_LONGEST this will return the longest distance between the two groups.\n If check is PROX_CENTER this will return the distance between the two groups centers.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (157) </b></td>
            </tr>
          </table>
        </p><a name="Prox_EGroupSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_EGroupSGroup( <span class="arg">EGroupID</span> egroup1, <span class="arg">SGroupID</span> sgroup2, <span class="arg">ProxType</span> checktype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the distance between an entity group and a squad group.  use checktype PROX_SHORTEST, PROX_LONGEST, or PROX_CENTER. </p>
                <p>If check is PROX_SHORTEST this will return the shortest distance between the two groups.\n If check is PROX_LONGEST this will return the longest distance between the two groups.\n If check is PROX_CENTER this will return the distance between the two groups centers.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (180) </b></td>
            </tr>
          </table>
        </p><a name="Prox_EntitiesInProximityOfEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_EntitiesInProximityOfEntities( <span class="arg">EGroupID</span> egroup1, <span class="arg">EGroupID</span> egroup2, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY entities are in proximity of a given entity group. </p>
                <p>Set "all" to true to check that ALL entities are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (762) </b></td>
            </tr>
          </table>
        </p><a name="Prox_GetRandomPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_GetRandomPosition( <span class="arg">Object</span> item, <span class="arg">Integer</span> radius, <span class="arg">Integer</span> minimum )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Takes something (Entity, Squad, SGroup, EGroup, Position) in, then returns a random position </p>
                <p>Minimum is the distance from the origin point that is guaranteed to have a return greater than Minimum is ignored if it is greater than the radius</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (776) </b></td>
            </tr>
          </table>
        </p><a name="Prox_MarkerEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_MarkerEGroup( <span class="arg">MarkerID</span> marker, <span class="arg">EGroupID</span> egroup, <span class="arg">ProxType</span> checktype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the distance between a marker and an entity group.  use checktype PROX_SHORTEST, PROX_LONGEST, or PROX_CENTER. </p>
                <p>If check is PROX_SHORTEST this will return the shortest distance between the two groups.\n If check is PROX_LONGEST this will return the longest distance between the two groups.\n If check is PROX_CENTER this will return the distance between the two groups centers.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (203) </b></td>
            </tr>
          </table>
        </p><a name="Prox_MarkerSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_MarkerSGroup( <span class="arg">MarkerID</span> marker, <span class="arg">SGroupID</span> sgroup, <span class="arg">ProxType</span> checktype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the distance between a marker and a squad group.  use checktype PROX_SHORTEST, PROX_LONGEST, or PROX_CENTER. </p>
                <p>If check is PROX_SHORTEST this will return the shortest distance between the two groups.\n If check is PROX_LONGEST this will return the longest distance between the two groups.\n If check is PROX_CENTER this will return the distance between the two groups centers.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (226) </b></td>
            </tr>
          </table>
        </p><a name="Prox_PlayerEntitiesInProximityOfEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_PlayerEntitiesInProximityOfEntities( <span class="arg">PlayerID</span> playerid, <span class="arg">EGroupID</span> egroup, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all, <span class="arg">EntityID</span> exclude )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY players squads are in proximity of a given entity group. </p>
                <p>Set "all" to true to check that ALL entities are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (723) </b></td>
            </tr>
          </table>
        </p><a name="Prox_PlayerEntitiesInProximityOfPlayerSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_PlayerEntitiesInProximityOfPlayerSquads( <span class="arg">PlayerID</span> playerentities, <span class="arg">PlayerID</span> playersquads, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY players entities are in proximity of a given squad group. </p>
                <p>Set "all" to true to check that ALL entities are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (710) </b></td>
            </tr>
          </table>
        </p><a name="Prox_PlayerEntitiesInProximityOfSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_PlayerEntitiesInProximityOfSquads( <span class="arg">PlayerID</span> playerid, <span class="arg">SGroupID</span> sgroup, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY players entities are in proximity of a given squad group. </p>
                <p>Set "all" to true to check that ALL entities are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (671) </b></td>
            </tr>
          </table>
        </p><a name="Prox_PlayerSquadsInProximityOfEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_PlayerSquadsInProximityOfEntities( <span class="arg">PlayerID</span> playerid, <span class="arg">EGroupID</span> egroup, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all, <span class="arg">SBP/Table</span> filterlist, <span class="arg">Integer</span> filtertype, <span class="arg">Boolean</span> ignore_camouflage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY players squads are in proximity of a given entity group. </p>
                <p>Set "all" to true to check that ALL squads are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (642) </b></td>
            </tr>
          </table>
        </p><a name="Prox_PlayerSquadsInProximityOfPlayerEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_PlayerSquadsInProximityOfPlayerEntities( <span class="arg">PlayerID</span> playersquads, <span class="arg">PlayerID</span> playerentities, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY players squads are in proximity of a given players entities. </p>
                <p>Set "all" to true to check that ALL squads are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (697) </b></td>
            </tr>
          </table>
        </p><a name="Prox_PlayerSquadsInProximityOfPlayerSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_PlayerSquadsInProximityOfPlayerSquads( <span class="arg">PlayerID</span> playerid1, <span class="arg">PlayerID</span> playerid2, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY players squads are in proximity of a given players squads. </p>
                <p>Set "all" to true to check that ALL squads are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (684) </b></td>
            </tr>
          </table>
        </p><a name="Prox_PlayerSquadsInProximityOfSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_PlayerSquadsInProximityOfSquads( <span class="arg">PlayerID</span> playerid, <span class="arg">SGroupID</span> sgroup, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all, <span class="arg">SquadID</span> exclude, <span class="arg">SBP/Table</span> filterlist, <span class="arg">Integer</span> filtertype, <span class="arg">Boolean</span> ignore_camouflage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY players squads are in proximity of a given squad group. </p>
                <p>Set "all" to true to check that ALL squads are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (615) </b></td>
            </tr>
          </table>
        </p><a name="Prox_SGroupSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_SGroupSGroup( <span class="arg">SGroupID</span> sgroup1, <span class="arg">SGroupID</span> sgroup2, <span class="arg">ProxType</span> checktype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the distance between two squad groups. use checktype PROX_SHORTEST, PROX_LONGEST, or PROX_CENTER. </p>
                <p>If check is PROX_SHORTEST this will return the shortest distance between the two groups.\n If check is PROX_LONGEST this will return the longest distance between the two groups.\n If check is PROX_CENTER this will return the distance between the two groups centers.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (134) </b></td>
            </tr>
          </table>
        </p><a name="Prox_SquadsInProximityOfEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_SquadsInProximityOfEntities( <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> egroup, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY squads are in proximity of a given entity group. </p>
                <p>Set "all" to true to check that ALL squads are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (749) </b></td>
            </tr>
          </table>
        </p><a name="Prox_SquadsInProximityOfSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Prox_SquadsInProximityOfSquads( <span class="arg">SGroupID</span> sgroup1, <span class="arg">SGroupID</span> sgroup2, <span class="arg">Real</span> proximity, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ALL or ANY squads are in proximity of a given squad group. </p>
                <p>Set "all" to true to check that ALL squads are in proximity, or set "all" to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\proximity.scar] (736) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;ResourceLoading"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;ResourceLoading</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Decal_Create"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Decal_Create( <span class="arg">String</span> decalName, <span class="arg">Position</span> position, <span class="arg">Real</span> xScale, <span class="arg">Real</span> yScale, <span class="arg">Real</span> zScale, <span class="arg">Real</span> rotationDegrees, <span class="arg">Integer</span> r, <span class="arg">Integer</span> g, <span class="arg">Integer</span> b, <span class="arg">Integer</span> a )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a decal to the terrain. Returns a unique decal id allow for future removal via Decal_Destroy </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (340) </b></td>
            </tr>
          </table>
        </p><a name="Decal_Destroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Decal_Destroy( <span class="arg">Integer</span> decalID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroy a decal by unique id </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (361) </b></td>
            </tr>
          </table>
        </p><a name="Decal_GetInvalidID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Decal_GetInvalidID(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the Decal ID that represents an invalid decal (useful to check if creation failed) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (324) </b></td>
            </tr>
          </table>
        </p><a name="Entity_Precache"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Entity_Precache( <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Integer</span> skinItemDefinitionID, <span class="arg">PlayerID</span> player, <span class="arg">String</span> resourceContainerCacheName, <span class="arg">String</span> source, <span class="arg">String</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Precache entity resources and listen for event GE_EntityPrecached that it is done </p>
                <p>callback example: Rule_AddGlobalEvent(EntityPrecacheComplete, GE_EntityPrecached) Params: ebp - entity blueprint skinID - this is the server item id for a skin, it will precache and equip it player - the player that we want to precache the entity or squad for cacheName - name of cache where resource will be loaded into source - helps identify who requested the precaching id - id to table of data that will be used once entity/squad is loaded</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (296) </b></td>
            </tr>
          </table>
        </p><a name="ResourceContainer_ClearCache"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ResourceContainer_ClearCache( <span class="arg">String</span> cacheName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Cleanup resources in cache. Only for debug purposes, not in RTM. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (134) </b></td>
            </tr>
          </table>
        </p><a name="ResourceContainer_CreateCache"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ResourceContainer_CreateCache( <span class="arg">String</span> cacheName, <span class="arg">Integer</span> cacheSize )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a cache to load resources into giving its name and number of resources to hold </p>
                <p>Once cache is full, the oldest resource will get removed and clean itself up</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (127) </b></td>
            </tr>
          </table>
        </p><a name="ResourceContainer_LogRefs"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ResourceContainer_LogRefs(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Log resource references to log. Only for debug purposes, not in RTM. </p>
                <p>dumps inventory information to ResourceContainerLog file</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (141) </b></td>
            </tr>
          </table>
        </p><a name="Splat_Create"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Splat_Create( <span class="arg">String</span> splatName, <span class="arg">Position</span> position, <span class="arg">Real</span> xScale, <span class="arg">Real</span> zScale, <span class="arg">Real</span> rotationDegrees, <span class="arg">Integer</span> r, <span class="arg">Integer</span> g, <span class="arg">Integer</span> b, <span class="arg">Integer</span> a, <span class="arg">Boolean</span> mirrorX, <span class="arg">Boolean</span> mirrorZ )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a splat to the terrain. Returns a unique decal id allow for future removal via Splat_Destroy </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (385) </b></td>
            </tr>
          </table>
        </p><a name="Splat_Destroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Splat_Destroy( <span class="arg">TerrainSplatObject*</span> handle )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroy a splat by unique id </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (407) </b></td>
            </tr>
          </table>
        </p><a name="Splat_GetInvalidID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Splat_GetInvalidID(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the Splat ID that represents an invalid splat (useful to check if creation failed) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (368) </b></td>
            </tr>
          </table>
        </p><a name="Squad_Precache"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_Precache( <span class="arg">ScarSquadPBG</span> sbp, <span class="arg">Integer</span> skinItemDefinitionID, <span class="arg">PlayerID</span> player, <span class="arg">String</span> resourceContainerCacheName, <span class="arg">String</span> source, <span class="arg">String</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Precache squad resources and listen for event GE_EntityPrecached that it is done </p>
                <p>callback example: Rule_AddGlobalEvent(EntityPrecacheComplete, GE_SquadPrecached) Params: sbp - squad blueprint skinID - this is the server item id for a skin, it will precache and equip it player - the player that we want to precache the entity or squad for cacheName - name of cache where resource will be loaded into source - helps identify who requested the precaching id - id to table of data that will be used once entity/squad is loaded</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (317) </b></td>
            </tr>
          </table>
        </p><a name="Terrain_LoadHeightMap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Terrain_LoadHeightMap(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Load the saved terrain height map. This will restore the state of the terrain height map to </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (439) </b></td>
            </tr>
          </table>
        </p><a name="Terrain_SaveHeightMap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Terrain_SaveHeightMap(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Save the current terrain height map. It can be restored to that state by using Terrain_LoadHeightMap. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (432) </b></td>
            </tr>
          </table>
        </p><a name="TerrainHighlight_Hide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TerrainHighlight_Hide(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hide metadata layer overlay on terrain </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (424) </b></td>
            </tr>
          </table>
        </p><a name="TerrainHighlight_Show"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 TerrainHighlight_Show( <span class="arg">String</span> metadataLayerName, <span class="arg">Real</span> opacity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Display metadata layer on terrain. Replaces previously displayed terrain highlight </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\scenario\LuaLibPresentation.cpp] (414) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;RuleSystem"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;RuleSystem</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Rule_Add"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_Add( <span class="arg">LuaFunction</span> f , <span class="arg">Table</span> OPT_data, <span class="arg">EGroupID</span> OPT_group )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a rule to be executed every frame. </p>
                <p>Returns the ID of the rule just added.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (25) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddEGroupEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddEGroupEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> eventtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a rule to be executed when the event of 'eventType' has happened on entities in the 'egroup' </p>
                <p>Event types are: GE_EntityKilled, GE_EntityParadropComplete, GE_EntityCommandIssued, GE_ProjectileFired, GE_AbilityExecuted, GE_SpawnActionComplete</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (144) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddEntityEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddEntityEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> eventtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a rule to be executed when the event of 'eventType' has happened on the 'entity' </p>
                <p>Event types are: GE_EntityKilled, GE_EntityParadropComplete, GE_EntityCommandIssued, GE_ProjectileFired, GE_AbilityExecuted, GE_SpawnActionComplete</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (132) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddEventFilter_EntityBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddEventFilter_EntityBlueprint( <span class="arg">LuaFunction</span> rule, <span class="arg">RuleFilterContext</span> context, <span class="arg">RuleFilterOperator</span> op, <span class="arg">Array</span> includeTypes, <span class="arg">Array</span> excludeTypes )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a filter to the given rule that will cause the event to only be invoked if - The blueprint of the entity pointed to by context is in includeTypes and none in excludeTypes. </p>
                <p>Valid contexts are dependent on the event this filter is applied to. When multiple filters exist op defines how the result of the previous filter is combined with this filter. Blueprint can be either a PBG or the name of a type (where in it acts the same as Rule_AddEventFilter_EntityType).</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (204) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddEventFilter_EntityPlayerOwner"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddEventFilter_EntityPlayerOwner( <span class="arg">LuaFunction</span> rule, <span class="arg">RuleFilterContext</span> context, <span class="arg">RuleFilterOperator</span> op, <span class="arg">Array</span> includeTypes, <span class="arg">Array</span> excludeTypes )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a filter to the given rule that will cause the event to only be invoked if - The type of the entity pointed to by context is owned by a player that is in includeTypes and none in excludeTypes. </p>
                <p>Valid contexts are dependent on the event this filter is applied to. When multiple filters exist op defines how the result of the previous filter is combined with this filter.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (196) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddEventFilter_EntityType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddEventFilter_EntityType( <span class="arg">LuaFunction</span> rule, <span class="arg">RuleFilterContext</span> context, <span class="arg">RuleFilterOperator</span> op, <span class="arg">Array</span> includeTypes, <span class="arg">Array</span> excludeTypes )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a filter to the given rule that will cause the event to only be invoked if - The type of the entity pointed to by context is in includeTypes and not in excludeTypes. </p>
                <p>Valid contexts are dependent on the event this filter is applied to. When multiple filters exist op defines how the result of the previous filter is combined with this filter.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (180) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddEventFilter_StateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddEventFilter_StateModelBool( <span class="arg">LuaFunction</span> rule, <span class="arg">RuleFilterContext</span> context, <span class="arg">RuleFilterOperator</span> op, <span class="arg">Array</span> includeTypes, <span class="arg">Array</span> excludeTypes )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a filter to the given rule that will cause the event to only be invoked if - The type of the entity pointed to by context has at least one true state model value from includeTypes and none from excludeTypes. </p>
                <p>Valid contexts are dependent on the event this filter is applied to. When multiple filters exist op defines how the result of the previous filter is combined with this filter.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (188) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddGlobalEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddGlobalEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">Integer</span> eventtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a rule to be executed when the event of 'eventType' has happened, regardless of source </p>
                <p>Event types are: GE_PlayerBeingAttacked</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (168) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddInterval"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddInterval( <span class="arg">LuaFunction</span> f, <span class="arg">Real/Table</span> interval , <span class="arg">Table</span> OPT_data, <span class="arg">EGroupID</span> OPT_group )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a rule to be executed. Can include a start delay, an interval between rule calls and a count of how many times the rule is called. </p>
                <p>interval can be a number (the interval between subsequent rule calls) or a table with the keys: "delay", "interval" and "count". Returns the ID of the rule just added.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (42) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddOneShot"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddOneShot( <span class="arg">LuaFunction</span> rule, <span class="arg">Real</span> OPT_delay, <span class="arg">Table</span> OPT_data, <span class="arg">EGroupID</span> OPT_group )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a rule to be executed once, after 'delay' seconds. </p>
                <p>Returns the ID of the rule just added.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (74) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddPlayerEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddPlayerEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> eventtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a rule to be executed when the event of 'eventType' has happened on the 'player' </p>
                <p>Event types are: GE_PlayerBeingAttacked, GE_PlayerCommandIssued, GE_AbilityExecuted, GE_UpgradeComplete, GE_ConstructionComplete, GE_BuildItemComplete, GE_PlayerKilled, GE_SpawnActionComplete, GE_AIPlayer_EncounterNotification</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (156) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddSGroupEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddSGroupEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> eventtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a rule to be executed when the event of 'eventType' has happened on squads in the 'sgroup' </p>
                <p>Event types are: GE_SquadKilled, GE_SquadPinned, GE_SquadParadropComplete, GE_SquadCommandIssued, GE_AbilityExecuted, GE_SpawnActionComplete</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (121) </b></td>
            </tr>
          </table>
        </p><a name="Rule_AddSquadEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_AddSquadEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> eventtype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a rule to be executed when the event of 'eventType' has happened on the 'squad' </p>
                <p>Event types are: GE_SquadKilled, GE_SquadPinned, GE_SquadParadropComplete, GE_SquadCommandIssued, GE_AbilityExecuted, GE_SpawnActionComplete</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (109) </b></td>
            </tr>
          </table>
        </p><a name="Rule_ChangeInterval"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_ChangeInterval( <span class="arg">LuaFunction</span> rule, <span class="arg">Real</span> interval )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Change 'interval' seconds of all rules with LuaFunction f </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (94) </b></td>
            </tr>
          </table>
        </p><a name="Rule_ChangeIntervalWithID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_ChangeIntervalWithID( <span class="arg">Integer</span> id, <span class="arg">Real</span> interval )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Change 'interval' seconds of an existing rule with id </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (101) </b></td>
            </tr>
          </table>
        </p><a name="Rule_EnterProximity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_EnterProximity( <span class="arg">Function</span> f, <span class="arg">Boolean</span> all, <span class="arg">EGroupID</span> who, <span class="arg">Marker</span> where, <span class="arg">Integer</span> OPT_range, <span class="arg">Boolean</span> OPT_recur, <span class="arg">Table</span> OPT_data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Triggers when a group (SGroup/EGroup) gets close enough to a location </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (413) </b></td>
            </tr>
          </table>
        </p><a name="Rule_Exists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_Exists( <span class="arg">LuaFunction</span> rule )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test if a rule with LuaFunction f is currently active </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (323) </b></td>
            </tr>
          </table>
        </p><a name="Rule_ExistsWithID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_ExistsWithID( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test if a rule with id is currently active. Only for TimeRules </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (336) </b></td>
            </tr>
          </table>
        </p><a name="Rule_ExitProximity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_ExitProximity( <span class="arg">Function</span> f, <span class="arg">Boolean</span> all, <span class="arg">EGroupID</span> who, <span class="arg">Marker</span> where, <span class="arg">Integer</span> OPT_range, <span class="arg">Boolean</span> OPT_recur, <span class="arg">Table</span> OPT_data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Triggers when a group (SGroup/EGroup) gets far enough from a location (the group must enter the range before this can trigger) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (420) </b></td>
            </tr>
          </table>
        </p><a name="Rule_GroupCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_GroupCount( <span class="arg">Function</span> f, <span class="arg">EGroupID</span> group, <span class="arg">Comparison</span> comparison, <span class="arg">Integer</span> value, <span class="arg">Boolean</span> recur, <span class="arg">Table</span> data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Comparison is one of IS_LESS_THAN; IS_LESS_THAN_OR_EQUAL; IS_EQUAL; IS_NOT_EQUAL; IS_GREATER_THAN; IS_GREATER_THAN_OR_EQUAL. Triggers when the number of objects in the group, when compared to value by comparison, is true </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (434) </b></td>
            </tr>
          </table>
        </p><a name="Rule_Pause"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_Pause( <span class="arg">LuaFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pause all rules with LuaFunction for </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (382) </b></td>
            </tr>
          </table>
        </p><a name="Rule_PauseAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_PauseAll( <span class="arg">Number</span> / Table groupsToIgnore )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pause all currently active rules. Ignores Unpauseable rules. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (348) </b></td>
            </tr>
          </table>
        </p><a name="Rule_PauseWithID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_PauseWithID( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pause all rules with with id. Only for TimeRules </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (398) </b></td>
            </tr>
          </table>
        </p><a name="Rule_Refresh"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_Refresh(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Refreshes all Time and Event rules </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (315) </b></td>
            </tr>
          </table>
        </p><a name="Rule_Remove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_Remove( <span class="arg">LuaFunction</span> rule )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove all currently active rules with LuaFunction f (this does not remove any event rules) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (269) </b></td>
            </tr>
          </table>
        </p><a name="Rule_RemoveAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_RemoveAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kills ALL rules. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (288) </b></td>
            </tr>
          </table>
        </p><a name="Rule_RemoveEGroupEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_RemoveEGroupEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove an active event rule for entities in the 'egroup' </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (235) </b></td>
            </tr>
          </table>
        </p><a name="Rule_RemoveEntityEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_RemoveEntityEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove an active event rule for the 'entity' </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (228) </b></td>
            </tr>
          </table>
        </p><a name="Rule_RemoveGlobalEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_RemoveGlobalEvent( <span class="arg">LuaFunction</span> rule )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove an active event rule that's been applied 'globally' </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (252) </b></td>
            </tr>
          </table>
        </p><a name="Rule_RemoveMe"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_RemoveMe(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove a currently executing rule (only works inside a rule function) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (259) </b></td>
            </tr>
          </table>
        </p><a name="Rule_RemovePlayerEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_RemovePlayerEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove an active event rule for the 'player' </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (245) </b></td>
            </tr>
          </table>
        </p><a name="Rule_RemoveSGroupEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_RemoveSGroupEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove an active event rule for squads in the 'sgroup' </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (218) </b></td>
            </tr>
          </table>
        </p><a name="Rule_RemoveSquadEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_RemoveSquadEvent( <span class="arg">LuaFunction</span> rule, <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove an active event rule for the 'squad' </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (211) </b></td>
            </tr>
          </table>
        </p><a name="Rule_RemoveWithID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_RemoveWithID( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove a currently active rule with id (this does not remove any event rules) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (278) </b></td>
            </tr>
          </table>
        </p><a name="Rule_Replace"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_Replace( <span class="arg">LuaFunction</span> oldf, <span class="arg">LuaFunction</span> newf )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Replaces the function callback for all currently active rules with LuaFunction f (This only applies to TimeRules) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (297) </b></td>
            </tr>
          </table>
        </p><a name="Rule_ReplaceWithID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_ReplaceWithID( <span class="arg">Integer</span> id, <span class="arg">LuaFunction</span> newf )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Replaces the function callback for all currently active rules with an id (This only applies to TimeRules) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (306) </b></td>
            </tr>
          </table>
        </p><a name="Rule_Unpause"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_Unpause( <span class="arg">LuaFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unpause all rules with LuaFunction for </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (390) </b></td>
            </tr>
          </table>
        </p><a name="Rule_UnpauseAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_UnpauseAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unpause all rules </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (374) </b></td>
            </tr>
          </table>
        </p><a name="Rule_UnpauseWithID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_UnpauseWithID( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unpause all rules with with id. Only for TimeRules </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (405) </b></td>
            </tr>
          </table>
        </p><a name="Rule_WhileInProximity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Rule_WhileInProximity( <span class="arg">Function</span> f, <span class="arg">Boolean</span> all, <span class="arg">EGroupID</span> who, <span class="arg">Marker</span> where, <span class="arg">Integer</span> OPT_range, <span class="arg">Real</span> OPT_interval, <span class="arg">Boolean</span> OPT_recur, <span class="arg">Table</span> OPT_data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Triggers every interval seconds that the group is within range of the location </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\rulesystem.scar] (427) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;SGroup"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;SGroup</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Cmd_StopSquadsExcept"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Cmd_StopSquadsExcept( <span class="arg">SGroupID</span> sgroup1, <span class="arg">Boolean</span> OPT_stopCapture, <span class="arg">Boolean</span> OPT_stopBuild )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pass in a group to command to 'stop'. Pass in booleans for capturing and building </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3281) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_CompleteUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_CompleteUpgrade( <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> upgrade )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Instantly adds an upgrade to all entities in a given EGroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3983) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_FilterCamouflaged"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_FilterCamouflaged( <span class="arg">EGroupID</span> sgroup, <span class="arg">Integer</span> filtertype , <span class="arg">EGroupID</span> OPT_splitEGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an EGroup to either FILTER_REMOVE or FILTER_KEEP entities that are currently camouflaged (stealthed included) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3253) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_RestoreTargetingType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_RestoreTargetingType( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restore the targeting type of the entities in this EGroup to their respective defaults (as found in their EBPs) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (4008) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetBurnExtEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetBurnExtEnabled( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables the burn extenstion </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (4020) </b></td>
            </tr>
          </table>
        </p><a name="EGroup_SetTargetingType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 EGroup_SetTargetingType( <span class="arg">EGroupID</span> egroup, <span class="arg">TargetingType</span> targetingType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the allowable methods of targeting the entities in this EGroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3996) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsEGroupOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsEGroupOnScreen( <span class="arg">EGroupID</span> group, <span class="arg">Real</span> percent, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether ANY or ALL of an EGroup is on screen currently (not strict) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3910) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsSGroupOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsSGroupOnScreen( <span class="arg">SGroupID</span> group, <span class="arg">Real</span> percent, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether ANY or ALL of an SGroup is on screen currently (not strict) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3900) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Add"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Add( <span class="arg">SGroupID</span> group, <span class="arg">SquadID</span> squadron )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds an squadron to the end of a group if the group doesn't already have it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (718) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_AddAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_AddAbility( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds an ability to all squads in an sgroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3846) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_AddGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_AddGroup( <span class="arg">SGroupID</span> group, <span class="arg">SGroupID</span> grouptoadd )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Same as EGroup_AddGroup.  Note: You cannot mix squad groups and entity groups. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (696) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_AddGroups"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_AddGroups( <span class="arg">SGroupID</span> sgroup, <span class="arg">Table</span> groupList )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a list of multiple sgroups into an existing group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1735) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_AddLeaders"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_AddLeaders( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a leader to all squads in a group that can take a leader. </p>
                <p>This function will bypass all cost and queue prereqs</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2292) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_AddResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_AddResource( <span class="arg">SGroupID</span> sgroup, <span class="arg">ResourceType</span> resource, <span class="arg">Integer</span> amount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds the amount of resource type for a squad. </p>
                <p>If SGroup contains multiple squads, it will add for all</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2332) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_AddSlotItemToDropOnDeath"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_AddSlotItemToDropOnDeath( <span class="arg">SGroupID</span> groupid, <span class="arg">Integer</span> itemid, <span class="arg">Real</span> drop_chance, <span class="arg">Boolean</span> exclusive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add to the list of slot items to drop when any one of the squads is wiped out </p>
                <p>Drop chance is percentage chance the item will drop (0.0-1.0) exlusive means the squad would only drop this item, thus erasing all previous items in list example:	local item = Util_GetSlotItemID( "slot_item/allies_m9bazooka.lua" ) SGroup_AddSlotItemToDropOnDeath( squadid, item, false )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2580) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CanCastAbilityOnEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CanCastAbilityOnEntity( <span class="arg">SGroupID</span> caster, <span class="arg">Integer</span> ability, <span class="arg">EntityID</span> target_entity, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether ANY or ALL of a group can be ordered to do this ability on the target squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3872) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CanCastAbilityOnPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CanCastAbilityOnPosition( <span class="arg">SGroupID</span> caster, <span class="arg">Integer</span> ability, <span class="arg">Position</span> position, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether ANY or ALL of a group can be ordered to do this ability on the target position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3890) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CanCastAbilityOnSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CanCastAbilityOnSquad( <span class="arg">SGroupID</span> caster, <span class="arg">Integer</span> ability, <span class="arg">SquadID</span> target_squad, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether ANY or ALL of a group can be ordered to do this ability on the target entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3881) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CanInstantReinforceNow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CanInstantReinforceNow( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return true if ANY or ALL of a group can reinforce now </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2962) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CanSeeEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CanSeeEGroup( <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> targetegroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY entities in a group can see ALL or ANY entities in a given egroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1940) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CanSeeSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CanSeeSGroup( <span class="arg">SGroupID</span> sgroup, <span class="arg">SGroupID</span> targetsgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY squads in a group can see ALL or ANY squads in a target sgroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1928) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Clear"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Clear( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes all entities from a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (690) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_ClearPostureSuggestion"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_ClearPostureSuggestion( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears any previous posture suggestions made to a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (980) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Compare"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Compare( <span class="arg">SGroupID</span> group1, <span class="arg">SGroupID</span> group2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the contents of the two groups are equal. Order of the entities does not matter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (712) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CompleteEntityUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CompleteEntityUpgrade( <span class="arg">SGroupID</span> sgroup, <span class="arg">UpgradeID</span> upgrade )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Applies an upgrade to all squad entities in an sgroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3418) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CompleteUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CompleteUpgrade( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> upgrade )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Instantly adds an upgrade to all squads in a given SGroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3971) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_ContainsBlueprints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_ContainsBlueprints( <span class="arg">SGroupID</span> sgroup, <span class="arg">BP/Table</span> blueprints, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if a group contains ALL or ANY of the blueprints. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2146) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_ContainsSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_ContainsSGroup( <span class="arg">SGroupID</span> group1, <span class="arg">SGroupID</span> group2, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if SGroup1 contains ANY or ALL of SGroup2 </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (938) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_ContainsSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_ContainsSquad( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> SquadID, <span class="arg">Boolean</span> includeDespawned )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if SGroup contains a particular SquadID </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (912) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Count"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Count( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total number of spawned and despawned squads in a group. </p>
                <p>NOTE: SGroup_Count does not count the individual soldiers in an SGroup.  For that, use SGroup_TotalMembersCount</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (660) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CountAlliedSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CountAlliedSquads( <span class="arg">SGroupID</span> group, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of squads within an Sgroup that match an alliance with the player passed in </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (684) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CountBlueprints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CountBlueprints( <span class="arg">SGroupID</span> sgroup, <span class="arg">String</span> sbp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total count of all squads in a given SGroup with the provided blueprint or type </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3341) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CountDeSpawned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CountDeSpawned( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of despawned squads in a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (672) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CountEnemySquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CountEnemySquads( <span class="arg">SGroupID</span> group, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of squads within an Sgroup that match an alliance with the player passed in </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (678) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CountPopulation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CountPopulation( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Counts the total population cost of an SGroup by iterating over each individual Squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1820) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CountSpawned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CountSpawned( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of spawned squads in a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (666) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Create"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Create( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a new squadron group with the given name. </p>
                <p>Squad groups are used for all units and vehicles.  You can issue orders such as move and attack to an entire squad group. If you want a group for buildings or objects such as trees, use an sim::EntityGroupObs instead.\n Note that you cannot create sgroups with duplicate names.\n To be safe, you can check if the SGroup you want to create exists using SGroup_Exists( )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (585) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CreateIfNotFound"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CreateIfNotFound( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find a squad group from name.  Creates a new one with given name if it doesnt exist. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1972) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CreateKickerMessage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CreateKickerMessage( <span class="arg">SGroupID</span> group, <span class="arg">PlayerID</span> player, <span class="arg">String</span> textid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create and display kicker message on the each squad in the sgroup to the player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2978) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CreateUnique"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CreateUnique( <span class="arg">String</span> OPT_prefix )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an SGroup with a unique name, prefixed by the 'prefix' parameter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1721) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CreateUniqueWithPrefix"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CreateUniqueWithPrefix( <span class="arg">String</span> prefix )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a new squad group with an autogenerated unique name, optionally prefixed by the string passed in. </p>
                <p>Use this if you want to create a new SGroup but don't necessarily care about the name.\n Squad groups are used for all units and vehicles.  You can issue orders such as move and attack to an entire squad group.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (611) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_DeSpawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_DeSpawn( <span class="arg">SGroupID</span> groupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Despawn all spawned squads in a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2407) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Destroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Destroy( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Manually destroy a group that you don't need anymore. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (634) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_DestroyAllInMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_DestroyAllInMarker( <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroys all items in a group that are in proximity to a given marker. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2264) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_DestroyAllSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_DestroyAllSquads( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroys all spawned and despawned squads in a group. </p>
                <p>Be careful not to confuse this with SGroup_Destroy which destroys the group and NOT the squads it contains.  This function will destroy spawned and despawned items in a group</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2130) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_DisableCombatPlans"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_DisableCombatPlans( <span class="arg">SGroupID</span> groupID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disables all current combat plans for the squads in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3499) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Duplicate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Duplicate( <span class="arg">SGroupID</span> sgroup1, <span class="arg">SGroupID</span> sgroup2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Duplicates an SGroup. Creates a copy of sgroup1 in sgroup2. The function will clear sgroup2 beforehand if necessary. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3310) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_EnableAttention"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_EnableAttention( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> attentive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether an entity pays attention to its surroundings </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3803) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_EnableMinimapIndicator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_EnableMinimapIndicator( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable minimap indicator on all squads in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2881) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_EnableSurprise"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_EnableSurprise( <span class="arg">SGroupID</span> groupid, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables the surprise feature for an sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2692) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_EnableUIDecorator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_EnableUIDecorator( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable decorators on all squads in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2862) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Exists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Exists( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad group with the given name exists </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (809) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FaceEachOther"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FaceEachOther( <span class="arg">SGroupID</span> sgroup1, <span class="arg">SGroupID</span> sgroup2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes two SGroups face each other </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2350) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FaceMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FaceMarker( <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes a SGroup face a marker. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2380) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Filter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Filter( <span class="arg">SGroupID</span> sgroup, <span class="arg">SBP/SquadType/Table</span> blueprint, <span class="arg">Integer</span> filtertype, <span class="arg">SGroupID</span> OPT_splitSGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an SGroup by blueprint. </p>
                <p>A table of blueprints can be specified if you want to filter on more than one type. Setting filtertype to FILTER_KEEP results in the group only containing squads of the types listed in the blueprint table. Setting filtertype to FILTER_REMOVE will strip those same squads out and leave those that aren't of the types listed. Setting splitSGroup will move any squads being KEEP or REMOVE to it.  This SGroup will NOT be cleared beforehand. SquadTypes can also be used in place of Blueprints. If you want a squad to match a bunch of SquadTypes at the same time (i.e. AND instead of OR) then they can be listed together in a sub-table.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3011) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FilterByProximity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FilterByProximity( <span class="arg">SGroupID</span> sgroup, <span class="arg">Pos</span> position, <span class="arg">Integer</span> filtertype, <span class="arg">Real</span> OPT_OPT_range, <span class="arg">SGroupID</span> OPT_OPT_splitSGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an sgroup base on proximity. Use FILTER_KEEP to keep the affected units, or FILTER_REMOVE to remove them. Set invertPosition to TRUE to affect the units outside the position. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3100) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FilterCamouflaged"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FilterCamouflaged( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> filtertype , <span class="arg">SGroupID</span> OPT_splitSGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an SGroup to either FILTER_REMOVE or FILTER_KEEP units that are currently camouflaged (stealthed included) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3194) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FilterCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FilterCount( <span class="arg">SGroupID</span> sgroup1, <span class="arg">Integer</span> groupSize, <span class="arg">SGroupID</span> OPT_splitSGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pass in a group and it will filter it down to the indicated number </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3130) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FilterOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FilterOnScreen( <span class="arg">SGroupID</span> egroup, <span class="arg">Real</span> percent, <span class="arg">Integer</span> filtertype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an SGroup by whether units are on screen or not. Percent refers to the screen area you are considering (0.8 is a good value to use - it won't include things that are right at the screen edge). </p>
                <p>Setting filtertype to FILTER_KEEP results in the group only containing those squads that are on screen.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3224) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FilterSpawned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FilterSpawned( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> filtertype, <span class="arg">SGroupID</span> OPT_splitSGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an sgroup on spawned/despawned status. Use FILTER_KEEP to keep the spawned units (therefore removing the despawned), or FILTER_REMOVE to remove the spawned units (and keep the despawned). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3051) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FilterThreat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FilterThreat( <span class="arg">SGroupID</span> sgroup, <span class="arg">LuaTable</span> tableSBPs, <span class="arg">Boolean</span> OPT_bEmpty )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Searches an SGroup and finds the first threat within the table (searching first to last) and removes all other SBPs. </p>
                <p>Optional parameter bEmpty can be set to true, will clear the SGroup if none of the SBPS in the table are found.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3156) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FilterVisibleToPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FilterVisibleToPlayer( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> filtertype, <span class="arg">SGroupID</span> OPT_splitSGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Filters an sgroup on spawned/despawned status. Use FILTER_KEEP to keep the spawned units (therefore removing the despawned), or FILTER_REMOVE to remove the spawned units (and keep the despawned). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3072) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_ForEach"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_ForEach( <span class="arg">SGroupID</span> sgroup, <span class="arg">StackVarFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Call a lua function for each item in a group. Function will recieve (groupid, itemindex, itemid) and should return true to break or false to continue. </p>
                <p>function Rule_Test( )\n \tlocal DespawnSquad = function( sgroupid, itemindex, squadID )\n \t\tSquad_Despawn( squadID )\n \tend\n\n \tSGroup_ForEach( SGroup_FromName("sg_Squads"), DespawnSquad )\n end\n\n This functions iterates over spawned squads only.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (906) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_ForEachAllOrAny"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_ForEachAllOrAny( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all, <span class="arg">StackVarFunction</span> f )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Call a lua function for each item in a group. Function will receive (groupid, itemindex, itemid) and should return a bool. </p>
                <p>Only use this to TEST conditions on squads. DO NOT use this to perform operations on all squads, since it may not call your function on all squads (due to short circuit evaluation). This is used for checking if ALL or ANY items in a group match a given predicate. (eg. Are all items in a group chaos marines)\n This functions iterates over spawned squads only.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (868) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_ForEachAllOrAnyEx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_ForEachAllOrAnyEx( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all, <span class="arg">StackVarFunction</span> f, <span class="arg">Boolean</span> spawned, <span class="arg">Boolean</span> despawned )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Same as SGroup_ForEachAllOrAny except you have a choice to iterate over spawned squads, despawned squads, or both. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (828) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_ForEachEx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_ForEachEx( <span class="arg">SGroupID</span> sgroup, <span class="arg">StackVarFunction</span> f, <span class="arg">Boolean</span> spawned, <span class="arg">Boolean</span> despawned )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Same as SGroup_ForEach except you have a choice to iterate over spawned squads, despawned squads, or both. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (875) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FromName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FromName( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find an squadron group with a given name. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (643) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetAvgHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetAvgHealth( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the average health ratio of all units in a squad group. </p>
                <p>It now uses the same health measure that's used by the UI, so it does take into account fallen members of a squad</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2008) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetAvgHealthPercentageWithShields"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetAvgHealthPercentageWithShields( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> includeBonuses )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the average health ratio, including shield strengths, of the squads in the SGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3942) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetAvgLoadout"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetAvgLoadout( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the average loadout of all squads in a group as a percent [0.0, 1.0]. </p>
                <p>Example: A group of squads with loadouts of 4/8 and 1/1 would return 0.75</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2059) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetAvgShieldPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetAvgShieldPercentage( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the average shield strengths of the squads in the SGroup (as a percentage) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3920) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetClosestSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetClosestSquad( <span class="arg">SGroupID</span> sgroupid, <span class="arg">Marker/Pos</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the closest squad in an sgroup to a given position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2442) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetDeSpawnedSquadAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetDeSpawnedSquadAt( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the despawned squad at a certain position in the group. </p>
                <p>This is a one-based index (use index 1 to get the first squad in the group.) It is an error if index &gt; SGroup_CountDeSpawned().</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (773) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetGarrisonedBuildingEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetGarrisonedBuildingEntity( <span class="arg">SGroupID</span> groupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the entity id of the building that any squad of the sgroup is garrisoned in </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2598) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetHoldEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetHoldEGroup( <span class="arg">SGroupID</span> sgroup, <span class="arg">EGroupID</span> EGroupHold )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets all the entities that an SGroup may occupy and adds them to the EGroupHold </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3646) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetHoldSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetHoldSGroup( <span class="arg">SGroupID</span> sgroup, <span class="arg">SGroupID</span> SGroupHold )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets all the squads that an SGroup may occupy and adds them to the SGroupHold </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3662) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetInvulnerable( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check invulnerablity state for ALL or ANY squads in a squad group. </p>
                <p>Set all param to true to check for ALL or set to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2227) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetLastAttacker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetLastAttacker( <span class="arg">SGroupID</span> SGroupVictim, <span class="arg">SGroupID</span> SGroupAttacker, <span class="arg">Real</span> OPT_seconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the last attacker(s) for all the squads in an SGroup Gets the last attacker for all the squads in an SGroup and stores that in SGroupAttacker </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3573) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetLoadedVehicleSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetLoadedVehicleSquad( <span class="arg">SGroupID</span> groupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the squad id of the vehicle squad that any squad of the sgroup is loaded in </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2630) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetName( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the name of a given squad group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (816) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetNumSlotItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetNumSlotItem( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> itemID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the number of slot items with the same ID that the squads in the sgroup own </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2533) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetOffsetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetOffsetPosition( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> offset, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a position (a certain distance away) relative to a squad's current position/orientation. see ScarUtil.scar for explanation of 'offset' parameter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3633) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetPosition( <span class="arg">SGroupID</span> group )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the center position of a squad group. </p>
                <p>Despawned squads are ignored.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (791) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetRandomSpawnedSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetRandomSpawnedSquad( <span class="arg">SGroupID</span> sgroupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a random spawned squad from sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2422) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetResource( <span class="arg">SGroupID</span> sgroup, <span class="arg">ResourceType</span> resource )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the amount of resource type for a squad. </p>
                <p>If SGroup contains multiple squads, it will be the total of all</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2304) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetSequence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetSequence( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Builds a table of SGroupIDs that are named in a sequence. i.e. a name of "sg_killer" will find groups "sg_killer1", "sg_killer2" and so on, up until it looks for a group that isn't there. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3456) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetSpawnedSquadAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetSpawnedSquadAt( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the spawned squad at a certain position in the group. </p>
                <p>This is a one-based index (use index 1 to get the first squad in the group.) It is an error if index &gt; SGroup_CountSpawned().</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (753) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetSpread"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetSpread( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the distance from the centre of the group of the unit that furthest out. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3430) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetSquadAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetSquadAt( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the squad at a certain position in the group. </p>
                <p>This is a one-based index (use index 1 to get the first squad in the group.) It is an error if index &gt; SGroup_Count().</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (733) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetSquadsHeld"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetSquadsHeld( <span class="arg">SGroupID</span> sgroup, <span class="arg">SGroupID</span> sgroupRecipient )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an sgroup containing all squads held by any squad in an sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3618) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetSuppression( <span class="arg">SGroupID</span> groupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the suppression level for the first squad in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2662) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetVeterancyExperience"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetVeterancyExperience( <span class="arg">SGroupID</span> groupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the veterancy experience value for the first squad in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2723) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_GetVeterancyRank"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_GetVeterancyRank( <span class="arg">SGroupID</span> groupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the veterancy rank for the first squad in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2707) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_HasAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_HasAbility( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> ability, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether ANY or ALL units in a group have a specified ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3854) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_HasLeader"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_HasLeader( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if ALL or ANY squads in a sgroup have a leader </p>
                <p>Set all param to true to check for ALL or set to false to check for ANY.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2248) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_HasSquadBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_HasSquadBlueprint( <span class="arg">SGroupID</span> sgroup, <span class="arg">SBP/SquadType/Table</span> blueprint, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if ALL or ANY of the squads in a group have a specific blueprint. </p>
                <p>The blueprint can be a table of blueprints or types (see Squad_HasBlueprint() for details)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2167) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_HasTeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_HasTeamWeapon( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of the squads in an SGroup are carrying some kind of team weapon </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2456) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_HasUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_HasUpgrade( <span class="arg">SGroupID</span> sgroup, <span class="arg">UpgradeID</span> upgrade, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ANY or ALL squads in an SGroup have the specified upgrade </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3404) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Hide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Hide( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> hide )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hide or show all entities in all squads in an SGroup </p>
                <p>Bool should be true to hide, false to show</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2803) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IncreaseVeterancyExperience"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IncreaseVeterancyExperience( <span class="arg">SGroupID</span> groupid, <span class="arg">Real</span> experience, <span class="arg">Boolean</span> OPT_silent, <span class="arg">Boolean</span> OPT_applyModifiers )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Increase squad veterancy experience for all squads in the sgroup. Can do silent promotion (no sound/UI). Can skip modifiers, giving you direct control of experience gained. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2763) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IncreaseVeterancyRank"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IncreaseVeterancyRank( <span class="arg">SGroupID</span> groupid, <span class="arg">Integer</span> OPT_numranks, <span class="arg">Boolean</span> OPT_silent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Increase squad veterancy rank for all squads in the sgroup. By default, increases rank by 1. Can do silent promotion (no sound/UI. ex: mass rank insrease at mission start) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2739) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Intersection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Intersection( <span class="arg">SGroupID</span> group, <span class="arg">SGroupID</span> grouptointersect )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Same as EGroup_Intersection. Note: You cannot mix squad groups and entity groups. </p>
                <p>Only squads that are in both groups will be added to 'group'.\n The contents of 'grouptointersect' will not be changed.\n Example: group = (1,2,3,4,5,6)  grouptointersect = (2,4,6,8,10)   --&gt; group will now equal (2,4,6)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (706) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsAlive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsAlive( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a named squad group is not empty and its average health is &gt; 0.0 </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1991) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsAttackMoving"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsAttackMoving( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL squads in an SGroup are attack moving. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3377) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsCamouflaged"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsCamouflaged( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of the squads in an SGroup are camouflaged </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1807) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsCapturing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsCapturing( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> ALL )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ANY or ALL squads in an SGroup are capturing </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3714) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsConstructingBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsConstructingBuilding( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY squads in a group are currently constructing a building. </p>
                <p>Set all to true to check for ALL or set to false to check for ANY</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3745) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsDoingAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsDoingAbility( <span class="arg">SGroupID</span> sgroupid, <span class="arg">AbilityID</span> ability, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns if ANY or ALL members of an SGroup are doing an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3789) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsDoingAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsDoingAttack( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY squads are attacking within the time. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1912) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsDugIn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsDugIn( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of the squads in the SGroup is dug in (or in the process of digging in) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2845) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsEmpty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsEmpty( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a named squad group is empty </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1983) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsFemale"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsFemale( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL squads are female </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1794) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsHoldingAny"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsHoldingAny( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether any entity in an SGroup has a hold on anything </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3603) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsIdle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsIdle( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> ALL )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ANY or ALL squads in an SGroup are idle </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3727) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsInCover"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsInCover( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> OPT_all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the percentage of the SGroup members that are in cover. Alternatively, specify ANY or ALL as a second parameter to return true/false. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1835) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsInfiltrated"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsInfiltrated( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY squads in a group are infiltrated </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1956) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsInHoldEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsInHoldEntity( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> ALL )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ANY or ALL squads in an SGroup are garrisoned in an entity (building) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3541) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsInHoldSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsInHoldSquad( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> ALL )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ANY or ALL squads in an SGroup are garrisoned in a squad (transport vehicle) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3556) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsMoving"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsMoving( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL squads in an SGroup are moving. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2991) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsOnScreen( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> all, <span class="arg">Real</span> OPT_percent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL (use those keywords) of the squads in the group are present onscreen. You can pass in a percentage of the screen to check, so 0.8 would be a centered rectangle occupying 80% of the screen. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3359) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsPinned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsPinned( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of a group is pinned </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2930) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsReinforcing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsReinforcing( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY squads in a group are currently calling for reinforcments. </p>
                <p>Set all to true to check for ALL or set to false to check for ANY</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3683) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsRetreating"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsRetreating( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of the squads in an SGroup are currently retreating </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1768) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsSettingDemolitions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsSettingDemolitions( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL squads are setting demolitions </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1781) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsSuppressed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsSuppressed( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true is ANY or ALL of a group is suppressed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2913) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsUnderAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsUnderAttack( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY squads are under attack within the time. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1883) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsUnderAttackByPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsUnderAttackByPlayer( <span class="arg">SGroupID</span> group, <span class="arg">PlayerID</span> attackerplayer, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the squads are attacked by the player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2553) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsUnderAttackFromDirection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsUnderAttackFromDirection( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all, <span class="arg">Integer</span> offset, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY squads are under attack from a direction within the time. see ScarUtil.scar for types of directions. you can pass in a table of directions </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1895) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsUpgrading"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsUpgrading( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> blueprint, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY squads in a group are currently upgrading. You can pass in nil for upgradeid if it doesn't matter what is being upgraded. </p>
                <p>Set all to true to check for ALL or set to false to check for ANY</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3697) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsUsingAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsUsingAbility( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> ALL )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks if ANY or ALL squads in an SGroup are using an ability </p>
                <p>Does not check WHAT ability a squad is using.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3754) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_IsValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_IsValid( <span class="arg">Integer</span> sgroupID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check to see if an sgroup still exists without needing the name. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (573) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Kill"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Kill( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kills all squads in an SGroup. This kills them 'naturally', as opposed to SGroup_DestroyAllSquads() which makes them blink out of existance. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3390) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Remove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Remove( <span class="arg">SGroupID</span> group, <span class="arg">SquadID</span> squadron )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an squadron from a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (724) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_RemoveAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_RemoveAbility( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an ability that was previously added by SGroup_AddAbility. You cannot remove static abilities (from AE: squad_ability_ext) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3865) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_RemoveGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_RemoveGroup( <span class="arg">SGroupID</span> group, <span class="arg">SGroupID</span> grouptoremove )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove from the first SGroup all squads contained in the second SGroup. SGroup2 remains untouched. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2823) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_RemoveUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_RemoveUpgrade( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> upgrade )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes upgrade(s) from an sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3824) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_ReSpawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_ReSpawn( <span class="arg">SGroupID</span> groupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Respawn all despawned squads in a group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2392) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_RestoreCombatPlans"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_RestoreCombatPlans( <span class="arg">SGroupID</span> sgroupID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Restore all current combat plans for the squads in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3520) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_RewardActionPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_RewardActionPoints( <span class="arg">SGroupID</span> sgroup, <span class="arg">Real</span> actionpoint )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Give action points to the squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3761) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetAnimatorAction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetAnimatorAction( <span class="arg">SGroupID</span> sgroupid, <span class="arg">String</span> actionName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Trigger animation action for an SGroup. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3775) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetAnimatorEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetAnimatorEvent( <span class="arg">SGroupID</span> sgroupid, <span class="arg">String</span> eventName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Trigger animation event for an SGroup. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3782) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetAnimatorState"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetAnimatorState( <span class="arg">SGroupID</span> sgroupid, <span class="arg">String</span> stateMachineName, <span class="arg">String</span> stateName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set animation state of a state machine for an SGroup. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3768) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetAutoTargetting"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetAutoTargetting( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> hardpoint, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether a weapon will auto-target things or not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2482) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetAvgHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetAvgHealth( <span class="arg">SGroupID</span> sgroup, <span class="arg">Real</span> healthpercent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the health of each squad in a squad group to a given percent [0.0, 1.0]. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2041) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetAvgMorale"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetAvgMorale( <span class="arg">SGroupID</span> sgroup, <span class="arg">Real</span> moralepercent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the moral of each squad in a squad group to a given percent [0.0, 1.0]. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2093) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetCrushable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetCrushable( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> crushable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Overrides crushable behavior for an sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3796) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetInvulnerable( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> enabled, <span class="arg">Real</span> OPT_reset_time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable/Disable invulnerablity for an entire SGroup. Use true and false for simple on/off, or use a number between 0.0 and 1.0 for more precise control on how much damage a squad can take before it takes no more. </p>
                <p>The optional reset_time is used to automatically remove invulnerability after a set time. If invulnerable, both health damage is disabled.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2199) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetMoodMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetMoodMode( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> mode )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set soldier mood mode. Mode could be MM_Auto, MM_ForceCalm or MM_ForceTense </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2946) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetPlayerOwner"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetPlayerOwner( <span class="arg">SGroupID</span> sgroup, <span class="arg">PlayerID</span> owner )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Changes the player owner of spawned and despawned squads in an SGroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2110) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetRecrewable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetRecrewable( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> recrewable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets all squads in as sgroup to be recrewable or not when abandoned </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3837) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetResource( <span class="arg">SGroupID</span> sgroup, <span class="arg">ResourceType</span> resource, <span class="arg">Integer</span> amount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the amount of resource type for a squad. </p>
                <p>If SGroup contains multiple squads, it will set for all</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2320) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetSelectable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetSelectable( <span class="arg">SGroupID</span> sgroupid, <span class="arg">Boolean</span> selectable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set player selectable state of squads in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2469) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetSharedProductionQueue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetSharedProductionQueue( <span class="arg">SGroupID</span> egroup, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables shared team production on a building (teammates can build using THEIR resources) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3817) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetSuppression( <span class="arg">SGroupID</span> groupid, <span class="arg">Real</span> suppression )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the suppression level for all squads in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2677) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetTeamWeaponCapturable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetTeamWeaponCapturable( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set team weapon in the squads to be capturable or not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2897) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetVeterancyDisplayVisibility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetVeterancyDisplayVisibility( <span class="arg">SGroupID</span> groupid, <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the visibility of in-game veterancy art for the squads in given SGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2787) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SetWorldOwned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SetWorldOwned( <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes an sgroup neutral </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3810) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_Single"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_Single( <span class="arg">SGroupID</span> groupID, <span class="arg">squadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a squad group containing a single squad </p>
                <p>Creates an SGroup containing just one squad, creating the group if it doesn't exist and clearing it if it does. It returns the name of the SGroup.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3479) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SnapFaceEachOther"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SnapFaceEachOther( <span class="arg">SGroupID</span> sgroup1, <span class="arg">SGroupID</span> sgroup2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes two SGroups face each other at no time </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (2365) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SuggestPosture"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SuggestPosture( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> posture, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Suggests a posture to an SGroup, lasting the passed duration </p>
                <p>Posture of 0 is prone, 1 is kneel/crouch, and 2 is standing.  Duration is in seconds, negative means indefinite.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\simulation\public\simulation\lua\lualibs\unsorted\LuaGroup.cpp] (965) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_TotalMembersCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_TotalMembersCount( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> dontCountTeamWeapons )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total count of all members of all the squads in a given SGroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (3324) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_WarpToMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_WarpToMarker( <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Warps all members of an SGroup immediately to a marker </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1758) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_WarpToPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_WarpToPos( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Warps all members of an SGroup immediately to a new position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\groups.scar] (1744) </b></td>
            </tr>
          </table>
        </p><a name="Util_Grab"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_Grab( <span class="arg">Boolean</span> subselect )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Grabs the selected squads/entities and returns them in a group. Only works with -dev. </p>
                <p>Tries to return an SGroup first. If it's empty, it will return an EGroup. (Both types can't be selected at the same time)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2437) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Sound"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Sound</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Sound_ForceMusicEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_ForceMusicEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>for the cheat menu </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (98) </b></td>
            </tr>
          </table>
        </p><a name="Sound_ForceSetMinimumMusicCombatIntensity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_ForceSetMinimumMusicCombatIntensity( <span class="arg">Real</span> combatIntensity, <span class="arg">Real</span> durationSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Force set the combat intensity to be at least combatIntensity for a duration. </p>
                <p>Use a duration of -1 for an indefinite override. Use a duration of 0 to cancel the override. Does not trigger any music events.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (51) </b></td>
            </tr>
          </table>
        </p><a name="Sound_ForceSilenceEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_ForceSilenceEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>for the cheat menu </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (83) </b></td>
            </tr>
          </table>
        </p><a name="Sound_MusicStop"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_MusicStop(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>stops the music immediately and go into silence. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (104) </b></td>
            </tr>
          </table>
        </p><a name="Sound_PlaySpeech"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_PlaySpeech( <span class="arg">String</span> eventName, <span class="arg">Integer</span> eventArgs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play a speech event based on the local player's race. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (151) </b></td>
            </tr>
          </table>
        </p><a name="Sound_PlaySpeechForPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_PlaySpeechForPlayer( <span class="arg">PlayerID</span> player, <span class="arg">String</span> eventName, <span class="arg">Integer</span> eventArgs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play a speech event based on a player's race. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (141) </b></td>
            </tr>
          </table>
        </p><a name="Sound_SetForceMusic"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_SetForceMusic( <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>tells the music system if it should be trying to enter/stay in the playing music state </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (89) </b></td>
            </tr>
          </table>
        </p><a name="Sound_SetForceSilence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_SetForceSilence( <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>tells the music system if it should be trying to enter/stay in the silent state </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (74) </b></td>
            </tr>
          </table>
        </p><a name="Sound_SetManualMusicSelectDuration"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_SetManualMusicSelectDuration( <span class="arg">Real</span> durationSecs )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prevents the music system from automatically switching between layers and stopping for the duration. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (67) </b></td>
            </tr>
          </table>
        </p><a name="Sound_SetMinimumMusicCombatIntensity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_SetMinimumMusicCombatIntensity( <span class="arg">Real</span> combatIntensity, <span class="arg">Real</span> durationSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the target combat intensity to at least the value of value combatIntensity for a duration. </p>
                <p>Use a duration of -1 for an indefinite override. Use a duration of 0 to cancel the override.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (59) </b></td>
            </tr>
          </table>
        </p><a name="Sound_SetMusicIntensityScaling"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_SetMusicIntensityScaling( <span class="arg">Real</span> scale )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>sets the scaling multiplier for the music intensity value </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (131) </b></td>
            </tr>
          </table>
        </p><a name="Sound_SetMusicRaceCode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_SetMusicRaceCode( <span class="arg">String</span> raceCode )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>sets the race rtpc for controlling what race's music gets played </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (118) </b></td>
            </tr>
          </table>
        </p><a name="Sound_StartMusicOutro"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_StartMusicOutro( <span class="arg">String</span> outroEvent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>stops the music immediately and go into silence. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameSound.cpp] (111) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Squad"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Squad</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="separated"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 separated( <span class="arg">or</span> not, <span class="arg">SGroupID</span> smallvector&lt;SGroup, <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> spawnedOnly, <span class="arg">Real</span> idealSquadRadius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Try to group the squads, returning the squads in groupings that are at least the ideal squad range apart </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2205) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_CalculateClusterSeparation"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_CalculateClusterSeparation( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> spawnedOnly, <span class="arg">Integer</span> numClusters )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Try group the given list of squads into clusters and returns the average distance between these clusters.  Returns -1 if any error occurs. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2117) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_FacePosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_FacePosition( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Works like Squad_FacePosition.  All Squads will face the same direction, with the squad the closest to the center determining the direction. </p>
                <p>This function works on spawned squads only.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2028) </b></td>
            </tr>
          </table>
        </p><a name="SGroup_SnapFacePosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SGroup_SnapFacePosition( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Works like SGroup_FacePosition except with no interpolation.  All Squads will face the same direction, with the squad the closest to the center determining the direction. </p>
                <p>This function works on spawned squads only.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2065) </b></td>
            </tr>
          </table>
        </p><a name="Squad_AddAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_AddAbility( <span class="arg">SquadID</span> squad, <span class="arg">ScarAbilityPBG</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Allows the squad to use this ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2644) </b></td>
            </tr>
          </table>
        </p><a name="Squad_AddAllResources"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_AddAllResources( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> amount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add resources of all types to the specified squad by the specified amount, specifically to the SquadResourceExt. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2844) </b></td>
            </tr>
          </table>
        </p><a name="Squad_AddSlotItemToDropOnDeath"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_AddSlotItemToDropOnDeath( <span class="arg">SquadID</span> squad, <span class="arg">ScarSlotItemPBG</span> pbg, <span class="arg">Real</span> dropChance, <span class="arg">Boolean</span> exclusive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add to the list of slot items to drop when this squad is wiped out </p>
                <p>Drop chance is percentage chance the item will drop (0.0-1.0) exlusive means the squad would only drop this item, thus erasing all previous items in list example:	local item = Util_GetSlotItemID( "slot_item/allies_m9bazooka.lua" ) Squad_AddSlotItemToDropOnDeath( squadid, item, false )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1619) </b></td>
            </tr>
          </table>
        </p><a name="Squad_AdjustAbilityCooldown"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_AdjustAbilityCooldown( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> tickAmount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Advance ability cooldown </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2675) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanAttackEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanAttackEntity( <span class="arg">SquadID</span> attacker, <span class="arg">EntityID</span> target, <span class="arg">Boolean</span> checkFOW, <span class="arg">Boolean</span> checkVis )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if squad can attack target </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (400) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanCaptureStrategicPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanCaptureStrategicPoint( <span class="arg">SquadID</span> squad, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if squad can capture stategic point </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1504) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanCaptureTeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanCaptureTeamWeapon( <span class="arg">SquadID</span> pSquad, <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if the squad can capture the entity sync weapon </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1516) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanCastAbilityOnEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanCastAbilityOnEGroup( <span class="arg">SquadID</span> caster, <span class="arg">Integer</span> ability, <span class="arg">EGroupID</span> target_egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether a squad can be ordered to do this ability on any member of the target EGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (245) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanCastAbilityOnEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanCastAbilityOnEntity( <span class="arg">SquadID</span> castingSquad, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">EntityID</span> targetEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether a squad can be ordered to do this ability on the target squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1825) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanCastAbilityOnPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanCastAbilityOnPosition( <span class="arg">SquadID</span> castingSquad, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Position</span> targetPos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether a squad can be ordered to do this ability on the target squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1865) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanCastAbilityOnSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanCastAbilityOnSGroup( <span class="arg">SquadID</span> caster, <span class="arg">Integer</span> ability, <span class="arg">SGroupID</span> target_sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether a squad can be ordered to do this ability on any member of the target SGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (236) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanCastAbilityOnSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanCastAbilityOnSquad( <span class="arg">SquadID</span> castingSquad, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">SquadID</span> targetSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Test whether a squad can be ordered to do this ability on the target squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1845) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CancelProductionQueueItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CancelProductionQueueItem( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Cancels an item in a production queue.  Index 0 is the currently producing item. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2595) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanHold"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanHold( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks whether a squad can hold any squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1692) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanInstantReinforceNow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanInstantReinforceNow( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is available to be reinforced </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (993) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanLoadSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanLoadSquad( <span class="arg">SquadID</span> squad, <span class="arg">SquadID</span> loadthis, <span class="arg">Boolean</span> assumeEmpty, <span class="arg">Boolean</span> assumeVisible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks whether a squad can load another squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1698) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanPickupSlotItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanPickupSlotItem( <span class="arg">SquadID</span> pSquad, <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if the squad can pickup the entity slot item </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1510) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanRecrew"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanRecrew( <span class="arg">SquadID</span> pSquad, <span class="arg">EntityID</span> pEntity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if the squad can recrew the entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1522) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanSeeEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanSeeEntity( <span class="arg">SquadID</span> squad, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the distance between a target entity and the source squad is less than it squad's sight distance.  There is no LOS or FOW check. </p>
                <p>Try Player_CanSeeEntity() if you care about LOS or FOW.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1248) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanSeeSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanSeeSquad( <span class="arg">SquadID</span> squad, <span class="arg">SquadID</span> target )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the distance between a target squad and the source squad is less than it squad's sight distance.  There is no LOS or FOW check. </p>
                <p>Try Player_CanSeeSquad() if you care about LOS or FOW.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1264) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanTargetEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanTargetEntity( <span class="arg">Squad&amp;</span> squad, <span class="arg">Entity&amp;</span> target, <span class="arg">Boolean</span> checkFOW )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if a squad can target and attack a given entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1278) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CanTargetSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CanTargetSquad( <span class="arg">Squad&amp;</span> squad, <span class="arg">Squad&amp;</span> target, <span class="arg">Boolean</span> checkFOW )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if a squad can target and attack at least one entity in the given target squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1284) </b></td>
            </tr>
          </table>
        </p><a name="Squad_ClearPostureSuggestion"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_ClearPostureSuggestion( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears any previous posture suggestions made to a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3042) </b></td>
            </tr>
          </table>
        </p><a name="Squad_ClearStateModelEnumTableTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_ClearStateModelEnumTableTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a TargetHandle value in the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3508) </b></td>
            </tr>
          </table>
        </p><a name="Squad_ClearStateModelTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_ClearStateModelTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a TargetHandle value in the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3292) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CompleteUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CompleteUpgrade( <span class="arg">SquadID</span> pSquad, <span class="arg">ScarUpgradePBG</span> upgradePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Instantly adds an upgrade to a given squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2286) </b></td>
            </tr>
          </table>
        </p><a name="Squad_Count"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_Count( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of units currently in a squad (spawned AND despawned!!) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (301) </b></td>
            </tr>
          </table>
        </p><a name="Squad_CreateAndSpawnToward"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_CreateAndSpawnToward( <span class="arg">ScarSquadPBG</span> sbp, <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> loadoutCount, <span class="arg">Position</span> pos, <span class="arg">Position</span> toward )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a squad, spawn it and assign it to a player. </p>
                <p>This will create a squad of size 'loadoutCount' and of unit type 'unit_base' (from squad blueprint)\n Note: loadoutCount will be clipped to loadoutMin and loadoutMax from the squad blueprint. A loudoutCount of zero means create the whole squad as is.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (628) </b></td>
            </tr>
          </table>
        </p><a name="Squad_DeSpawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_DeSpawn( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Despawn the entire squad at its current position. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (291) </b></td>
            </tr>
          </table>
        </p><a name="Squad_Destroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_Destroy( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove an squad from the world and destroy it. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (238) </b></td>
            </tr>
          </table>
        </p><a name="Squad_EnableProductionQueue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_EnableProductionQueue( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets whether a squad can produce anything (including upgrades) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2506) </b></td>
            </tr>
          </table>
        </p><a name="Squad_EnableSurprise"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_EnableSurprise( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables the surprise feature on thie given squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1236) </b></td>
            </tr>
          </table>
        </p><a name="Squad_EntityAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_EntityAt( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>ZERO-BASED get of entities out of squads </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (327) </b></td>
            </tr>
          </table>
        </p><a name="Squad_ExtensionCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_ExtensionCount(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns total squad extension count. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2932) </b></td>
            </tr>
          </table>
        </p><a name="Squad_ExtensionEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_ExtensionEnabled( <span class="arg">SquadID</span> pSquad, <span class="arg">ComponentDependencyIndex</span> extID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad has the specific extension enabled. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2955) </b></td>
            </tr>
          </table>
        </p><a name="Squad_ExtensionName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_ExtensionName( <span class="arg">SquadID</span> pSquad, <span class="arg">ComponentDependencyIndex</span> extID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a string name of the given extension on the squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2939) </b></td>
            </tr>
          </table>
        </p><a name="Squad_FacePosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_FacePosition( <span class="arg">SquadID</span> squad, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the rotation of all units in a squad to face the position. </p>
                <p>The center of the squad will face the position and all other troops will use the same rotation as the from center vector.\n\n This function works on spawned squads only.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2000) </b></td>
            </tr>
          </table>
        </p><a name="Squad_FaceSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_FaceSquad( <span class="arg">SquadID</span> squad1, <span class="arg">SquadID</span> squad2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get 2 squads to face each other. This function works on spawned squads only. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2007) </b></td>
            </tr>
          </table>
        </p><a name="Squad_FindCover"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_FindCover( <span class="arg">SquadID</span> squad, <span class="arg">Position</span> pos, <span class="arg">Real</span> coverSearchRadius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tries to find cover within a certain radius of a position. If no cover is found, it returns the position used for the search. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2471) </b></td>
            </tr>
          </table>
        </p><a name="Squad_FindCoverCompareCurrent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_FindCoverCompareCurrent( <span class="arg">SquadID</span> squad, <span class="arg">Position</span> pos, <span class="arg">Real</span> coverSearchRadius, <span class="arg">Real</span> maxPathDistanceFromGoal, <span class="arg">Boolean</span> compareToCurrentCover )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tries to find cover within a certain radius of a position, traveling a max distance to get there, and possibly comparing against current position's cover. If no cover is found, it returns the position used for the search. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2424) </b></td>
            </tr>
          </table>
        </p><a name="Squad_FromID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_FromID( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get a squad from a mission editor ID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (453) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetActiveUpgrades"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetActiveUpgrades( <span class="arg">Squad&amp;</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns all active upgrades this squad has. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2314) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetAttackTargets"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetAttackTargets( <span class="arg">SquadID</span> squad, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the squad member current or forced targets. The sgroup is cleared, and any attack target squads found are added to the sgroup. Entity targets like buildings are ignored. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1212) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetBlueprint( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the squad blueprint of the squad (from the attribute editor) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (426) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetCoverLevel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetCoverLevel( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a number representing how good squad cover is -1 for awful, 0 for none, 1 for light, 2 for heavy </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1743) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetDestination"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetDestination( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the squad's destination, if it's moving. IMPORTANT: you must only call this function if Squad_HasDestination has returned true. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2389) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetHeading"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetHeading( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the average heading of the spawned units in the squad. The heading is currently a lua table with three entries (x, y, z) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (256) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetHealth( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current health of a squad. </p>
                <p>The current health of the squad is the total health of each entity in that squad.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (780) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetHealthMax"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetHealthMax( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the max health of the squad. </p>
                <p>The max health of a squad is the max health of each entity in that squad.  This means that the max health of a squad may change when entities are added or removed from the squad.\n\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (789) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetHealthPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetHealthPercentage( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> bIncludeBonuses )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns how much of an original squad's health is left, accounting for deaths (ex: a squad of 3 riflemen would be at 50% health, since they started with 6 members) Note: This is the same percentage that the UI uses. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (798) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetHealthPercentageWithShields"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetHealthPercentageWithShields( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> includeBonuses )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns how much of the squad's health is left as a percentage. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (812) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetHoldEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetHoldEntity( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get which building (entity) is the squad garrisoned </p>
                <p>Error if squad is not garrisoned in a building Please use Squad_IsInHold() to check first</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1631) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetHoldSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetHoldSquad( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get which vehicle (squad) is the squad garrisoned </p>
                <p>Error if squad is not garrisoned in a vehicle squad Please use Squad_IsInHold() to check first</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1645) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetID( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer containing the unqiue squad ID for this squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (443) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetInvulnerable( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the squad is invulnerable or not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (113) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetInvulnerableEntityCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetInvulnerableEntityCount( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of invulnerable member </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1413) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetInvulnerableMinCap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetInvulnerableMinCap( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns squad health min cap or the highest invulnerable min cap percentage from members of the squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1374) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetLastAttacker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetLastAttacker( <span class="arg">SquadID</span> squad, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the last squad attacker on this squad. If found, the squad is added to the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1154) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetLastAttackers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetLastAttackers( <span class="arg">SquadID</span> squad, <span class="arg">SGroupID</span> group, <span class="arg">Real</span> timeSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the squad attackers on this squad from the last seconds specified. The sgroup is cleared, then any squads found are added to the sgroup. Building attackers are ignored. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1181) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetLastEntityAttacker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetLastEntityAttacker( <span class="arg">SquadID</span> squad, <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find the last entity attacker on this squad. If found, the entity added to egroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1167) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetMax"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetMax( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the max number of units allowed in the squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (307) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetMaxEntityDropOffDistance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetMaxEntityDropOffDistance( <span class="arg">SquadID</span> targetSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the sum of all entities in a squad's resourceDropOffDistance state model value if it exists and the entities have a state model ext.  Otherwise it will return 0.0f </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3586) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetMinArmor"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetMinArmor( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current minimum armor of a squad. </p>
                <p>The current armor of the squad is the minimum armor amongst all entities in that squad.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (855) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetMostRecentQueuedCommandID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetMostRecentQueuedCommandID( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the command ID of the most recent queued command on the Squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (883) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetNumSlotItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetNumSlotItem( <span class="arg">SquadID</span> squad, <span class="arg">ScarSlotItemPBG</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the number of slot items with the same ID that the squad has </p>
                <p>example:	local item = Util_GetSlotItemID( "slot_item/allies_m1918_bar.lua" ) Squad_GetNumSlotItem( squadid, item )</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1540) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetOffsetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetOffsetPosition( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> offset, <span class="arg">Real</span> distance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a position relative to a squad's current position and orientation. see ScarUtil.scar for explanation of 'offset' parameter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (172) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetPlayerOwner"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetPlayerOwner( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the Player owner of the given squad. Squad MUST NOT be owned by the world. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (362) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetPosition( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the average position of the spawned units in the squad. The position is currently a lua table with three entries (x, y, z) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (249) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetPositionDeSpawned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetPositionDeSpawned( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the average position of the despawned AND spawned units in the squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (263) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetProductionQueueItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetProductionQueueItem( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the blueprint for a production queue item with index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2540) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetProductionQueueItemType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetProductionQueueItemType( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the production type (PITEM_Upgrade, PITEM_Spawn, PITEM_SquadUpgrade, PITEM_SquadReinforce, PITEM_PlayerUpgrade) for a production queue item with index. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2568) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetProductionQueueSize"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetProductionQueueSize( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of items in the squad's production queue. </p>
                <p>It is an error to call this function on a squad that does not have a production queue.\n Use Squad_HasProductionQueue to check that the squad has a queue.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2527) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetRace"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetRace( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the race property bag group for the given squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (432) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetShieldPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetShieldPercentage( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns how much of the squad's shield is left as a percentage. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (826) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetSlotItemAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetSlotItemAt( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the ID of the slot item. Use Squad_GetSlotItemCount to determine how many slot items the squad has. The first index is 1 </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1567) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetSlotItemCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetSlotItemCount( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns how many slot items this squad has </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1553) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetSlotItemsTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetSlotItemsTable( <span class="arg">SquadID</span> squadid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of SlotItem ID's that this squad currently owns </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (140) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetSquadDoingDisableOnSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetSquadDoingDisableOnSquad( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns the Squad that sent the passed squad in a disable state </p>
                <p>Disable states are: knocked back, stunned, levitate, stasis</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1818) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetSquadsHeld"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetSquadsHeld( <span class="arg">SquadID</span> squad, <span class="arg">SGroupID</span> sgroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear the sgroup, then add all squads held by 'squad' to it </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1713) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelBool( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a boolean value from the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3111) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelEntityTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Entity value from the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3149) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelEnumTableBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelEnumTableBool( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a boolean value from the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3179) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelEnumTableEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelEnumTableEntityTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an Entity value from the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3223) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelEnumTableFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelEnumTableFloat( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a float value from the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3193) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelEnumTableInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelEnumTableInt( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer value from the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3186) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelEnumTablePlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelEnumTablePlayerTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Player value from the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3207) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelEnumTableSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelEnumTableSquadTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Squad value from the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3215) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelEnumTableVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelEnumTableVector3f( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Vector3f value from the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3200) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelFloat( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a float value from the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3123) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelInt( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns an integer value from the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3117) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelPlayerTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Player value from the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3135) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelSquadTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Squad value from the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3142) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetStateModelVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetStateModelVector3f( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a Vector3f value from the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3129) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetSuppression( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check current squad suppresion level. Return value from 0 to 1 </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1763) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetVehicleMobileDriverSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetVehicleMobileDriverSquad( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the mobile driver squad from a vehicle squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (503) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetVeterancy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetVeterancy( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get current squad veterancy </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1930) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GetVeterancyRank"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GetVeterancyRank( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get current squad veterancy rank. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1918) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GiveSlotItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GiveSlotItem( <span class="arg">SquadID</span> squad, <span class="arg">ScarSlotItemPBG</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gives a slot item to the squad. Can fail due to not enough slots left </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1594) </b></td>
            </tr>
          </table>
        </p><a name="Squad_GiveSlotItemsFromTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_GiveSlotItemsFromTable( <span class="arg">SquadID</span> squadid, <span class="arg">LuaTable</span> itemTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gives all slot items in a table to the squad. The table should come from Squad_GetSlotItemsTable </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (159) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasAbility( <span class="arg">SquadID</span> squad, <span class="arg">ScarAbilityPBG</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tests to see if a squad has an ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2686) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasActiveCommand"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasActiveCommand( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if there's an active command currently for the squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (928) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasBlueprint( <span class="arg">SquadID</span> squad, <span class="arg">SBP/SquadType/Table</span> blueprints )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks whether a squad is of any of the Blueprints or SquadTypes specified. </p>
                <p>Blueprint can be a single Blueprint, a single SquadType, or a table of multiple Blueprints or SquadTypes. If you want to see if a squad has ALL of a set of SquadTypes, then wrap them all in a sub-table.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (15) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasBuilding( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given squad has a building in it (includes team weapons) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (497) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasDestination"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasDestination( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether this squad is moving and has a destination, it will not return true on the same tick that the move request is issued </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2370) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasEntityWithNInteractors"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasEntityWithNInteractors( <span class="arg">SquadID</span> targetSquad, <span class="arg">String</span> interactionTypeName, <span class="arg">Integer</span> minAttachedCount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns if squad contains an entity with at least minAttachedCount attached interactibles of interactionTypeName type </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3563) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasHeavyWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasHeavyWeapon( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given squad has a heavy weapon (non moving setup weapon) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (509) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasInfantry"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasInfantry( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given squad has at least one infantry unit in it (includes team weapons) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (485) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasProductionQueue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasProductionQueue( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a squad has a production queue. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2500) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasSetupTeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasSetupTeamWeapon( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given squad has team weapon setup for attack </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (519) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasSlotItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasSlotItem( <span class="arg">SquadID</span> squad, <span class="arg">SlotItemID</span> slotItem )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if a squad has a specific slot item </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (123) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasTeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasTeamWeapon( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given squad has a team weapon </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (529) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasUpgrade( <span class="arg">SquadID</span> squad, <span class="arg">ScarUpgradePBG</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return true if the squad has purchased the specified upgrade. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2302) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasVehicle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasVehicle( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given squad has a vehicle in it (includes team weapons) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (491) </b></td>
            </tr>
          </table>
        </p><a name="Squad_HasWeaponHardpoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_HasWeaponHardpoint( <span class="arg">SquadID</span> pSquad, <span class="arg">String</span> hardPointName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given squad has at least one Entity who has the specified weapon hardpoint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (535) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IncreaseVeterancy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IncreaseVeterancy( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> veterancy, <span class="arg">Boolean</span> silent, <span class="arg">Boolean</span> applyModifiers )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Increase current squad veterancy </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1952) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IncreaseVeterancyRank"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IncreaseVeterancyRank( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> numranks, <span class="arg">Boolean</span> silent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Increase current squad veterancy rank </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1942) </b></td>
            </tr>
          </table>
        </p><a name="Squad_InstantSetupTeamWeapon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_InstantSetupTeamWeapon( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stops current squads activity and instant setup the team weapon if they have one </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1971) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsAbilityActive_CS"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsAbilityActive_CS( <span class="arg">SquadID</span> squad, <span class="arg">ScarAbilityPBG</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if the ability is active </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1885) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsAlive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsAlive( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the squad is alive </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (479) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsAttacking"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsAttacking( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if any unit in the squad is attacking within the time </p>
                <p>Time is in seconds</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1135) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsAttackMoving"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsAttackMoving( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is currently attack-moving. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (974) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsCamouflaged"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsCamouflaged( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ANY entity in the squad is camouflaged </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (179) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsCapturing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsCapturing( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is currently capturing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (956) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsCasualty"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsCasualty( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if any spawned entity in the squad is a casualty </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (940) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsConstructing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsConstructing( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is currently constructing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (962) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsDoingAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsDoingAbility( <span class="arg">SquadID</span> squad, <span class="arg">ScarAbilityPBG</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if squad is currently performing the given ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1907) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsFemale"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsFemale( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the passed in squad is female </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2338) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsGatheringResourceType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsGatheringResourceType( <span class="arg">SquadID</span> targetSquad, <span class="arg">Integer</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns if squad contains an entity that is performing a specific unit role </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3614) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsHoldingAny"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsHoldingAny( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the squad has a hold on anything (use this on vehicles) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1686) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsHoldingPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsHoldingPosition( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if Squad is holding position. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3645) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsIdle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsIdle( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is idling </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2978) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsInBackground"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsInBackground( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether or not the squad is in the background. Default returns false (if the squad is empty) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2994) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsInCover"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsInCover( <span class="arg">SquadID</span> squadId, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ALL or ANY troopers in a squad are in cover. </p>
                <p>Set all to true to check if all troopers are in cover or set to false to check if any.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (68) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsInHoldEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsInHoldEntity( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the squad is garrisoned in entity (building) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1657) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsInHoldSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsInHoldSquad( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the squad is loaded in squad (vehicle </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1674) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsInMeleeCombat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsInMeleeCombat( <span class="arg">SquadID</span> pSquad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is in melee combat </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1141) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsKnockedBack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsKnockedBack( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if the squad is currently being knocked back </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1810) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsMoving"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsMoving( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if any unit in the squad is currently moving </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1128) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsOfType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsOfType( <span class="arg">SquadID</span> squad, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Determines if this squad is of the given type. Types are defined in squad_type_ext/squad_type_list </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3061) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsOnWalkableWall"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsOnWalkableWall( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if any entity of a squad (all=false) or the whole (all=true) squad is on walkable wall. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3639) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsOwnedByPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsOwnedByPlayer( <span class="arg">SquadID</span> squad, <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given squad is owned by the given player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3658) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsPinned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsPinned( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if squad is currently pinned </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1791) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsPinnedOrSuppressed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsPinnedOrSuppressed( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if squad is currently pinned or suppressed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1797) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsReinforcing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsReinforcing( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is currently reinforcing.  This function will return false if the squad does not have a reinforce ext. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (987) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsRetreating"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsRetreating( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is retreating </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (980) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsSBPOfType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsSBPOfType( <span class="arg">ScarSquadPBG</span> sbp, <span class="arg">String</span> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the given blueprint is of the given type. Types are defined in squad_type_ext/squad_type_list </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3076) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsSettingDemolitions"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsSettingDemolitions( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is currently placing charges. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (968) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsSiege"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsSiege( <span class="arg">ScarSquadPBG</span> pbg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the supplied squad pbg is a siege unit </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3624) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsStunned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsStunned( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if the squad is currently stunned </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1803) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsSuppressed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsSuppressed( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>True if squad is currently suppressed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1785) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsUnderAttack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsUnderAttack( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if any unit in the squad is under attack within the time </p>
                <p>Time is in seconds</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1086) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsUnderAttackByPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsUnderAttackByPlayer( <span class="arg">SquadID</span> squad, <span class="arg">PlayerID</span> pAttackerOwner, <span class="arg">Real</span> time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if squad is under attack by enemy from a particular player </p>
                <p>Time is in seconds</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1148) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsUnderAttackFromDirection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsUnderAttackFromDirection( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> offset, <span class="arg">Real</span> timeSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad was under attack from a certain direction (8 offset types, see ScarUtil.scar) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1092) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsUpgrading"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsUpgrading( <span class="arg">SquadID</span> squad, <span class="arg">ScarUpgradePBG</span> upgrade )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is currently upgrading something specific. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (999) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsUpgradingAny"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsUpgradingAny( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is currently upgrading anything. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1042) </b></td>
            </tr>
          </table>
        </p><a name="Squad_IsValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_IsValid( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if a squad with the given ID can be found in the world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (468) </b></td>
            </tr>
          </table>
        </p><a name="Squad_Kill"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_Kill( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kill whole squad.  Sets health to 0, and triggers death effects. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (907) </b></td>
            </tr>
          </table>
        </p><a name="Squad_NumUpgradeComplete"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_NumUpgradeComplete( <span class="arg">SquadID</span> squad, <span class="arg">ScarUpgradePBG</span> upgradePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of upgrades that this squad has. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2308) </b></td>
            </tr>
          </table>
        </p><a name="Squad_Population"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_Population( <span class="arg">SquadID</span> squad, <a href="enum_list.htm#CapType">CapType</a> type )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>get squad pop cost, use CT_Personnel, CT_Vehicle, CT_Medic for captype </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3051) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveAbility( <span class="arg">SquadID</span> squad, <span class="arg">ScarAbilityPBG</span> ability )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an ability that was previously added by Squad_AddAbility. You cannot remove static abilities (from AE: squad_ability_ext) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2661) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveSlotItemAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveSlotItemAt( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> index, <span class="arg">Boolean</span> bInstantWeaponChange )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a slot item from the squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1604) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveStateModelListBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveStateModelListBool( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a boolean value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3380) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveStateModelListEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveStateModelListEntityTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">EntityID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an Entity TargetHandle value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3416) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveStateModelListFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveStateModelListFloat( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a float value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3392) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveStateModelListInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveStateModelListInt( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an integer value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3386) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveStateModelListPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveStateModelListPlayerTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">PlayerID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a Player TargetHandle value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3404) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveStateModelListSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveStateModelListSquadTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">SquadID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a Squad TargetHandle value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3410) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveStateModelListVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveStateModelListVector3f( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Position</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a Vector3f value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3398) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RemoveUpgrade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RemoveUpgrade( <span class="arg">SquadID</span> squad, <span class="arg">ScarUpgradePBG</span> upgrade )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes an upgrade from a squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2634) </b></td>
            </tr>
          </table>
        </p><a name="Squad_RewardActionPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_RewardActionPoints( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> actionPoint )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Give squad action points </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2477) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SBPEntityAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SBPEntityAt( <span class="arg">ScarSquadPBG</span> sbp, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>ZERO-BASED get of entity blueprints out of squad blueprint </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (342) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SBPGetMax"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SBPGetMax( <span class="arg">ScarSquadPBG</span> sbp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the max number of units allowed in the squad blueprint </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (317) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetAnimatorAction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetAnimatorAction( <span class="arg">SquadID</span> squadid, <span class="arg">String</span> actionName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Trigger animation action for a squad. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (208) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetAnimatorEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetAnimatorEvent( <span class="arg">SquadID</span> squadid, <span class="arg">String</span> actionName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Trigger animation event for a squad. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (221) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetAnimatorState"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetAnimatorState( <span class="arg">SquadID</span> squadid, <span class="arg">String</span> stateMachineName, <span class="arg">String</span> stateName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set animation state of a state machine for a squad. Please only use this for simple animations </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (195) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetBackground"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetBackground( <span class="arg">SquadID</span> pSquad, <span class="arg">Boolean</span> isInBackground )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the squad to be in the background or foreground. By default, all squads are in the foreground </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2968) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetExtEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetExtEnabled( <span class="arg">SquadID</span> pSquad, <span class="arg">String</span> extID, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables the squad's UI extension (which controls all UI elements related to the squad) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2926) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetHealth( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> healthPercent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the health of all units in a squad.  Health must be in range [0.0, 1.0] </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (833) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetInvulnerable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetInvulnerable( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> enable, <span class="arg">Real</span> reset_time )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set invulnerability on the squad. Reset time is in seconds. If it is non-negative, the invulnerability will expire after this time. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (95) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetInvulnerableEntityCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetInvulnerableEntityCount( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> invEntityCount, <span class="arg">Real</span> resetTime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Make a squad invulnerable to physical damage when number of members drop to or below specified count. </p>
                <p>member count, 0 means squad is vulnerable; above 0 means number of alive entities will not go below this count resetTime is the time in seconds that vulnerability will be restored.; zero time for reset time means the buff will last forever</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1400) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetInvulnerableMinCap"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetInvulnerableMinCap( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> minHealthPercentage, <span class="arg">Real</span> resetTime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Make a squad invulnerable to physical damage. </p>
                <p>percentage of 0.0 means squad is vulnerable; percentage of 1.0 sets the squad in god mode resetTime is the time in seconds that vulnerability will be restored.; zero time for reset time means the buff will last forever</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1345) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetMoodMode"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetMoodMode( <span class="arg">SquadID</span> squad, <span class="arg">SquadCombatBehaviourMoodMode</span> mood )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set soldier mood mode. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2359) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetMoveType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetMoveType( <span class="arg">SquadID</span> squad, <span class="arg">ScarMoveTypePBG</span> movetypePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the squad's move type </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1528) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetPlayerOwner"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetPlayerOwner( <span class="arg">SquadID</span> squad, <span class="arg">PlayerID</span> owner )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Changes the owner of the given squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (377) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetPosition( <span class="arg">SquadID</span> squad, <span class="arg">Position</span> pos, <span class="arg">Position</span> positionFacingToward )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Moves the squad to a new position and snaps squad members onto grid cell centres. </p>
                <p>`positionFacingToward` is passed in from the script as the position that they want the squad to face toward.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (724) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetPosition3D"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetPosition3D( <span class="arg">SquadID</span> squad, <span class="arg">Position</span> pos, <span class="arg">Position</span> toward )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Moves the squad to an arbitrary new 3D position. </p>
                <p>Note that the squad will still have the same properties, so any squad that snaps to the terrain (most land based squads) will interpolate to the terrain height immediately after this move. This function should really only be used for skimmers and other units that require the y axis to be specified. Use Squad_SetPosition() otherwise.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (740) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetRecrewable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetRecrewable( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> capturable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set entity inside the squad to be recrewable or not when it becomes abandoned </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2344) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetResource"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetResource( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> resourceType, <span class="arg">Real</span> newAmount )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>This function uses squad resources rather than entity resources. For awarding resources to units, it's best to use Entity_AddResource instead (located in luaentity.cpp). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2859) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetSharedProductionQueue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetSharedProductionQueue( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> shared )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables shared team production on a building (teammates can build using THEIR resources) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2512) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelBool( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a boolean value in the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3250) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelEntityTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">EntityID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an Entity TargetHandle value in the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3286) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelEnumTableBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelEnumTableBool( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Boolean</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a boolean value in the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3447) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelEnumTableEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelEnumTableEntityTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">EntityID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an Entity TargetHandle value in the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3501) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelEnumTableFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelEnumTableFloat( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a float value in the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3461) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelEnumTableInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelEnumTableInt( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Integer</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an integer value in the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3454) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelEnumTablePlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelEnumTablePlayerTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">PlayerID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Player TargetHandle value in the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3483) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelEnumTableSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelEnumTableSquadTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">SquadID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Squad TargetHandle value in the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3490) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelEnumTableVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelEnumTableVector3f( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> tableRowIndex, <span class="arg">Position</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Vector3f value in the squad's state model corresponding to the given key and table row index (0 based). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3472) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelFloat( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a float value in the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3262) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelInt( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an integer value in the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3256) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelListBool"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelListBool( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Boolean</span> value, <span class="arg">Boolean</span> allowDuplicates )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a boolean value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3338) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelListEntityTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelListEntityTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">EntityID</span> value, <span class="arg">Boolean</span> allowDuplicates )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an Entity TargetHandle value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3374) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelListFloat"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelListFloat( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Real</span> value, <span class="arg">Boolean</span> allowDuplicates )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a float value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3350) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelListInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelListInt( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Integer</span> value, <span class="arg">Boolean</span> allowDuplicates )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets an integer value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3344) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelListPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelListPlayerTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">PlayerID</span> value, <span class="arg">Boolean</span> allowDuplicates )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Player TargetHandle value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3362) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelListSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelListSquadTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">SquadID</span> value, <span class="arg">Boolean</span> allowDuplicates )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Squad TargetHandle value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3368) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelListVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelListVector3f( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Position</span> value, <span class="arg">Boolean</span> allowDuplicates )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Vector3f value in the squad's state model list corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3356) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelPlayerTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelPlayerTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">PlayerID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Player TargetHandle value in the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3274) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelSquadTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelSquadTarget( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">SquadID</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Squad TargetHandle value in the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3280) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetStateModelVector3f"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetStateModelVector3f( <span class="arg">SquadID</span> squad, <span class="arg">String</span> key, <span class="arg">Position</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a Vector3f value in the squad's state model corresponding to the given key. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3268) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetSuppression"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetSuppression( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> percentage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set current squad suppression level. Suppression value range from 0 to 1 </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1775) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetVeterancyDisplayVisibility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetVeterancyDisplayVisibility( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Turn on/off display of the unit portrait veterancy stars </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1961) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SetWorldOwned"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SetWorldOwned( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes a squad neutral </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (414) </b></td>
            </tr>
          </table>
        </p><a name="Squad_Spawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_Spawn( <span class="arg">SquadID</span> squad, <span class="arg">Position</span> pos, <span class="arg">String</span> spawnType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Spawn the entire squad at a give  n position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1498) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SpawnToward"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SpawnToward( <span class="arg">SquadID</span> squad, <span class="arg">Position</span> pos, <span class="arg">Position</span> toward, <span class="arg">String</span> spawnType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Spawn the entire squad at a given position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1490) </b></td>
            </tr>
          </table>
        </p><a name="Squad_Split"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_Split( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> int )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Split the squad into 2. The new squad size is specified by the number passed in </p>
                <p>The new squad size is specified by the number passed in.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (1292) </b></td>
            </tr>
          </table>
        </p><a name="Squad_StopAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_StopAbility( <span class="arg">SquadID</span> squad, <span class="arg">ScarAbilityPBG</span> ability, <span class="arg">Boolean</span> bIsEarlyExit )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Abruptly stops an active ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (2625) </b></td>
            </tr>
          </table>
        </p><a name="Squad_SuggestPosture"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_SuggestPosture( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> posture, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Suggests a posture to a squad, lasting the passed duration </p>
                <p>Posture of 0 is prone, 1 is kneel/crouch, and 2 is standing.  Duration is in seconds, negative means indefinate.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (3032) </b></td>
            </tr>
          </table>
        </p><a name="Squad_TryFindClosestFreePosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_TryFindClosestFreePosition( <span class="arg">SquadID</span> squad, <span class="arg">Position</span> targetPosition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the closest free position to the target position for the squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaSquad.cpp] (758) </b></td>
            </tr>
          </table>
        </p><a name="Squad_WarpToPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Squad_WarpToPos( <span class="arg">SquadID</span> squad, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Warps a squad immediately to a new position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\squad.scar] (86) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Territory"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Territory</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Territory_ContainsSectorID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Territory_ContainsSectorID( <span class="arg">SectorID</span> sectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the Territory contains the given SectorID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaLibTerritory.cpp] (70) </b></td>
            </tr>
          </table>
        </p><a name="Territory_FindClosestSectorToPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Territory_FindClosestSectorToPoint( <span class="arg">Position</span> pos3D )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the SectorID of the closest Sector Generator point to the given ScarPosition. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaLibTerritory.cpp] (63) </b></td>
            </tr>
          </table>
        </p><a name="Territory_GetAdjacentSectors"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Territory_GetAdjacentSectors( <span class="arg">SectorID</span> sectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of SectorIDs that are adjacent to the given SectorID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaLibTerritory.cpp] (100) </b></td>
            </tr>
          </table>
        </p><a name="Territory_GetPrimaryEntityInSector"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Territory_GetPrimaryEntityInSector( <span class="arg">SectorID</span> sectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the primary entity in the given sector, if one exists, and nil otherwise. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaLibTerritory.cpp] (93) </b></td>
            </tr>
          </table>
        </p><a name="Territory_GetSectorContainingPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Territory_GetSectorContainingPoint( <span class="arg">Position</span> pos3D )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the sector containing the given ScarPosition. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaLibTerritory.cpp] (52) </b></td>
            </tr>
          </table>
        </p><a name="Territory_GetSectorCreatorEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Territory_GetSectorCreatorEntity( <span class="arg">SectorID</span> sectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the creator entity of the sector by sectorID </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaLibTerritory.cpp] (85) </b></td>
            </tr>
          </table>
        </p><a name="Territory_GetSectorGeneratorPointOnTerrain"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Territory_GetSectorGeneratorPointOnTerrain( <span class="arg">SectorID</span> sectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the generator point of the given sector, snapped to the surface of the terrain. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaLibTerritory.cpp] (37) </b></td>
            </tr>
          </table>
        </p><a name="Territory_GetSectorOwnerID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Territory_GetSectorOwnerID( <span class="arg">SectorID</span> sectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the ID of the owner of the sector </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaLibTerritory.cpp] (78) </b></td>
            </tr>
          </table>
        </p><a name="Territory_IsHexagonTerritory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Territory_IsHexagonTerritory(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the territory is a HexagonTerritory. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\LuaLibTerritory.cpp] (116) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Timer"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Timer</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Timer_Add"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_Add( <span class="arg">Integer</span> timerID, <span class="arg">Real</span> period )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add the amount of time to the specified timer </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (78) </b></td>
            </tr>
          </table>
        </p><a name="Timer_Advance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_Advance( <span class="arg">Integer</span> timerID, <span class="arg">Real</span> period )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Advances the timer by the specified amount of time </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (88) </b></td>
            </tr>
          </table>
        </p><a name="Timer_Display"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_Display( <span class="arg">Integer</span> timerID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Display (in the console) the amount of time remaining in the specified timer. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (219) </b></td>
            </tr>
          </table>
        </p><a name="Timer_DisplayOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_DisplayOnScreen( <span class="arg">Integer</span> timerID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Displays a timer on the screen - You need to call this regularly (i.e. every second) to update the onscreen display. THIS IS A TEMPORARY FUNCTION - WELL GET PROPER UI SUPPORT LATER ON </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (266) </b></td>
            </tr>
          </table>
        </p><a name="Timer_End"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_End( <span class="arg">Integer</span> timerID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stop the specified timer. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (253) </b></td>
            </tr>
          </table>
        </p><a name="Timer_Exists"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_Exists( <span class="arg">Integer</span> timerID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the timer with this ID exists </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (69) </b></td>
            </tr>
          </table>
        </p><a name="Timer_GetElapsed"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_GetElapsed( <span class="arg">Integer</span> timerID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns how much time has elapsed since this timer has been started </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (158) </b></td>
            </tr>
          </table>
        </p><a name="Timer_GetMinutesAndSeconds"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_GetMinutesAndSeconds( <span class="arg">Luafunction</span> getTimeFunction, <span class="arg">Integer</span> TimerID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns TWO values: minutes and seconds. Provide it a function like Timer_GetRemaining or Timer_GetElapsed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (167) </b></td>
            </tr>
          </table>
        </p><a name="Timer_GetRemaining"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_GetRemaining( <span class="arg">Integer</span> timerID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the remaining time for the specified timer. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (138) </b></td>
            </tr>
          </table>
        </p><a name="Timer_IsPaused"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_IsPaused( <span class="arg">Integer</span> timerID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the timer is paused. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (119) </b></td>
            </tr>
          </table>
        </p><a name="Timer_Pause"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_Pause( <span class="arg">Integer</span> timerID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Pause the specified timer. </p>
                <p>Pause and Resume calls are ref-counted: if you have called Pause *twice* on a timer, you will also need to call Resume twice in order to start the timer up again.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (99) </b></td>
            </tr>
          </table>
        </p><a name="Timer_Resume"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_Resume( <span class="arg">Integer</span> timerID, <span class="arg">Boolean</span> OPT_force )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Resume the specified timer. </p>
                <p>Pause and Resume calls are ref-counted: if you have called Pause *twice* on a timer, you will also need to call Resume twice in order to start the timer up again. Set the force parameter to true if you want to bypass the refcounting and make sure a timer starts up again.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (193) </b></td>
            </tr>
          </table>
        </p><a name="Timer_Start"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Timer_Start( <span class="arg">Integer</span> timerID, <span class="arg">Real</span> period )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Start a timer with the specified id, taking the required period ( in seconds ) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\timer.scar] (59) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Training;Goals"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Training;Goals</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Training_AddCallbacksToGoal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Training_AddCallbacksToGoal( <span class="arg">the</span> target goal onStart: a function with GoalStartReason as argument. E.G. function OnGoalStart(startReason) onComplete: a function with GoalCompletionReason as argument. E.G. function OnGoalComplete(completeReason) )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>register two callbacks to a goal. One fires when starts while the other fires when completes. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\training.scar] (261) </b></td>
            </tr>
          </table>
        </p><a name="Training_AddExTagToGoal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Training_AddExTagToGoal(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>add an extra tag to an existing goal. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\training.scar] (253) </b></td>
            </tr>
          </table>
        </p><a name="Training_AddGoalSequence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Training_AddGoalSequence(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a sequence of goals to the training system, also starting the sequence's timer </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\training.scar] (356) </b></td>
            </tr>
          </table>
        </p><a name="Training_EnableGoalSequence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Training_EnableGoalSequence( <span class="arg">GoalSequence</span> goalSequence, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable/disable goal sequence </p>
                <p>Also restarts the timer for the goal sequence</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\training.scar] (596) </b></td>
            </tr>
          </table>
        </p><a name="Training_EnableGoalSequenceByID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Training_EnableGoalSequenceByID( <span class="arg">String</span> id, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable/disable goal sequence with given id </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\training.scar] (612) </b></td>
            </tr>
          </table>
        </p><a name="Training_EndGoalSequence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Training_EndGoalSequence(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Terminates a goal sequence </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\training.scar] (397) </b></td>
            </tr>
          </table>
        </p><a name="Training_Goal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Training_Goal( <span class="arg">String</span> key, <span class="arg">Table</span> data )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a goal object </p>
                <p>A goal represents one step in a training sequence. Each goal gets one hint popup. Only one goal hint will be displayed at a time. key is the object to visually anchor the hint to. This can be: - the name of an adornable UI element - an entity - a squad - the pbg of a production button - a squad or entity unique id - UniqueSquadButton will anchor to the hero selection - UniqueRespawningSquadButton will anchor to the respawning hero element - CenterLeftSecondaryInfo will anchor to the information panel left of the command card. data is a table of arbitrary information for use in the isCompletePredicate and is routed to the ui. It should include: Message: Localized text to display on the hint pop-up. Use DataTemplate: template for the UI hint. Options are: - LeftClickTrainingDataTemplate: a box displaying an image of a left clicking mouse and message text - RightClickTrainingDataTemplate: a box displaying an image of a right clicking mouse and message text - PanCameraTrainingDataTemplate: a box displaying an image of a middle clicking mouse and message text - GenericTrainingDataTemplate: a box displaying message text - LargeGenericDataTemplate: a larger box dislpaying message text isComplete predicate to run on the goal. It should return true if and only if the goal is complete.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\training.scar] (233) </b></td>
            </tr>
          </table>
        </p><a name="Training_GoalSequence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Training_GoalSequence( <span class="arg">String</span> id, <span class="arg">Integer</span> repeatMax, <span class="arg">Integer</span> remindMax, <span class="arg">String</span> goalTriggeredAudioEvent, <span class="arg">String</span> completeAudioEvent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a goal sequence </p>
                <p>A Goal Sequence represents the a single high-level task to prompt the user to do, composed of one or more goals. The goal sequence will begin when its trigger predicate is met, assuming its ignore and bypass conditions aren't met first. Only one goal sequence will be run at a time. id - unique string id to identify or reference the goal seqeuence repeatMax - if the goal sequence has been completed less than repeatMax times and its triggerPredicate passes, the goal sequence will run again. Infinite if less than 0. remindMax - if the . Infinite if less than 0. trigger - predicate to run on the goal sequence. If it returns true, start the goal sequence. ignore - predicate to run on the goal sequence. If it returns true, don't show the goal sequence even if trigger passes. remind - predicate to run on the goal sequence. It should indicate that the player needs a reminder on how to do the task. If it returns true, show the goal sequence again. bypass - predicate to run on the goal sequence. It should indicate whether the player has completed the goal without prompting. If true, the goal sequence will be ended and its completion count incremented. canRegress - if the complete condition for the current goal in the sequence stops passing, back up to the previous goal goals - list of goals to proceed through to as part of this goal sequence repeatMax and remindMax will be infinite if less than 0.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\training.scar] (287) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;UI"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;UI</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Command_PlayerBroadcastMessage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Command_PlayerBroadcastMessage( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <span class="arg">Integer</span> messageType, <span class="arg">String</span> message )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a message to a player with generic type a body </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3742) </b></td>
            </tr>
          </table>
        </p><a name="FOW_Enable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 FOW_Enable( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables the FOW, including out of bound areas and all entities on the map </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (508) </b></td>
            </tr>
          </table>
        </p><a name="Game_ConvertInputEnabledFlagEnumToInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_ConvertInputEnabledFlagEnumToInt( <a href="enum_list.htm#InputEnabledFlag">InputEnabledFlag</a> flag )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the input enabled flag as an integer. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (415) </b></td>
            </tr>
          </table>
        </p><a name="Game_ConvertVisibilityFlagEnumToInt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_ConvertVisibilityFlagEnumToInt( <a href="enum_list.htm#VisibilityFlag">VisibilityFlag</a> flag )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the visibility flag as an integer. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (434) </b></td>
            </tr>
          </table>
        </p><a name="Game_EndSubTextFade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_EndSubTextFade(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes title text displayed with Game_SubTextFade(...) immediately </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (606) </b></td>
            </tr>
          </table>
        </p><a name="Game_EndTextTitleFade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_EndTextTitleFade(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes title text displayed with Game_TextTitleFade(...) immediately </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (641) </b></td>
            </tr>
          </table>
        </p><a name="Game_GetInputEnabledFlag"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_GetInputEnabledFlag(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the input enabled flag. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (421) </b></td>
            </tr>
          </table>
        </p><a name="Game_GetLocalPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_GetLocalPlayer(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the local player. (should only be used for UI purpose) (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (487) </b></td>
            </tr>
          </table>
        </p><a name="Game_GetLocalPlayerID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_GetLocalPlayerID(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the local player id. (should only be used for UI purpose) (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (481) </b></td>
            </tr>
          </table>
        </p><a name="Game_GetVisibilityFlag"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_GetVisibilityFlag(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the game's visibility flag. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (440) </b></td>
            </tr>
          </table>
        </p><a name="Game_HasLocalPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_HasLocalPlayer(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Determine if there is a valid local player. (UI only -- nondeterminstic) (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (475) </b></td>
            </tr>
          </table>
        </p><a name="Game_IsPaused"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_IsPaused(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the game is paused. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (409) </b></td>
            </tr>
          </table>
        </p><a name="Game_IsPerformanceTest"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_IsPerformanceTest(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the we're running the performance test. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (403) </b></td>
            </tr>
          </table>
        </p><a name="Game_RequestSetLocalPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_RequestSetLocalPlayer( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Requests the local player to be set on the next update. (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (493) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetInputEnabledFlag"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetInputEnabledFlag( <span class="arg">Integer</span> flag )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the input enabled flag. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (427) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetMapExplored"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetMapExplored( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the map explored state for the ExploredAll cheat </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (460) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetPlayerColour"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetPlayerColour( <span class="arg">target</span> player, <span class="arg">or</span> "Colour_Neutral". )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the player color for the world visuals from preset colors defined in tuning_simulation\ui_team_colours. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (650) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetPlayerSlotColour"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetPlayerSlotColour( <span class="arg">target</span> player, <span class="arg">1</span> based player slot index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the player color for the world visuals by slot index from preset colors defined in tuning_simulation\ui_player_colours. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (671) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetPlayerUIColour"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetPlayerUIColour( <span class="arg">target</span> player, <span class="arg">or</span> "Colour_Neutral". )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the player color for the UI from preset colors defined in tuning_simulation\ui_team_colours. Does not affect world visuals. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (712) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetPlayerUISlotColour"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetPlayerUISlotColour( <span class="arg">target</span> player, <span class="arg">1</span> based player slot index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the player color for the UI by slot index from preset colors defined in tuning_simulation\ui_player_colours. Does not affect world visuals. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (726) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetVisibility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetVisibility( <a href="enum_list.htm#VisibilityFlag">VisibilityFlag</a> flag, <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the visibility of the specified game visibility flag. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (453) </b></td>
            </tr>
          </table>
        </p><a name="Game_SetVisibilityFlag"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SetVisibilityFlag( <span class="arg">Integer</span> flag )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the game visibility flag. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (446) </b></td>
            </tr>
          </table>
        </p><a name="Game_SkipAllEvents"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SkipAllEvents( <span class="arg">Boolean</span> deleteQueued )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Skips all events. Can either delete or skip queued events. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (529) </b></td>
            </tr>
          </table>
        </p><a name="Game_SkipEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SkipEvent(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Skips the currently playing event (and stops current sound). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (541) </b></td>
            </tr>
          </table>
        </p><a name="Game_SubTextFade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SubTextFade( <span class="arg">String</span> location, <span class="arg">String</span> time, <span class="arg">String</span> detail, <span class="arg">Real</span> in, <span class="arg">Real</span> lifetime, <span class="arg">Real</span> out )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fade in and out two or three lines of subtext. </p>
                <p>This function has to support two lines, for backwards compatibility. The 'detail' line is therefore optional.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (730) </b></td>
            </tr>
          </table>
        </p><a name="Game_SubTextFadeWithIcon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_SubTextFadeWithIcon( <span class="arg">String</span> line 1, <span class="arg">String</span> line 2, <span class="arg">String</span> line3, <span class="arg">String</span> detail, <span class="arg">Real</span> in, <span class="arg">Real</span> lifetime, <span class="arg">Real</span> out, <span class="arg">String</span> icon )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fade in and out one, two or three lines of subtext with an icon </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (745) </b></td>
            </tr>
          </table>
        </p><a name="Game_TextTitleFade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_TextTitleFade( <span class="arg">String</span> text, <span class="arg">Real</span> fadeIn, <span class="arg">Real</span> duration, <span class="arg">Real</span> fadeOut )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Shows title text that fades in and out over a specified durations </p>
                <p>Call UI_TitleDestroy to remove.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (614) </b></td>
            </tr>
          </table>
        </p><a name="Ghost_DisableSpotting"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Ghost_DisableSpotting(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disable the spotting of enemy entities that may become ghosts in the FoW. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (515) </b></td>
            </tr>
          </table>
        </p><a name="Ghost_EnableSpotting"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Ghost_EnableSpotting(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable the spotting of enemy entities that may become ghosts in the FoW. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (501) </b></td>
            </tr>
          </table>
        </p><a name="HintMouseover_Add"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintMouseover_Add( <span class="arg">String</span> hintText, <span class="arg">EGroupID</span> hintTarget, <span class="arg">Real</span> targetRadius, <span class="arg">Boolean</span> looping )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a Hint Point that will only appear on Mouseover of the target. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (250) </b></td>
            </tr>
          </table>
        </p><a name="HintMouseover_Remove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintMouseover_Remove( <span class="arg">String</span> hintText, <span class="arg">EGroupID</span> hintTarget )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a Mouseover Hint Point from the managing function. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (345) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_Add"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_Add( <span class="arg">StackVar</span> where, <span class="arg">Boolean</span> bVisible, <span class="arg">String</span> hintText, <span class="arg">number</span> OPT_height, <span class="arg">Integer</span> OPT_actionType, <span class="arg">String</span> OPT_iconName, <span class="arg">number</span> OPT_priority, <span class="arg">Boolean</span> OPT_visibleInFOW, <span class="arg">String</span> OPT_dataTemplate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a hintpoint attached to a Marker, EGroup, SGroup or position </p>
                <p>If range is set to 0, then the hintpoint is rangeless, see the design document for rangeless features. The following types of hintpoint actions are available. HPAT_Objective HPAT_Hint HPAT_Critical HPAT_Movement HPAT_Attack HPAT_FormationSetup HPAT_RallyPoint HPAT_DeepSnow HPAT_CoverGreen HPAT_CoverYellow HPAT_CoverRed HPAT_Detonation HPAT_Vaulting</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (140) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_AddToEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_AddToEGroup( <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> priority, <span class="arg">Boolean</span> visible, <span class="arg">LuaFunction</span> function, <span class="arg">String</span> dataTemplate, <span class="arg">String</span> hint, <span class="arg">Boolean</span> arrow, <span class="arg">Position</span> arrowOffset, <span class="arg">Integer</span> actionType, <span class="arg">String</span> iconName, <span class="arg">Boolean</span> visibleInFOW )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Deprecated. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (769) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_AddToEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_AddToEntity( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> priority, <span class="arg">Boolean</span> visible, <span class="arg">LuaFunction</span> function, <span class="arg">String</span> dataTemplate, <span class="arg">String</span> hint, <span class="arg">Boolean</span> arrow, <span class="arg">Position</span> arrowOffset, <span class="arg">Integer</span> objectiveID, <span class="arg">Integer</span> actionType, <span class="arg">String</span> iconName, <span class="arg">Boolean</span> visibleInFOW )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>For internal use only. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (812) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_AddToPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_AddToPosition( <span class="arg">Position</span> position, <span class="arg">Integer</span> priority, <span class="arg">Boolean</span> visible, <span class="arg">LuaFunction</span> function, <span class="arg">String</span> dataTemplate, <span class="arg">String</span> hint, <span class="arg">Boolean</span> arrow, <span class="arg">Position</span> arrowOffset, <span class="arg">Integer</span> objectiveID, <span class="arg">Integer</span> actionType, <span class="arg">String</span> iconName, <span class="arg">Boolean</span> visibleInFOW )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>For internal use only. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (855) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_AddToSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_AddToSGroup( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> priority, <span class="arg">Boolean</span> visible, <span class="arg">LuaFunction</span> function, <span class="arg">String</span> dataTemplate, <span class="arg">String</span> hint, <span class="arg">Boolean</span> arrow, <span class="arg">Position</span> arrowOffset, <span class="arg">Integer</span> actionType, <span class="arg">String</span> iconName, <span class="arg">Boolean</span> visibleInFOW )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Deprecated. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (893) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_AddToSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_AddToSquad( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> priority, <span class="arg">Boolean</span> visible, <span class="arg">LuaFunction</span> function, <span class="arg">String</span> dataTemplate, <span class="arg">String</span> hint, <span class="arg">Boolean</span> arrow, <span class="arg">Position</span> arrowOffset, <span class="arg">Integer</span> objectiveID, <span class="arg">Integer</span> actionType, <span class="arg">String</span> iconName, <span class="arg">Boolean</span> visibleInFOW )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>For internal use only. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (936) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_ClearFacing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_ClearFacing( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear the hint point arrow facing value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (987) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_Remove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_Remove( <span class="arg">Integer</span> HintPointID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a hintpoint. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (197) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_RemoveAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_RemoveAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove all hint points. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (967) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_SetDisplayOffset"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_SetDisplayOffset( <span class="arg">Integer</span> hintpointID, <span class="arg">Real</span> x, <span class="arg">Real</span> y, <span class="arg">Real</span> OPT_z )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a hintpoint's display offset, which is 3D for world hintpoints and 2D for taskbar binding hintpoints (ignore z) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (227) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_SetDisplayOffsetInternal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_SetDisplayOffsetInternal( <span class="arg">Integer</span> id, <span class="arg">Position</span> offset )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add a projected offset to the specified hint point. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (980) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_SetFacingEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_SetFacingEntity( <span class="arg">Integer</span> id, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Face the hint point arrow towards this entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (994) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_SetFacingPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_SetFacingPosition( <span class="arg">Integer</span> id, <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Face the hint point arrow towards this position. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1002) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_SetFacingSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_SetFacingSquad( <span class="arg">Integer</span> id, <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Face the hint point arrow towards this squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1010) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_SetVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_SetVisible( <span class="arg">Integer</span> HintPointID, <span class="arg">Boolean</span> bVisible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a hintpoint's visibility. Currently, FOW is not accounted for. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (212) </b></td>
            </tr>
          </table>
        </p><a name="HintPoint_SetVisibleInternal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 HintPoint_SetVisibleInternal( <span class="arg">Integer</span> id, <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Show or hide the specified hint point. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1018) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_ClearFacing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_ClearFacing( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear the map icon facing value. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1109) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_CreateArrow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_CreateArrow( <span class="arg">Marker/Pos</span> position_from, <span class="arg">Marker/Pos</span> position_to, <span class="arg">Integer</span> red, <span class="arg">Integer</span> green, <span class="arg">Integer</span> blue, <span class="arg">Integer</span> alpha )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates an arrow on the metamap between the two locations provided </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (771) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_CreateEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_CreateEntity( <span class="arg">EntityID</span> entity, <span class="arg">String</span> icon, <span class="arg">Real</span> scale, <span class="arg">Integer</span> red, <span class="arg">Integer</span> green, <span class="arg">Integer</span> blue, <span class="arg">Integer</span> alpha )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a map icon targetting an entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1054) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_CreatePosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_CreatePosition( <span class="arg">Position</span> position, <span class="arg">String</span> icon, <span class="arg">Real</span> scale, <span class="arg">Integer</span> red, <span class="arg">Integer</span> green, <span class="arg">Integer</span> blue, <span class="arg">Integer</span> alpha )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a map icon targetting a position. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1072) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_CreateSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_CreateSquad( <span class="arg">SquadID</span> squad, <span class="arg">String</span> icon, <span class="arg">Real</span> scale, <span class="arg">Integer</span> red, <span class="arg">Integer</span> green, <span class="arg">Integer</span> blue, <span class="arg">Integer</span> alpha )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a map icon targetting a squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1078) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_Destroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_Destroy( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove a map icon. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1089) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_DestroyAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_DestroyAll(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove all map icons. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1096) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_SetFacingEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_SetFacingEntity( <span class="arg">Integer</span> id, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Face the map icon towards this entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1115) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_SetFacingPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_SetFacingPosition( <span class="arg">Integer</span> id, <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Face the map icon towards this position. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1121) </b></td>
            </tr>
          </table>
        </p><a name="MapIcon_SetFacingSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 MapIcon_SetFacingSquad( <span class="arg">Integer</span> id, <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Face the map icon towards this squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1127) </b></td>
            </tr>
          </table>
        </p><a name="Misc_AddEntitiesToGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_AddEntitiesToGroup( <span class="arg">EGroupID</span> group, <span class="arg">String</span> entityIDsEncoded, <span class="arg">Boolean</span> includeSquads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Appends the provided EntityIDs to the EGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1574) </b></td>
            </tr>
          </table>
        </p><a name="Misc_AddRestrictCommandsCircle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_AddRestrictCommandsCircle( <span class="arg">Position</span> position, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add another circle in which commands are restricted to. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1759) </b></td>
            </tr>
          </table>
        </p><a name="Misc_AddRestrictCommandsMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_AddRestrictCommandsMarker( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add another marker in which commands are restricted to. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1741) </b></td>
            </tr>
          </table>
        </p><a name="Misc_AddRestrictCommandsOBB"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_AddRestrictCommandsOBB( <span class="arg">Position</span> minPosition, <span class="arg">Position</span> maxPosition )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Add another AABB in which commands are restricted to. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1767) </b></td>
            </tr>
          </table>
        </p><a name="Misc_AddSquadsToGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_AddSquadsToGroup( <span class="arg">SGroupID</span> group, <span class="arg">String</span> entityIDsEncoded )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Appends the provided SquadIDs to the SGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1559) </b></td>
            </tr>
          </table>
        </p><a name="Misc_AreDefaultCommandsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_AreDefaultCommandsEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the enabled/disabled state of the right-click command input.  (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1789) </b></td>
            </tr>
          </table>
        </p><a name="Misc_ClearControlGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_ClearControlGroup( <span class="arg">Integer</span> groupIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a specific control group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1446) </b></td>
            </tr>
          </table>
        </p><a name="Misc_ClearSelection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_ClearSelection(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the current selection. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1453) </b></td>
            </tr>
          </table>
        </p><a name="Misc_ClearSubselection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_ClearSubselection(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the current sub selection. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1460) </b></td>
            </tr>
          </table>
        </p><a name="Misc_DoWeaponHitEffectOnEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_DoWeaponHitEffectOnEntity( <span class="arg">EntityID</span> entity, <span class="arg">Position</span> pos, <span class="arg">ScarWeaponPBG</span> weaponPBG, <span class="arg">Boolean</span> penetrated )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Do weapon hit effect on the entity from the view camera origin </p>
                <p>WeaponID is the property bag group id; if penetrated is set to false, deflection effect would be played instead</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1818) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetControlGroupContents"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetControlGroupContents( <span class="arg">Integer</span> groupIndex, <span class="arg">SGroupID</span> squads, <span class="arg">EGroupID</span> nonSquadEntities )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns contents of a control group (0 to 9). Squads are put into an sgroup, and non-squad entities are put into an egroup. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1468) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetEntityControlGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetEntityControlGroup( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the control group index that this entity belongs to, from 0 to 9, or -1 if none. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1504) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetHiddenPositionOnPath"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetHiddenPositionOnPath( <span class="arg">Integer</span> checkType, <span class="arg">Position</span> origin, <span class="arg">Position</span> destination, <span class="arg">Integer</span> ebpID, <span class="arg">Real</span> stepDistance, <span class="arg">Real</span> cameraPadding, <span class="arg">PlayerID</span> FOWPlayer, <span class="arg">Boolean</span> debugDisplay )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a hidden position on path from origin to destination. If there's none, it returns the origin position </p>
                <p>Possible check types are CheckHiddenFromCamera, CheckHiddenInFOW and CheckHiddenBothCameraFOW Camera check determined by the camera frustum. use cameraPadding to increase the area around the camera when doing the check FOW check requires a valid player ID passed in stepDistance is the interval along the path that the hidden points will be checked ( min is 1 metre ) If no hidden position is found, position ( 0, 0, 0 ) is returned Don't use this for multi-player SCAR script!!</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1211) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetMouseOnTerrain"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetMouseOnTerrain(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the world position of the mouse on the terrain (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1169) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetMouseOverEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetMouseOverEntity(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the entity under the mouse (if any) (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1133) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetMouseOverSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetMouseOverSquad(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the entity squad under the mouse (if any) (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1151) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetSelectedEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetSelectedEntities( <span class="arg">EGroupID</span> group, <span class="arg">Boolean</span> subselection )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a given group and adds the current full selection (or subselection if true) to the group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1538) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetSelectedSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetSelectedSquads( <span class="arg">SGroupID</span> group, <span class="arg">Boolean</span> subselection )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears a given group and adds the current full selection (or subselection if true) to the group. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1593) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetSimDefaultStepsPerSecond"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetSimDefaultStepsPerSecond(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the default simulation rate. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1626) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetSimRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetSimRate(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the current simulation rate. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1614) </b></td>
            </tr>
          </table>
        </p><a name="Misc_GetSquadControlGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_GetSquadControlGroup( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the control group index that this squad belongs to, from 0 to 9, or -1 if none. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1521) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsEGroupSelected"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsEGroupSelected( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of the EGroup is selected </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2377) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsEntityOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsEntityOnScreen( <span class="arg">EntityID</span> entity, <span class="arg">Real</span> percent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the squad is on screen currently (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1423) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsEntitySelected"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsEntitySelected( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the specified entity is currently selected. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1632) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsMouseOverEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsMouseOverEntity(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the mouse is over an entity (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1145) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsMouseOverSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsMouseOverSquad(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the mouse is over a squad (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1163) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsSelectionInputEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsSelectionInputEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the enabled/disabled state of the selection input.  (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1803) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsSGroupSelected"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsSGroupSelected( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if ANY or ALL of the SGroup is selected </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2364) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsSquadOnScreen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsSquadOnScreen( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> percent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if the entity is on screen currently (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1436) </b></td>
            </tr>
          </table>
        </p><a name="Misc_IsSquadSelected"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_IsSquadSelected( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the specified squad is currently selected. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1640) </b></td>
            </tr>
          </table>
        </p><a name="Misc_RemoveCommandRestriction"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_RemoveCommandRestriction(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Remove all command restrictions. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1775) </b></td>
            </tr>
          </table>
        </p><a name="Misc_RestrictCommandsToMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_RestrictCommandsToMarker( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the marker in which commands are restricted to. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1782) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SelectEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SelectEGroup( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Select all the entities in an EGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2400) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SelectEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SelectEntity( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the full selection to the specified entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1648) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SelectSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SelectSGroup( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> selected )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Select (or deselect) all the squads in an SGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2389) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SelectSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SelectSquad( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> selected )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the full selection to the specified entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1660) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetDefaultCommandsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetDefaultCommandsEnabled( <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables right-click command input. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1795) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetEGroupSelectable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetEGroupSelectable( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> selectable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Allow all entities in an EGroup to be selectable (or not) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2422) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetEntityControlGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetEntityControlGroup( <span class="arg">EntityID</span> entity, <span class="arg">Integer</span> groupIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes an entity belong to a specific control group. If it already belongs to another control group, it's removed from that one before being added to the new one. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1675) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetEntitySelectable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetEntitySelectable( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> selectable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disable/enable selectability of the specified entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1718) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetSelectionInputEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetSelectionInputEnabled( <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables/disables selection input. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1809) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetSGroupSelectable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetSGroupSelectable( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> selectable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Allow all squads in an SGroup to be selectable (or not) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2411) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetSimRate"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetSimRate( <span class="arg">Real</span> rate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the simulation rate </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1620) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetSquadControlGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetSquadControlGroup( <span class="arg">SquadID</span> squad, <span class="arg">Integer</span> groupIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Makes a squad belong to a specific control group. If it already belongs to another control group, it's removed from that one before being added to the new one. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1697) </b></td>
            </tr>
          </table>
        </p><a name="Misc_SetSquadSelectable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Misc_SetSquadSelectable( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> selectable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disable/enable selectability of the specified squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1730) </b></td>
            </tr>
          </table>
        </p><a name="Obj_HideProgress"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_HideProgress(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hide the objective progress panel. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1877) </b></td>
            </tr>
          </table>
        </p><a name="Obj_HideProgressEx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_HideProgressEx( <span class="arg">Integer</span> progressBarIndex )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hide the specified objective progress panel. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1865) </b></td>
            </tr>
          </table>
        </p><a name="Obj_SetProgressBlinking"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_SetProgressBlinking( <span class="arg">Boolean</span> blinking )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Make the objective progress bar blink or stop blinking. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1905) </b></td>
            </tr>
          </table>
        </p><a name="Obj_ShowProgress"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_ShowProgress( <span class="arg">String</span> title, <span class="arg">Real</span> progress )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Show the objective progress panel with a progress bar - call repeatedly to update progress.  Value should be normalized between [0 - 1]. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1899) </b></td>
            </tr>
          </table>
        </p><a name="Obj_ShowProgress2"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_ShowProgress2( <span class="arg">String</span> title, <span class="arg">Real</span> progress )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Show the objective progress panel with a progress bar - call repeatedly to update progress.  Value should be normalized between [0 - 1].  Appears in center of screen. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1913) </b></td>
            </tr>
          </table>
        </p><a name="Obj_ShowProgressEx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_ShowProgressEx( <span class="arg">Integer</span> progressBarIndex, <span class="arg">String</span> title, <span class="arg">Real</span> progress, <span class="arg">Boolean</span> critical )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Show the specified objective progress panel with a progress bar - call repeatedly to update progress. Value should be normalized between [0 - 1].  If critical, progress bar will pulse. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1885) </b></td>
            </tr>
          </table>
        </p><a name="Obj_ShowProgressTimer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Obj_ShowProgressTimer( <span class="arg">Real</span> progress )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Show the objective progress panel with a timer icon - call repeatedly to update progress.  Value should be in seconds. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1920) </b></td>
            </tr>
          </table>
        </p><a name="PlayerColour_ClearConfigChangedCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PlayerColour_ClearConfigChangedCallback(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the config changed callback </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1960) </b></td>
            </tr>
          </table>
        </p><a name="PlayerColour_Disable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PlayerColour_Disable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clear player color overriding and use the "PlayerColour" setting instead. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1927) </b></td>
            </tr>
          </table>
        </p><a name="PlayerColour_Enable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PlayerColour_Enable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Force enable player color that overrides the current "PlayerColour" setting. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1940) </b></td>
            </tr>
          </table>
        </p><a name="PlayerColour_SetConfigChangedCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 PlayerColour_SetConfigChangedCallback( <span class="arg">LuaFunction</span> function )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a callback firing when user changes the config for player colour </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1953) </b></td>
            </tr>
          </table>
        </p><a name="Subtitle_EndAllSpeech"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Subtitle_EndAllSpeech(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prematurely finish all queued speech </p>
                <p>This is useful for skipping all speech events that may have been queued</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1978) </b></td>
            </tr>
          </table>
        </p><a name="Subtitle_EndCurrentSpeech"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Subtitle_EndCurrentSpeech(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prematurely finish currently playing speech and advance the next one in queue </p>
                <p>This is useful for skipping speech events</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1969) </b></td>
            </tr>
          </table>
        </p><a name="Subtitle_PlayNarrativeEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Subtitle_PlayNarrativeEvent( <span class="arg">String</span> str )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a narrative event as a series of subtitled speech transitions when given the event's reflect ID. </p>
                <p>Pass in the reflect ID (make sure it is represented as an integer) of a NarrativeEvent which is authored in a NarrativeCollection data object. This function will add a wait object which will terminate when all transitions are complete.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2129) </b></td>
            </tr>
          </table>
        </p><a name="Subtitle_PlayNarrativeLine"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Subtitle_PlayNarrativeLine( <span class="arg">String</span> str )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a global speech with subtitle and actor icon specified in the narrative line with given ID. </p>
                <p>The line should be present in an authorable narrative collection and referenced by the reflect ID Adds a wait object if successful. Returns the title ID, call UI_TitleDestroy to remove.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2100) </b></td>
            </tr>
          </table>
        </p><a name="Subtitle_PlaySpeechForSquadFromLocString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Subtitle_PlaySpeechForSquadFromLocString( <span class="arg">ScarBriefingActorPBG</span> briefingActorPBG, <span class="arg">String</span> loc, <span class="arg">Boolean</span> disableIconSubtitle, <span class="arg">String</span> audioCtrlEvent, <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> is3D )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a global speech with subtitle and actor icon in the overlay with speech bubbles on squad decorators. </p>
                <p>localization id is used for both subtitle text and speech If the speech file is 3D, make sure that is3D is set to true. Shows speech bubble indicator on squad decorator. Call UI_TitleDestroy to remove.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2173) </b></td>
            </tr>
          </table>
        </p><a name="Subtitle_PlaySpeechInternal"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Subtitle_PlaySpeechInternal( <span class="arg">ScarBriefingActorPBG</span> briefingActorPBG, <span class="arg">String</span> loc, <span class="arg">Boolean</span> disableIconSubtitle, <span class="arg">String</span> audioCtrlEvent, <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> is3D )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays a global speech with subtitle and actor icon in the overlay </p>
                <p>localization id is used for both subtitle text and speech please make sure that the the speech file is 2D Call UI_TitleDestroy to remove.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (1994) </b></td>
            </tr>
          </table>
        </p><a name="Subtitle_UnstickCurrentSpeech"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Subtitle_UnstickCurrentSpeech(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes "sticky" state from currently playing speech (if any) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2179) </b></td>
            </tr>
          </table>
        </p><a name="SynchronizedCommand_PlayerAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SynchronizedCommand_PlayerAbility( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a player ability command (PCMD_Ability) to a player. </p>
                <p>Only use this function from code which is executed for a single player (such as UI button callbacks).</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3762) </b></td>
            </tr>
          </table>
        </p><a name="SynchronizedCommand_PlayerPosAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SynchronizedCommand_PlayerPosAbility( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <span class="arg">Position</span> pos, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a positional ability command (PCMD_Ability) to a player </p>
                <p>Only use this function from code which is executed for a single player (such as UI button callbacks).</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3791) </b></td>
            </tr>
          </table>
        </p><a name="SynchronizedCommand_PlayerPosDirAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 SynchronizedCommand_PlayerPosDirAbility( <span class="arg">PlayerID</span> player, <span class="arg">PlayerID</span> dest, <span class="arg">Position</span> pos, <span class="arg">Position</span> dir, <span class="arg">ScarAbilityPBG</span> abilityPBG, <span class="arg">Boolean</span> skipCostAndPrereq )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Send a positional/directional ability command (PCMD_Ability) to a player </p>
                <p>Only use this function from code which is executed for a single player (such as UI button callbacks).</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3822) </b></td>
            </tr>
          </table>
        </p><a name="Taskbar_IsVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Taskbar_IsVisible(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the taskbar is visible. (not deterministic) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2267) </b></td>
            </tr>
          </table>
        </p><a name="Taskbar_SetVisibility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Taskbar_SetVisibility( <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets taskbar visibility. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2260) </b></td>
            </tr>
          </table>
        </p><a name="ThreatArrow_Add"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ThreatArrow_Add( <span class="arg">Integer</span> GroupID, <span class="arg">EGroupID</span> Threat, <span class="arg">String</span> OPT_icon )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Adds a threat to an existing group </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (665) </b></td>
            </tr>
          </table>
        </p><a name="ThreatArrow_CreateGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ThreatArrow_CreateGroup( <span class="arg">String</span> dataTemplate, <span class="arg">Marker/Pos/Entity/Squad/Group</span> target1, <span class="arg">Marker/Pos/Entity/Squad/Group</span> OPT_target2... )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a group of threats that are represented by a single arrow. Threats can be entities, squads, egroups, sgroups, positions or markers </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (634) </b></td>
            </tr>
          </table>
        </p><a name="ThreatArrow_DestroyAllGroups"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ThreatArrow_DestroyAllGroups(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroy all threat groups </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (659) </b></td>
            </tr>
          </table>
        </p><a name="ThreatArrow_DestroyGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ThreatArrow_DestroyGroup( <span class="arg">Integer</span> GroupID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroy a threat group </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (654) </b></td>
            </tr>
          </table>
        </p><a name="ThreatArrow_Remove"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 ThreatArrow_Remove( <span class="arg">Integer</span> GroupID, <span class="arg">EGroupID</span> Threat )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a threat from an existing group </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (698) </b></td>
            </tr>
          </table>
        </p><a name="UI_AddHintAndFlashAbility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_AddHintAndFlashAbility( <span class="arg">PlayerID</span> playerid, <span class="arg">AbilityID</span> abilityID, <span class="arg">String</span> text, <span class="arg">Integer</span> length, <span class="arg">Integer</span> OPT_blueprint_filter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates and flashes an ability button on the taskbar if the unit is selected </p>
                <p>Length parameter determines how long to flash the item, and the blueprint filter is used if certain squad types need to be selected before flashing the button.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (543) </b></td>
            </tr>
          </table>
        </p><a name="UI_AllTerritoryHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_AllTerritoryHide(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle off all territory lines. Each call to UI_AllTerritoryHide must be matched by a call to UI_AllTerritoryShow </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2342) </b></td>
            </tr>
          </table>
        </p><a name="UI_AllTerritoryShow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_AllTerritoryShow(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle on all territory lines. Each call to UI_AllTerritoryShow must be matched by a call to UI_AllTerritoryHide </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2350) </b></td>
            </tr>
          </table>
        </p><a name="UI_AutosaveMessageHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_AutosaveMessageHide(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DEPRECATED! Removes a message added by UI_AutosaveMessageShow. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3445) </b></td>
            </tr>
          </table>
        </p><a name="UI_AutosaveMessageShow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_AutosaveMessageShow(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DEPRECATED! Shows a message indicating that the game is autosaving. </p>
                <p>DEPRECATED! Call UI_AutosaveMessageHide to remove the message.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3437) </b></td>
            </tr>
          </table>
        </p><a name="UI_CapturePointLinesHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CapturePointLinesHide(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle off capture-point boundary lines. Each call to UI_CapturePointLinesHide must be matched by a call to UI_CapturePointLinesShow </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2308) </b></td>
            </tr>
          </table>
        </p><a name="UI_CapturePointLinesShow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CapturePointLinesShow(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle on capture-point boundary lines. Each call to UI_CapturePointLinesShow must be matched by a call to UI_CapturePointLinesHide </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2317) </b></td>
            </tr>
          </table>
        </p><a name="UI_ClearEventCueFromID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ClearEventCueFromID( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears an event cue with a specific ID. The ID is obtained as a return value from either UI_CreateEventCueClickable or UI_CreateEventCueClickableByType. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2414) </b></td>
            </tr>
          </table>
        </p><a name="UI_ClearEventCues"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ClearEventCues(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears all active event cues </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2406) </b></td>
            </tr>
          </table>
        </p><a name="UI_ClearModalAbilityPhaseCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ClearModalAbilityPhaseCallback(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the ability phase callback. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3151) </b></td>
            </tr>
          </table>
        </p><a name="UI_ClearModalConstructionPhaseCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ClearModalConstructionPhaseCallback(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the construction phase callback. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3167) </b></td>
            </tr>
          </table>
        </p><a name="UI_ClearModalHoverCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ClearModalHoverCallback(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the construction phase callback. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3183) </b></td>
            </tr>
          </table>
        </p><a name="UI_ClearSkipNISCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ClearSkipNISCallback(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the try-to-skip-NIS callback </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3213) </b></td>
            </tr>
          </table>
        </p><a name="UI_CommandCardSetColumns"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CommandCardSetColumns( <span class="arg">Integer</span> columns )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the numner of columns in the command card. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3281) </b></td>
            </tr>
          </table>
        </p><a name="UI_CommandCardSetRows"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CommandCardSetRows( <span class="arg">Integer</span> rows )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set the numner of rows in the command card. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3274) </b></td>
            </tr>
          </table>
        </p><a name="UI_CoverPreviewHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CoverPreviewHide(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle off cover preview. Each call to UI_CoverPreviewHide must be matched by a call to UI_CoverPreviewShow </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2274) </b></td>
            </tr>
          </table>
        </p><a name="UI_CoverPreviewShow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CoverPreviewShow(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle on cover preview. Each call to UI_CoverPreviewShow must be matched by a call to UI_CoverPreviewHide </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2282) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateCommand"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateCommand(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a table that will be interpreted as a command for UI properties. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (797) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateCustomEventCueFrom"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateCustomEventCueFrom( <span class="arg">sender</span> player. Can be null. Used for retrieving player information. E.g. team color., <span class="arg">event</span> type id, <span class="arg">visible</span> duration of the event cue., <span class="arg">enable</span> repeat filtering if &gt; 0. Make the event cue alive but not visible beyond its lifetime., <span class="arg">when</span> repeatTime &gt; 0) how many times a event cue with the same customEventType can be repeated during repeatTime, <span class="arg">when</span> repeatTime &gt; 0) filter out a event cue if it's within the range of a existing one with the same customEventType, <span class="arg">ui</span> data template of the event cue., <span class="arg">event</span> cue visibility flags. ECV_None: not visible ECV_Queue: visible in the queue ECV_Title: visible as title ECV_Queue | ECV_Title : both, <span class="arg">event</span> cue visibility flags., <span class="arg">Control</span> event cue visibility in action ECAV_Global ECAV_ExecuterIsOwnOrAlly ECAV_ExecuterIsEnemy ECAV_CanSeeExecutor ECAV_CanSeeTarget ECAV_CanEnemySeeExecutor ECAV_TargetIsOwn ECAV_TargetIsAlly ECAV_OwnsTargetAndExecuterIsEnemy ECAV_AlliedToTargetAndExecuterIsEnemy ECAV_ExecuterIsOwn ECAV_ExecuterIsAlly ECAV_CanSeeTargetAndExecutorIsOwnOrAlly ECAV_CanSeeTargetAndExecutorIsOwn )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a event cue from a sender. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2470) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateDataContext"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateDataContext(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a table that will be interpreted as a data context for UI properties. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (805) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateEntityKickerMessage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateEntityKickerMessage( <span class="arg">PlayerID</span> player, <span class="arg">EntityID</span> entity, <span class="arg">String</span> message )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a custom kicker message on the entity and display to the player, rgb values are 0-255. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2620) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateEventCue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateEventCue( <span class="arg">String</span> title, <span class="arg">String</span> description, <span class="arg">String</span> data_template, <span class="arg">String</span> icon_path, <span class="arg">String</span> sound_path, <span class="arg">EventCueVisibility</span> OPT_visibility, <span class="arg">Real</span> OPT_lifetime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates an event cue without a callback (you won't know when it's clicked). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (522) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateEventCueClickable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateEventCueClickable( <span class="arg">Integer</span> customEventType, <span class="arg">Real</span> lifetime, <span class="arg">Integer</span> repeatCount, <span class="arg">Real</span> repeatTime, <span class="arg">String</span> title, <span class="arg">String</span> description, <span class="arg">String</span> dataTemplate, <span class="arg">String</span> iconPath, <span class="arg">String</span> soundPath, <span class="arg">Integer</span> red, <span class="arg">Integer</span> green, <span class="arg">Integer</span> blue, <span class="arg">Integer</span> alpha, <span class="arg">EventCueVisibility</span> visibility, <span class="arg">LuaFunction</span> function )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a custom event cue. The Lua function callback passed in takes an ID as an argument which can be used to clear the event cue with UI_ClearEventCueFromID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2520) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateEventCueClickableByType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateEventCueClickableByType( <a href="enum_list.htm#UIEventType">UIEventType</a> eventType, <span class="arg">Real</span> lifetime, <span class="arg">String</span> title, <span class="arg">String</span> description, <span class="arg">String</span> dataTemplate, <span class="arg">String</span> iconPath, <span class="arg">String</span> soundPath, <span class="arg">Integer</span> red, <span class="arg">Integer</span> green, <span class="arg">Integer</span> blue, <span class="arg">Integer</span> alpha, <span class="arg">EventCueVisibility</span> visibility, <span class="arg">LuaFunction</span> function )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a named event cue. Returns the ID associated to the created event cue item. This ID can be used to clear the event cue item with UI_ClearEventCueFromID. The Lua function callback passed in takes an ID as an argument which can be used to clear the event cue with UI_ClearEventCueFromID. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2563) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateMinimapBlip"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateMinimapBlip( <span class="arg">StackVar</span> where, <span class="arg">Real</span> lifetime, <span class="arg">String</span> blipDataTemplate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a blip on the minimap; return the ID of the blip. </p>
                <p>'where' can be an entity, marker, position, egroup, sgroup, or squad.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (99) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateMinimapBlipOnMarkerFrom"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateMinimapBlipOnMarkerFrom( <span class="arg">PlayerID</span> sender, <span class="arg">MarkerID</span> marker, <span class="arg">Real</span> lifeTime, <span class="arg">String</span> dataTemplate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a blips on a ScarMarker from a sender. sender is used for retrieving player information like team color </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2698) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateMinimapBlipOnPosFrom"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateMinimapBlipOnPosFrom( <span class="arg">PlayerID</span> sender, <span class="arg">Position</span> position, <span class="arg">Real</span> lifeTime, <span class="arg">String</span> dataTemplate )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a blips on a position from a sender. sender is used for retrieving player information like team color </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2719) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreatePositionKickerMessage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreatePositionKickerMessage( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> position, <span class="arg">String</span> message )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a custom kicker message on the entity and display to the player, rgb values are 0-255. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2635) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateSGroupKickerMessage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateSGroupKickerMessage( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">String</span> message )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a custom kicker message on the squad and display to the player. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (495) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateSquadKickerMessage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateSquadKickerMessage( <span class="arg">PlayerID</span> player, <span class="arg">SquadID</span> squad, <span class="arg">String</span> message )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a custom kicker message on the entity and display to the player, rgb values are 0-255. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2649) </b></td>
            </tr>
          </table>
        </p><a name="UI_CreateTagForPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CreateTagForPosition( <span class="arg">a</span> scar position. Won't accept a position extremely close (std::numeric_limits&lt;float&gt;::min()) to the existing ones. )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a position tag. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2806) </b></td>
            </tr>
          </table>
        </p><a name="UI_CursorHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CursorHide(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hides the mouse cursor </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3691) </b></td>
            </tr>
          </table>
        </p><a name="UI_CursorShow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_CursorShow(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Shows the mouse cursor if it has been hidden </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3685) </b></td>
            </tr>
          </table>
        </p><a name="UI_DeleteMinimapBlip"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_DeleteMinimapBlip( <span class="arg">Integer</span> blipID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a blip already created on the minimap </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (89) </b></td>
            </tr>
          </table>
        </p><a name="UI_DestroyTagForPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_DestroyTagForPosition( <span class="arg">same</span> of or extremely close (std::numeric_limits&lt;float&gt;::min()) to an existing position. If there are multiple candidates, <span class="arg">delete</span> the closest. )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroy a position tag </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2859) </b></td>
            </tr>
          </table>
        </p><a name="UI_EnableEntityDecorator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_EnableEntityDecorator( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable entity decorator. The default is decorator enabled. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3563) </b></td>
            </tr>
          </table>
        </p><a name="UI_EnableEntityMinimapIndicator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_EnableEntityMinimapIndicator( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable entity minimap indicator. The default is enabled. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3553) </b></td>
            </tr>
          </table>
        </p><a name="UI_EnableEntitySelectionVisuals"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_EnableEntitySelectionVisuals( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable entity selection visuals. The default is visuals enabled. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3599) </b></td>
            </tr>
          </table>
        </p><a name="UI_EnableGameEventCueType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_EnableGameEventCueType( <span class="arg">GameEventID</span> gameEventType, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables event cues. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2592) </b></td>
            </tr>
          </table>
        </p><a name="UI_EnableResourceTypeKicker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_EnableResourceTypeKicker( <span class="arg">ResourceType</span> resourceType, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables resource kickers. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2606) </b></td>
            </tr>
          </table>
        </p><a name="UI_EnableSquadDecorator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_EnableSquadDecorator( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable the squad decorator. The default is decorator enabled. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3609) </b></td>
            </tr>
          </table>
        </p><a name="UI_EnableSquadMinimapIndicator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_EnableSquadMinimapIndicator( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable or disable squad minimap indicator. The default is enabled. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3655) </b></td>
            </tr>
          </table>
        </p><a name="UI_EnableUIEventCueType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_EnableUIEventCueType( <a href="enum_list.htm#UIEventType">UIEventType</a> uiEventType, <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables event cues. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2599) </b></td>
            </tr>
          </table>
        </p><a name="UI_FadeOutEventCueFromID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FadeOutEventCueFromID( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Triggers an event cue to start its fadeout animation. The animation is determined in XAML. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2585) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashAbilityButton"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashAbilityButton( <span class="arg">ScarAbilityPBG</span> ability, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash an ability command button.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2875) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashConstructionButton"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashConstructionButton( <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash a construction item command button.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2951) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashEntity( <span class="arg">EntityID</span> entity, <span class="arg">String</span> actionOnName )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flashes the entity using attributes from [tuning][ui] </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3082) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashEntityCommandButton"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashEntityCommandButton( <a href="enum_list.htm#EntityCommandType">EntityCommandType</a> command, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash an entity order command button.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2919) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashEventCue"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashEventCue( <span class="arg">Integer</span> eventCueID, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash an event cue item.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2980) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashMenu"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashMenu( <span class="arg">String</span> menuName, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash a menu command button.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2962) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashObjectiveCounter"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashObjectiveCounter( <span class="arg">Integer</span> objectiveID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash an objective counter.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2990) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashObjectiveIcon"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashObjectiveIcon( <span class="arg">Integer</span> objectiveID, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash an objective.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2999) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashProductionBuildingButton"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashProductionBuildingButton( <span class="arg">String</span> type, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash a production building button.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
                <p>Type should match the unit_class of a Production Building in the army bag for the player's race</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3023) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashProductionButton"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashProductionButton( <a href="enum_list.htm#ProductionItemType">ProductionItemType</a> type, <span class="arg">PropertyBagGroup</span> pbg, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash a production item command button.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3010) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashSquadCommandButton"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashSquadCommandButton( <a href="enum_list.htm#SquadCommandType">SquadCommandType</a> command, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash a squad order command button.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2935) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashUSSEntityButton"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashUSSEntityButton( <span class="arg">EntityID</span> entity, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash a button on the USS for this entity.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2886) </b></td>
            </tr>
          </table>
        </p><a name="UI_FlashUSSSquadButton"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_FlashUSSSquadButton( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> stopOnClick )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Flash a button on the USS for this squad.  Pass the return value to UI_StopFlashing to stop flashing the button. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2903) </b></td>
            </tr>
          </table>
        </p><a name="UI_GetAbilityIconName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_GetAbilityIconName( <span class="arg">ScarAbilityPBG</span> abilityBag )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the icon name for a given ability </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3541) </b></td>
            </tr>
          </table>
        </p><a name="UI_GetColourAsString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_GetColourAsString(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts a colour table to an ARGB hex string (e.g. {a=0, r=255, g=204, b=136} =&gt; #00FFCC88). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (813) </b></td>
            </tr>
          </table>
        </p><a name="UI_GetDecoratorsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_GetDecoratorsEnabled(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether all decorators are enabled or not </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2357) </b></td>
            </tr>
          </table>
        </p><a name="UI_GetDecoratorVisibilityEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_GetDecoratorVisibilityEntity( <span class="arg">Entity</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets an enum value indicating the visibility of decorators for an entity. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2380) </b></td>
            </tr>
          </table>
        </p><a name="UI_GetDecoratorVisibilitySquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_GetDecoratorVisibilitySquad( <span class="arg">Squad</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets an enum value indicating the visibility of decorators for a squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2394) </b></td>
            </tr>
          </table>
        </p><a name="UI_HighlightSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_HighlightSGroup( <span class="arg">SGroupID</span> sgroup, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Highlights an SGroup in the UI for the given duration </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (73) </b></td>
            </tr>
          </table>
        </p><a name="UI_HighlightSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_HighlightSquad( <span class="arg">SquadID</span> squad, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Turn on squad highlight UI feature for the specified duration. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3123) </b></td>
            </tr>
          </table>
        </p><a name="UI_IsReplay"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_IsReplay(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Is a replay match currently. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3288) </b></td>
            </tr>
          </table>
        </p><a name="UI_LetterboxFade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_LetterboxFade( <span class="arg">Real</span> r, <span class="arg">Real</span> g, <span class="arg">Real</span> b, <span class="arg">Real</span> a, <span class="arg">Real</span> duration, <span class="arg">Real</span> aspectRatio, <span class="arg">Boolean</span> persistent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fades the letterbox to a given RGBA colour over a number of seconds by a given aspect ratio. </p>
                <p>Call UI_TitleDestroy to remove.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3386) </b></td>
            </tr>
          </table>
        </p><a name="UI_ModalVisual_CreateReticule"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ModalVisual_CreateReticule( <span class="arg">ScarReticulePBG</span> reticulePbg, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Create a reticule </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3134) </b></td>
            </tr>
          </table>
        </p><a name="UI_ModalVisual_Destroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ModalVisual_Destroy( <span class="arg">Integer</span> id )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroy a modal visual </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3145) </b></td>
            </tr>
          </table>
        </p><a name="UI_NewHUDFeature"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_NewHUDFeature( <a href="enum_list.htm#HUDFeatureType">HUDFeatureType</a> newHUDFeature, <span class="arg">String</span> featureText, <span class="arg">String</span> featureIcon, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Brings up a message and arrow pointing to a HUD feature. </p>
                <p>Accepted parameters are:  HUDF_AbilityCard, HUDF_MiniMap, HUDF_Upgrades, HUDF_CommandCard, HUDF_None Call UI_TitleDestroy to remove.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3487) </b></td>
            </tr>
          </table>
        </p><a name="UI_OutOfBoundsLinesHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_OutOfBoundsLinesHide(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle off terrain out of bounds lines. Each call to UI_OutOfBoundsLinesHide must be matched by a call to UI_OutOfBoundsLinesShow </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2290) </b></td>
            </tr>
          </table>
        </p><a name="UI_OutOfBoundsLinesShow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_OutOfBoundsLinesShow(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle on terrain out of bounds lines. Each call to UI_OutOfBoundsLinesShow must be matched by a call to UI_OutOfBoundsLinesShowHide </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2299) </b></td>
            </tr>
          </table>
        </p><a name="UI_RestrictBuildingPlacement"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_RestrictBuildingPlacement( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Only allow buildings to be placed inside a marker. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3250) </b></td>
            </tr>
          </table>
        </p><a name="UI_ScreenFade"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ScreenFade( <span class="arg">Real</span> r, <span class="arg">Real</span> g, <span class="arg">Real</span> b, <span class="arg">Real</span> a, <span class="arg">Real</span> duration, <span class="arg">Boolean</span> persistent )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fades the screen to a given RGBA colour over a number of seconds. mouse input is blocked during the fade, and you can control whether the input keeps being blocked after the fade has ended (be careful!) </p>
                <p>Call UI_TitleDestroy to remove.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3361) </b></td>
            </tr>
          </table>
        </p><a name="UI_SectorsHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SectorsHide(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle off sector lines. Each call to UI_SectorsHide must be matched by a call to UI_SectorsShow </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2325) </b></td>
            </tr>
          </table>
        </p><a name="UI_SectorsShow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SectorsShow(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggle on sector lines. Each call to UI_SectorsShow must be matched by a call to UI_SectorsHide </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2333) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetAlliedBandBoxSelection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetAlliedBandBoxSelection( <span class="arg">Boolean</span> allow )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the game to allow allied squads to be selected at the same time as your own squads </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3220) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetAllowLoadAndSave"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetAllowLoadAndSave( <span class="arg">Boolean</span> allowLoadAndSave )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disable load and save features at the pause menu </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3665) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetControlGroupSelectedCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetControlGroupSelectedCallback( <span class="arg">in</span> the format of function(controlGroupIndex) )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a callback firing when user select a control group either by hotkey or by control group button </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3849) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetCPMeterVisibility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetCPMeterVisibility( <span class="arg">Boolean</span> visible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the visibility of the Command Point meter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3474) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetDecoratorsEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetDecoratorsEnabled( <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables all decorators </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2363) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetEnablePauseMenu"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetEnablePauseMenu( <span class="arg">Boolean</span> isEnable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enable/Disable pause menu showing up when the pause menu hot key is pressed. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3199) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetEntityDecorator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetEntityDecorator( <span class="arg">EntityID</span> entity, <span class="arg">String</span> decorator )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Explicitly set the decorator a squad should use. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3573) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetEntityGhostSpottedStaggered"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetEntityGhostSpottedStaggered( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the game to show the entity ghost in a spotted state </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3227) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetForceShowSubtitles"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetForceShowSubtitles( <span class="arg">Boolean</span> forceShowSubtitles )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the game to force show subtitles even if the player has them turned off. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3243) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetMinimapTrueNorth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetMinimapTrueNorth( <span class="arg">Real</span> trueNorthAngleDeg )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the angle of True North for the minimap in degrees </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3267) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetModalAbilityPhaseCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetModalAbilityPhaseCallback( <span class="arg">LuaFunction</span> function )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a function to be called when the player clicks an ability and gets a targeting UI. Your function will have 2 arguments: [Blueprint] ability blueprint, [integer] phase: TP_Position, TP_Facing (only if ability requires facing), TP_Issued (not deterministic) or TP_Cancelled (for all issuables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3160) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetModalConstructionPhaseCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetModalConstructionPhaseCallback( <span class="arg">LuaFunction</span> function )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a function to be called when the player clicks a construction item and gets a targeting UI. Your function will have 2 arguments: [Blueprint] ability blueprint, [integer] phase: TP_Position, TP_Facing (only if ability requires facing), TP_Issued (not strict) or TP_Cancelled (for all issuables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3176) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetModalHoverCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetModalHoverCallback( <span class="arg">LuaFunction</span> function )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a function to be called when the player clicks a construction item and gets a targeting UI. Your function will have 2 arguments: [Blueprint] ability blueprint, [integer] phase: TP_Position, TP_Facing (only if ability requires facing), TP_Issued (not strict) or TP_Cancelled (for all issuables) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3192) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetSGroupSpecialLevel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetSGroupSpecialLevel( <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> level )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a level decorator that's defined in all of the squads squad_ui_ext in the target SGroup </p>
                <p>fields in the squad_ui_ext are special_decorator_friendly and special_decorator_enemy if level value is -1 it will hide the special decorator, if no level is defined -1 is default</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (757) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetSilhouetteEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetSilhouetteEnabled( <span class="arg">EGroupID</span> unit, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables the silhouettes for squads / entities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (42) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetSkipNISCallback"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetSkipNISCallback( <span class="arg">LuaFunction</span> function )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a callback firing when user try to skip the NIS </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3206) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetSquadDecorator"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetSquadDecorator( <span class="arg">SquadID</span> squad, <span class="arg">String</span> decorator )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Explicitly set the decorator a squad should use. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3619) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetSquadDecoratorAlwaysVisible"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetSquadDecoratorAlwaysVisible( <span class="arg">SquadID</span> squad, <span class="arg">Boolean</span> alwaysVisible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Turn on of off the squad decorator being always visible. The default is decorator not always visible. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3645) </b></td>
            </tr>
          </table>
        </p><a name="UI_SetUIExtEnabled"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SetUIExtEnabled( <span class="arg">EGroupID</span> unit, <span class="arg">Boolean</span> enabled )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables the UI extensions for squads / entities </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (10) </b></td>
            </tr>
          </table>
        </p><a name="UI_StopFlashing"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_StopFlashing(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Stop flashing a flash created with a previous call to UI_Flash*(). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (618) </b></td>
            </tr>
          </table>
        </p><a name="UI_SystemMessageHide"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SystemMessageHide( <span class="arg">String</span> message )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a message added by Game_ShowSystemMessage. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3461) </b></td>
            </tr>
          </table>
        </p><a name="UI_SystemMessageShow"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_SystemMessageShow( <span class="arg">String</span> message )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Shows a system message in the area where Game Paused text appears. </p>
                <p>Call Game_HideSystemMessage to remove the message.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3454) </b></td>
            </tr>
          </table>
        </p><a name="UI_TitleDestroy"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_TitleDestroy(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes a title using an id returned by the title creating function. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\ui.scar] (625) </b></td>
            </tr>
          </table>
        </p><a name="UI_ToggleDecorators"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_ToggleDecorators(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Toggles all decorators on or off. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (2371) </b></td>
            </tr>
          </table>
        </p><a name="UI_UnrestrictBuildingPlacement"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UI_UnrestrictBuildingPlacement(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Removes the restriction on building placement. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3260) </b></td>
            </tr>
          </table>
        </p><a name="UIWarning_Show"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 UIWarning_Show( <span class="arg">String</span> text )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Displays a brief UI warning in the critical alert message area. </p>
                <p>Call UI_TitleDestroy to remove.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3506) </b></td>
            </tr>
          </table>
        </p><a name="WinWarning_PublishLoseReminder"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 WinWarning_PublishLoseReminder( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> warningLevel )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Triggers a UI event cue and an audio cue that the player is about to lose the game. </p>
                <p>The lower the warningLevel, the closer the player is to losing and the more intense the warning is</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3517) </b></td>
            </tr>
          </table>
        </p><a name="WinWarning_ShowLoseWarning"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 WinWarning_ShowLoseWarning( <span class="arg">String</span> text, <span class="arg">Real</span> fadeIn, <span class="arg">Real</span> duration, <span class="arg">Real</span> fadeOut )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Call UI_TitleDestroy to remove. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\gamecore\public\gamecore\lua\lualibs\scenario\LuaLibGameUI.cpp] (3531) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;Util"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;Util</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="bug"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 bug( <span class="arg">ErrorMessage</span> errormessage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>E-mails a warning out with logfiles at the end of the game. </p>
                <p>This is similar to fatal() only the game will continue on. Use the ErrorMessage to dump out relevent information to the scarlog Example: bug( "This shouldn't happen, fix "..problem.here)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (451) </b></td>
            </tr>
          </table>
        </p><a name="Clone"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Clone( <span class="arg">Table</span> data, <span class="arg">Boolean</span> OPT_recursive )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clones a table allowing for unadulterated use of the data. By default this cloning is done recursively, but that can be changed with the optional recursive flag. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3472) </b></td>
            </tr>
          </table>
        </p><a name="Enum_ToNumber"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Enum_ToNumber( <span class="arg">StackVar</span> var )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts any enum value to a number </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibEnums.cpp] (23) </b></td>
            </tr>
          </table>
        </p><a name="Enum_ToString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Enum_ToString( <span class="arg">StackVar</span> var )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts any enum value to a string </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\essence\public\essence\lua\lualibs\LuaLibEnums.cpp] (11) </b></td>
            </tr>
          </table>
        </p><a name="Event_IsAnyRunning"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Event_IsAnyRunning(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if any standard (non-save) event has been queued to run. TODO: This function name is misleading. We should maybe change it, but this is being called in many mission scripts so we are leaving it for later. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2908) </b></td>
            </tr>
          </table>
        </p><a name="Game_EndSP"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_EndSP( <span class="arg">Boolean</span> win, <span class="arg">WinReason</span> OPT_winReason, <span class="arg">Boolean</span> OPT_nis, <span class="arg">Boolean</span> OPT_sandmap )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Ends the single player game (win/lose). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2471) </b></td>
            </tr>
          </table>
        </p><a name="Game_FadeToBlack"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Game_FadeToBlack( <span class="arg">Boolean</span> direction, <span class="arg">Real</span> length )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Fades the screen to black - FADE_OUT to fade to black, FADE_IN to fade back in </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1995) </b></td>
            </tr>
          </table>
        </p><a name="Import_Once"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Import_Once( <span class="arg">String</span> Path )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Loads a scar file if it hasn't been loaded yet </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3424) </b></td>
            </tr>
          </table>
        </p><a name="Loc_FormatText"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Loc_FormatText( <span class="arg">Integer</span> FormatID, <span class="arg">argc</span> OPT_parameters )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a formatted localized string. </p>
                <p>Use this function to format localized text. ie %1PLAYERNAME% is going to win. It accepts up to 9 additional values as parameters.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2315) </b></td>
            </tr>
          </table>
        </p><a name="Modify_EnableIsVisibleInFOW"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_EnableIsVisibleInFOW( <span class="arg">EGroupID</span> group, <span class="arg">Boolean</span> enable, <span class="arg">Real</span> durationSeconds )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modify whether or not the group is revealed in the fog of war. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (2142) </b></td>
            </tr>
          </table>
        </p><a name="Modify_OnFireDamagePerTick"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_OnFireDamagePerTick( <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#ModifierUsageType">ModifierUsageType</a> mathtype, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modify the damage done to the entity per tick when it is on fire </p>
                <p>Can modify the value to zero to allow buildings to be on fire without taking damage</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (2279) </b></td>
            </tr>
          </table>
        </p><a name="Modify_OnFireDecayAmountPerTick"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_OnFireDecayAmountPerTick( <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#ModifierUsageType">ModifierUsageType</a> mathtype, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modify the amount that the burn level decays per tick when not on fire </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (2256) </b></td>
            </tr>
          </table>
        </p><a name="Modify_OnFireHealthPercentage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_OnFireHealthPercentage( <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#ModifierUsageType">ModifierUsageType</a> mathtype, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modify the health threshold required to set the entity on fire </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (2220) </b></td>
            </tr>
          </table>
        </p><a name="Modify_OnFireThreshold"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_OnFireThreshold( <span class="arg">EGroupID</span> egroup, <a href="enum_list.htm#ModifierUsageType">ModifierUsageType</a> mathtype, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modify the burn level threshold required to set the entity on fire. A LOWER value means it lights on fire FASTER. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (2183) </b></td>
            </tr>
          </table>
        </p><a name="Modify_PlayerSquadLoadoutMax"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_PlayerSquadLoadoutMax( <span class="arg">Player</span> player, <a href="enum_list.htm#ModifierUsageType">ModifierUsageType</a> mathtype, <span class="arg">Real</span> value )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modify the number of entities spawned in new squads </p>
                <p>Intended use case is spawning damaged squadss</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (2316) </b></td>
            </tr>
          </table>
        </p><a name="Modify_SquadShieldRegen"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Modify_SquadShieldRegen( <span class="arg">SGroupID</span> group, <span class="arg">Integer</span> Factor, <span class="arg">MUT</span> Usage (MUT_Multiplication )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Modifies an entity's shield regen </p>
                <p>Should only be used on squads</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (2115) </b></td>
            </tr>
          </table>
        </p><a name="Position_IsValid"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Position_IsValid( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Check if a position is valid or not... useful for functions that may return INVALID_POS </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (462) </b></td>
            </tr>
          </table>
        </p><a name="Sound_PlayOnSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Sound_PlayOnSquad( <span class="arg">String</span> soundpathname, <span class="arg">SGroupID</span> sgroupid )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play sound on the centermost squad in the sgroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1961) </b></td>
            </tr>
          </table>
        </p><a name="Team_GetEntityConcentration"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Team_GetEntityConcentration( <span class="arg">TeamID</span> team, <span class="arg">Boolean</span> OPT_popcapOnly, <span class="arg">Table</span> OPT_includeBlueprints, <span class="arg">Table</span> OPT_excludeBlueprints, <span class="arg">Boolean</span> OPT_bLeastConcentrated, <span class="arg">MarkerID/Table</span> OPT_onlyInThisMarker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds the greatest (or least) concentration of entities owned by a team. </p>
                <p>This function is slow, so don't call it very often</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2884) </b></td>
            </tr>
          </table>
        </p><a name="Team_GetSquadConcentration"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Team_GetSquadConcentration( <span class="arg">TeamID</span> team, <span class="arg">Boolean</span> OPT_popcapOnly, <span class="arg">Table</span> OPT_includeBlueprints, <span class="arg">Table</span> OPT_excludeBlueprints, <span class="arg">Boolean</span> OPT_bLeastConcentrated, <span class="arg">MarkerID/Table</span> OPT_onlyInThisMarker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds the greatest (or least) concentration of squads owned by a team. </p>
                <p>This function is slow, so don't call it very often</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2875) </b></td>
            </tr>
          </table>
        </p><a name="Util_AddMouseoverSquadToSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_AddMouseoverSquadToSGroup( <span class="arg">Boolean</span> OPT_clearGroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>If there's a squad under the mouse cursor, this adds it to a unique SGroup. Return value is the SGroup it was added to, or nil if there was no squad under the mouse cursor. Pass in true for 'clearGroup' to clear the sgroup before adding the squad. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2565) </b></td>
            </tr>
          </table>
        </p><a name="Util_ApplyModifier"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_ApplyModifier( <span class="arg">EGroupID</span> groupid, <span class="arg">String</span> modifier, <span class="arg">Real</span> scalefactor, <span class="arg">Real</span> mathtype, <span class="arg">Real</span> OPT_applytype, <span class="arg">Boolean</span> OPT_exclusive, <span class="arg">String</span> OPT_targetname )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Applies any modifier to the target SGroup, EGroup, or Player </p>
                <p>Valid applytypes are MAT_...(Entity, Squad etc.), if left default assumption is default type for the target Cases you want to define applytype: Weapon Modifiers, Enable Modifiers, or a player modifier for all entity or squad types Valid mathtypes are MUT...(Addition, Multiplication, etc.) Exclusive modifiers will replace all pre-existing modifiers of that modifier type on the target</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\modifiers.scar] (1980) </b></td>
            </tr>
          </table>
        </p><a name="Util_AutoAmbient"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_AutoAmbient( <span class="arg">Table</span> intelEventTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Auto-generate an Ambient Event. These are Low priority, and will hopefully interrupt nothing. </p>
                <p>Takes a table of Actors and LOC numbers</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1369) </b></td>
            </tr>
          </table>
        </p><a name="Util_AutoIntel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_AutoIntel( <span class="arg">Table</span> intelEventTable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Auto-generate an Intel Event. These are medium priority, and will interrupt ambient, but not an NIS. </p>
                <p>Takes a table of parameters defining speaker(s) and line(s)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1415) </b></td>
            </tr>
          </table>
        </p><a name="Util_AutoNISlet"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_AutoNISlet( <span class="arg">Integer</span> nisletType, <span class="arg">Table</span> intelEventTable, <span class="arg">Boolean</span> OPT_bFOWvisible )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Auto-generate an NISlet Event, a simple NIS meant to convey mission location. These are high priority, and will interrupt ambient and Intel Events. </p>
                <p>Takes an NISLET type and a table of parameters defining speaker(s) and line(s) NISLET_BLACK2GAME	= 1 -- starts in black and fades up, ends in gamplay NISLET_GAME2GAME 	= 2 -- transitions from game play to letterbox and backto gameplay NISLET_GAME2BLACK	= 3 -- starts in gameplay and ends in black NISLET_GAME2LETTER	= 4 -- starts in gameplay and ends in letterbox mode (for transition to sitrep) NISLET_TIME 		= 1 -- use seconds to wait on camera movements NISLET_VO			= 2 -- use voice to wait on camera movements t_eventes.nislet_start = { {camPos = pos1, waitType = NISLET_TIME, waitValue = 5}, {camPos = pos2, waitType = NISLET_VO, waitValue = {ACTOR.GenericAlly, 000000}}, }</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1478) </b></td>
            </tr>
          </table>
        </p><a name="Util_AutoSave"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_AutoSave( <span class="arg">Boolean</span> OPT_waitUntilOutOfCombat, <span class="arg">Boolean</span> OPT_onlyCareAboutCombatOnScreen, <span class="arg">Real</span> OPT_maxWaitTime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Automatically save the game for the player. The savegame name is built using the abbreviated mission name + checkpoint. You can optionally have it wait until the player is out of combat. </p>
                <p>This function checks the user setting regarding autosaves (so you don't have to!), and does nothing if the player has them disabled.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3585) </b></td>
            </tr>
          </table>
        </p><a name="Util_ClearWrecksFromMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_ClearWrecksFromMarker( <span class="arg">MarkerID/Pos/SectorID</span> position, <span class="arg">Real</span> OPT_range, <span class="arg">Table</span> OPT_wrecksList )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears vehicle wrecks from a given area. </p>
                <p>Area can be a marker (with or without a range override), a position and range combo, or a territory sector ID. Uses EBP.WRECKED_VEHICLES unless wrecksList is defined.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2822) </b></td>
            </tr>
          </table>
        </p><a name="Util_Comparison"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_Comparison( <span class="arg">Real</span> value1, <span class="arg">Comparison</span> comparison, <span class="arg">Real</span> value2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Helper function to process comparisons that use the Comparison enum... i.e. return true if value1 IS_LESS_THAN value2 </p>
                <p>Comparison type can be IS_EQUAL, IS_LESS_THAN, IS_LESS_THAN_OR_EQUAL, IS_GREATER_THAN, IS_GREATER_THAN_OR_EQUAL or IS_NOT_EQUAL</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3552) </b></td>
            </tr>
          </table>
        </p><a name="Util_CreateEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_CreateEntities( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> blueprintID, <span class="arg">MarkerID/Pos</span> location, <span class="arg">Integer</span> numentities, <span class="arg">MarkerID/Pos</span> OPT_toward, <span class="arg">Boolean</span> OPT_snapToGround, <span class="arg">Boolean</span> OPT_skipForceConstruct, <span class="arg">Boolean</span> OPT_useMarkerTransform )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a given number of entities at a location and adds them to an egroup. A PlayerID of nil will create the entities as world objects. </p>
                <p>The skipForceConstruct parameter allows you to skip the step that normally spawns buildings fully constructed, so you can spawn buildings that self-construct. The toward parameter should be a world location that the entity should look at, NOT a direction. Leave it blank if you want the location's orientation to be used for a direction (assuming location is a marker). The useMarkerTransform parameter, if no toward is passed in, will determine if the marker's transform should be used for the entity OR if the marker's direction should be used in which case the entity will face the same way as the marker.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (495) </b></td>
            </tr>
          </table>
        </p><a name="Util_CreateSquads"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_CreateSquads( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> sbp, <span class="arg">EGroupID</span> spawn_point, <span class="arg">Position</span> OPT_destination, <span class="arg">Integer</span> OPT_numsquads, <span class="arg">Integer</span> OPT_loadout, <span class="arg">Boolean</span> OPT_attackmove, <span class="arg">Position</span> OPT_dest_facing, <span class="arg">Integer</span> OPT_upgrades, <span class="arg">Position</span> OPT_spawn_facing, <span class="arg">String</span> OPT_spawntype )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>High level function to create squads and give them basic orders upon spawning. Detailed explanation found in ScarUtil.scar </p>
                <p>PlayerID player - player who will own the squads SGroupID/Table/String sgroup - sgroup that receives the new squads. Can be nil if you don't need to manage the new squads or a string if you want to create a new sgroup with that name. If a table is given, the first item will be used as the return sgroup. SquadBlueprint sbp - the blueprint for the new squads. Position location - where to spawn the squads (can be any parameter type whose position can be queried) SGroup - If the sgroup is a Hold Entity then the squad is spawned inside of it. EGroup - If the egroup is a hold entity then the squad is spawned inside of it. NOTE: if the hold is destroyed, or is full, or due to any other misc. failure case, then the squad is spawned at the player's map entry point. Pos - the squad is spawned at this location. Marker - the squad is spawned at the marker and facing the direciton of the marker. Position destination - (OPTIONAL) where the squads will move to, load into, or attack SGroup can mean two different things, if the Sgroup is owned by the player and a hold then try to enter it.  Or if the SGroup is an enemy squad, then the spawned squad should attack move the enemy.  If neither is true, then the squad just moves to the location. EGroup should be treated the same as the SGroup. Position/Marker: the squad moves to the location. Sync weapon: the squad captures the sync weapon. Integer numsquads - (OPTIONAL) how many squads to spawn Integer loadout - (OPTIONAL) max amount of units to spawn per squad Boolean attackmove - (OPTIONAL) in cases where the squads do a simple move to their destination (not attacking or loading into anything), this determines whether they attack move or not Position facing - (OPTIONAL) in cases where the squads do a simple move to their destination, this determines their facing once they reach their destination. If facing is not specified, and the squad is moving to a marker, the marker's facing is used. UpgradeBlueprint upgrades - (OPTIONAL) upgrade(s) to instantly apply to squads when they spawn Boolean useMarkerTransform -  (OPTIONAL) if no spawn_facing is passed in, this will determine if the marker's transform should be used (if true) for the squad spawn OR if the marker's direction should be used in which case it will face the same way as the marker.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (598) </b></td>
            </tr>
          </table>
        </p><a name="Util_DifVar"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_DifVar( <span class="arg">Table</span> difficultyVariables, <span class="arg">Integer</span> OPT_difficulty )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Takes in a table and chooses the right variable for the difficulty setting. 1-4 elements. Acquires current difficulty by default. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (154) </b></td>
            </tr>
          </table>
        </p><a name="Util_DotProductRadians"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_DotProductRadians( <span class="arg">Vector</span> vectorA, <span class="arg">Vector</span> vectorB )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the result of the dot product of two items in radians </p>
                <p>The params must be 3D vectors</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (890) </b></td>
            </tr>
          </table>
        </p><a name="Util_ElementCanSee"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_ElementCanSee( <span class="arg">PlayerID/TeamID</span> playerID/teamID, <span class="arg">EGroupID</span> element )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if a Player/Team can see any or all of an SGroup/Squad/EGroup/Entity/Position/Marker </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3284) </b></td>
            </tr>
          </table>
        </p><a name="Util_EntityLimit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_EntityLimit( <span class="arg">Integer</span> OPT_entityLimit )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks the entity count for the world and returns true or false depending on the result. A specific value can be passed in to override the default amount. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2632) </b></td>
            </tr>
          </table>
        </p><a name="Util_FallBackToGarrisonBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_FallBackToGarrisonBuilding( <span class="arg">SGroupID</span> sgroupid, <span class="arg">Integer</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Try to garrison a loadable building within radius that is closer to the first squad of the sgroup than enemy </p>
                <p>Returns the entity id of the building that the squad try to garrison into. Return nil if nothing is found The squad suppression would be resetted before fallling back so that they would not succumb to pinned state</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1798) </b></td>
            </tr>
          </table>
        </p><a name="Util_FindHiddenItem"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_FindHiddenItem( <span class="arg">EGroupID</span> items )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds a hidden position based on what the local player can and can't see </p>
                <p>If no position is found, returns nil</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3111) </b></td>
            </tr>
          </table>
        </p><a name="Util_FindHiddenSpawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_FindHiddenSpawn( <span class="arg">Position</span> origin, <span class="arg">Position</span> destination, <span class="arg">Boolean</span> furthest )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Following a path from origin to destination, finds the HS_CLOSEST/HS_FURTHEST hidden position to/from the destination </p>
                <p>If no position is found, returns origin</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2993) </b></td>
            </tr>
          </table>
        </p><a name="Util_FindVisibleSpawn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_FindVisibleSpawn( <span class="arg">Position</span> origin, <span class="arg">Position</span> destination, <span class="arg">Boolean</span> furthest )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Following a path from origin to destination, finds the HS_CLOSEST/HS_FURTHEST visible position to/from the destination </p>
                <p>If no position is found, returns destination</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3053) </b></td>
            </tr>
          </table>
        </p><a name="Util_ForceRetreatAll"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_ForceRetreatAll( <span class="arg">SGroupID</span> sgroup, <span class="arg">Marker</span> marker, <span class="arg">Boolean</span> aiEncounterDisable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Forces all squads given to retreat, regardless of whether they are on team weapons or not. Disables aiEncounters input (true disables all encounters). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3234) </b></td>
            </tr>
          </table>
        </p><a name="Util_GarrisonNearbyBuilding"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GarrisonNearbyBuilding( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> pos, <span class="arg">Real</span> radius, <span class="arg">Boolean</span> OPT_occupied, <span class="arg">SGroupID</span> OPT_filter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds a nearby building to garrison. can ignore occupied [friendly] buildings. return ID of entity it found, or nil if not found </p>
                <p>Can also filter out groups not to occupy</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2893) </b></td>
            </tr>
          </table>
        </p><a name="Util_GarrisonNearbyVehicle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GarrisonNearbyVehicle( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> pos, <span class="arg">Real</span> radius, <span class="arg">Boolean</span> OPT_occupied, <span class="arg">SGroupID</span> OPT_filter )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds a nearby vehicle to garrison. can ignore occupied [friendly] vehicles. return ID of vehicle it found, or nil if not found, </p>
                <p>Can also filter out groups not to occupy</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2901) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetAngleDifference"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetAngleDifference( <span class="arg">EGroupID</span> item1, <span class="arg">EGroupID</span> item2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the angle (in degrees) between two items </p>
                <p>The items must of of types that can have a direction resolved on them with Util_GetDirection()</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (876) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetClosestMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetClosestMarker( <span class="arg">Variable</span> var, <span class="arg">Table</span> markers )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the closest MarkerID to the entity/marker/pos/egroup/sgroup/squad from the table of markers provided </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2342) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetDirection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetDirection( <span class="arg">EGroupID</span> item )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the heading of an item. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (904) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetDirectionFromAtoB"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetDirectionFromAtoB( <span class="arg">EGroupID</span> a, <span class="arg">EGroupID</span> b )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the direction heading from point a towards point b </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1926) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetDistance"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetDistance( <span class="arg">EGroupID</span> Object1, <span class="arg">EGroupID</span> Object2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the distance between two objects </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (848) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetDistanceSquared"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetDistanceSquared( <span class="arg">EGroupID</span> Object1, <span class="arg">EGroupID</span> Object2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the _squared_ distance between two objects </p>
                <p>This is much cheaper to calculate that Util_GetDistance(), and fine for when you're only comparing results against other squared distances (i.e. to find the closest item)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (862) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetEntitiesByBP"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetEntitiesByBP( <span class="arg">EGroupID</span> sourcegroup, <span class="arg">EGroupID</span> destgroup, <span class="arg">Integer</span> ebp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find all the entities with a given blueprint in sourcegroup and add them to destgroup. </p>
                <p>See also: EGroup_Filter()</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1147) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetFacingFromDirection"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetFacingFromDirection( <span class="arg">Position</span> pos, <span class="arg">Position</span> direction )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts a direction into a facing. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1024) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetHealth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetHealth( <span class="arg">EGroupID</span> var )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Determines the health percentage of a given object </p>
                <p>Returns average health if the object is a group</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3199) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetMouseoverSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetMouseoverSGroup(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a unique SGroup used to hold mouseover squads obtained from Util_AddMouseoverSquadToSGroup </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2591) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetOffsetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetOffsetPosition( <span class="arg">EGroupID</span> pos, <span class="arg">Integer</span> offset, <span class="arg">Real</span> distance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a position relative to a entity/squad/egroup/sgroup/marker/position's current position and orientation. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (998) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetPlayerOwner"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetPlayerOwner( <span class="arg">EGroupID</span> Object )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the player owner for any of: entity, squad, egroup, sgroup, player. for groups, the first item is used. Returns nil for world owned or empty groups </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (809) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetPosition( <span class="arg">Variable</span> var )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a position from entity/marker/pos/egroup/sgroup/squad </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2196) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetPositionAwayFromPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetPositionAwayFromPlayer( <span class="arg">EGroupID</span> pos, <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> OPT_searchRadius, <span class="arg">Integer</span> OPT_distance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a random position within an area that is not near a player </p>
                <p>Useful for dropping artillery NEAR a player, but not on him, for example. searchRadius is the area to look for the location in.  Distance is how far from the player's units the position must be.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2222) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetPositionFromAtoB"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetPositionFromAtoB( <span class="arg">MarkerID/Pos</span> a, <span class="arg">MarkerID/Pos</span> b, <span class="arg">Real</span> distance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a position that is distance metres from point A, headed in the direction of point B. </p>
                <p>You can also pass in a percentage (0.0 to 1.0) instead of a distance in metres.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1881) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetRandomHiddenPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetRandomHiddenPosition( <span class="arg">EGroupID</span> items )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Finds a hidden position based on what the local player can and can't see </p>
                <p>If no position is found, returns nil</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3155) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetRandomPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetRandomPosition( <span class="arg">Real</span> OPT_range, <span class="arg">Boolean</span> OPT_hidden )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a random position either within the marker's proximity or with a pos and range provided. Range is ignored for rectangular markers </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2268) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetRelationship"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetRelationship( <span class="arg">EGroupID</span> Object_1, <span class="arg">EGroupID</span> Object_2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Gets the relationship between two of: entity, squad, egroup, sgroup, player. for groups, the first item is used. returns R_ENEMY, R_ALLY, R_NEUTRAL, R_UNDEFINED, or nil (if world owned or invalid parameters) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (982) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetRelativeOffset"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetRelativeOffset( <span class="arg">EGroupID</span> element, <span class="arg">EGroupID</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a relative offset position to an element </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1035) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetSquadsByBP"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetSquadsByBP( <span class="arg">SGroupID</span> sourcegroup, <span class="arg">SGroupID</span> destgroup, <span class="arg">Integer</span> sbp )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find all the squads with a given blueprint in sourcegroup and add them to destgroup. </p>
                <p>See also: SGroup_Filter()</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1133) </b></td>
            </tr>
          </table>
        </p><a name="Util_GetTrailingNumber"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_GetTrailingNumber( <span class="arg">String</span> val )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns trailing numbers from a string, if it exists, nil otherwise. E.G. "marker23" would return 23. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1159) </b></td>
            </tr>
          </table>
        </p><a name="Util_HasPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_HasPosition( <span class="arg">Variable</span> var )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if given entity/marker/pos/egroup/sgroup/squad has a position; if false, Util_GetPosition will fail. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2168) </b></td>
            </tr>
          </table>
        </p><a name="Util_HidePlayerForNIS"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_HidePlayerForNIS( <span class="arg">PlayerID</span> player, <span class="arg">Boolean</span> hide )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Hides all of a player's squads and/or buildings </p>
                <p>Doesn't hide buildings a player is in, or any base structures. Only items like sandbags, tanktraps, mg nests, etc. Put multiple playerIDs in a table to hide many players together, or use ALL for the playerID to apply to all players at once.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2603) </b></td>
            </tr>
          </table>
        </p><a name="Util_IsSequenceSkipped"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_IsSequenceSkipped(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the currently running sequence has been skipped </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1209) </b></td>
            </tr>
          </table>
        </p><a name="Util_Kill"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_Kill( <span class="arg">EGroupID</span> var )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kills a given object </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3216) </b></td>
            </tr>
          </table>
        </p><a name="Util_LogSyncWpn"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_LogSyncWpn( <span class="arg">SGroupID</span> syncweapon, <span class="arg">Boolean</span> OPT_kill )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Tracks a syncweapon ID and destroys it (by default) or makes it uncapturable (if kill is set to false) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3348) </b></td>
            </tr>
          </table>
        </p><a name="Util_MarkerFX"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_MarkerFX( <span class="arg">String</span> markername, <span class="arg">String</span> eventfile )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play an events file at a given markers location </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1173) </b></td>
            </tr>
          </table>
        </p><a name="Util_MissionTitle"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_MissionTitle( <span class="arg">String</span> title, <span class="arg">Integer</span> OPT_time_fade_in, <span class="arg">Integer</span> OPT_lifetime, <span class="arg">Integer</span> OPT_time_fade_out )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play the mission title fade. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1577) </b></td>
            </tr>
          </table>
        </p><a name="Util_NewHUDFeatureEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_NewHUDFeatureEvent( <a href="enum_list.htm#HUDFeatureType">HUDFeatureType</a> newHUDFeature, <span class="arg">String</span> featureText, <span class="arg">String</span> featureIcon, <span class="arg">Real</span> duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calls UI_NewHUDFeature() as an IntelEvent. Will get queued as any other event. See UI_NewHUDFeature() for parameter details. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3723) </b></td>
            </tr>
          </table>
        </p><a name="Util_PlayMovie"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_PlayMovie( <span class="arg">String</span> name, <span class="arg">Integer</span> OPT_fadeOut, <span class="arg">Integer</span> OPT_fadeIn, <span class="arg">LuaFunction</span> OPT_onComplete, <span class="arg">Integer</span> OPT_delay, <span class="arg">Boolean</span> OPT_onCompleteAfterMovie )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play a movie. </p>
                <p>Plays a movie file after fading out the screen. Fades back in and triggers onComplete once it ends. If fadeIn &lt; 0, does not face back in once complete. If onCompleteAfterMovie is true, the onComplete function will play as soon as the movie is over, instead of after the fade-in</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1301) </b></td>
            </tr>
          </table>
        </p><a name="Util_PlayMusic"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_PlayMusic( <span class="arg">String</span> name )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays music from the Data:Sound folder, and stores the music track so it can be resumed after a save/load </p>
                <p>The new music will phase out the old one. There can only be one music playing at anytime.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2852) </b></td>
            </tr>
          </table>
        </p><a name="Util_PrintIf"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_PrintIf(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Simply prints something if the first variable is true </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3644) </b></td>
            </tr>
          </table>
        </p><a name="Util_PrintObject"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_PrintObject( <span class="arg">Object</span> obj, <span class="arg">Integer</span> OPT_max_depth, <span class="arg">String</span> OPT_data_type, <span class="arg">Function</span> OPT_print_func )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prints out the entire contents of an Object </p>
                <p>This is most useful when used in conjunction with fatal() or bug() to populate the log file. Objects can be anything (Player, SGroup, Int, Table, String, etc.), but this is most useful for Tables</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2919) </b></td>
            </tr>
          </table>
        </p><a name="Util_PrintTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_PrintTable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Simply prints out everything in a table including nested tables </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3652) </b></td>
            </tr>
          </table>
        </p><a name="Util_PrintUnitTable"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_PrintUnitTable(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Prints out a unit table. indent is the number of tabs at the beginning of each line </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3673) </b></td>
            </tr>
          </table>
        </p><a name="Util_ReloadScript"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_ReloadScript(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Reloads the running scar script. Current running rules would also be updated to the redefined functioin. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1950) </b></td>
            </tr>
          </table>
        </p><a name="Util_RestoreMusic"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_RestoreMusic(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Resumes playing the music track that was last triggered i.e. after a save/load </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2863) </b></td>
            </tr>
          </table>
        </p><a name="Util_ScarPos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_ScarPos( <span class="arg">Real</span> xpos, <span class="arg">Real</span> zpos, <span class="arg">Real</span> ypos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Converts a 2D top down position to a 3D ScarPosition. returns Position, if y-height is nil, y-height = ground height, terrain ground or walkable </p>
                <p>3D ScarPositions have the x axis left to right, the z axis in to out, and the y axis down to up (y axis represents the height of the terrain).  Use this function to convert a top-down 2D position to a 3D world position.\n\n Note: (0,0) is in the center of the map.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (480) </b></td>
            </tr>
          </table>
        </p><a name="Util_SetPlayerCanSkipSequence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_SetPlayerCanSkipSequence( <span class="arg">LuaFunction</span> event, <span class="arg">LuaFunction</span> skippedCallback, <span class="arg">Boolean</span> noFadeIn, <span class="arg">Integer</span> OPT_fadeInTime )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets it so that a player can skip a scripted sequence. When the skip key is pressed, calls back the given function as a post-sequence setup. noFadeIn stops the system from fading back into gameplay when finished. Call Util_SetPlayerUnableToSkipSequence() when the sequence is finished to disable </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1219) </b></td>
            </tr>
          </table>
        </p><a name="Util_SetPlayerOwner"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_SetPlayerOwner( <span class="arg">EGroupID</span> Object, <span class="arg">PlayerID</span> owner, <span class="arg">Boolean</span> OPT_bApplyToSquadsHeld=true )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets the player owner for an entity, squad, egroup or sgroup. Also sets player owner of whatever is garrisoned inside them </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (946) </b></td>
            </tr>
          </table>
        </p><a name="Util_SetPlayerUnableToSkipSequence"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_SetPlayerUnableToSkipSequence( <span class="arg">LuaFunction</span> event, <span class="arg">LuaFunction</span> skippedCallback, <span class="arg">Boolean</span> noFadeIn )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Disables Util_SetPlayerCanSkipSequence </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1261) </b></td>
            </tr>
          </table>
        </p><a name="Util_SortPositionsByClosest"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_SortPositionsByClosest( <span class="arg">EGroupID</span> origin, <span class="arg">Table</span> positions )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table of positions sorted from closest to furthest (or furthes to closest if reverse is true) from the origin </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3434) </b></td>
            </tr>
          </table>
        </p><a name="Util_StartAmbient"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_StartAmbient( <span class="arg">LuaFunction</span> func )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play a Speech Ambient. These are the lowest priority, and will be bumped by Intel Events or NIS's. </p>
                <p>This function should used instead of Event_Start because it handles priorities.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1359) </b></td>
            </tr>
          </table>
        </p><a name="Util_StartIntel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_StartIntel( <span class="arg">LuaFunction</span> func )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play an Intel Event. These are medium priority, and will interrupt a ambient, but not an NIS. </p>
                <p>This function should used instead of Event_Start because it handles priorities.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1181) </b></td>
            </tr>
          </table>
        </p><a name="Util_StartNIS"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_StartNIS( <span class="arg">LuaFunction</span> NIS )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Plays an NIS. The NIS should have a call to NIS_START(details) at the beginning, and NIS_END() at the end. </p>
                <p>Example details table keys: {style = NIS_OPENING, NIS_MID or NIS_CLOSING, exemptions = {sg_unit_to_not_despawn}, revealFOW = true, callbackStart = func, callbackEnd = func}</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\nis.scar] (25) </b></td>
            </tr>
          </table>
        </p><a name="Util_StartQuickIntel"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_StartQuickIntel( <span class="arg">String</span> actor, <span class="arg">String</span> speech )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Play a quick, one-line Intel event.  These are medium priority, and will interrupt ambient, but not an NIS. </p>
                <p>Use this when playing a single line.  For multi-line events, use Util_StartIntel</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1282) </b></td>
            </tr>
          </table>
        </p><a name="Util_StringSplit"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_StringSplit(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Splits a string into a table of substrings based on a given separator. Comma is used as the default separator if none is provided. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3700) </b></td>
            </tr>
          </table>
        </p><a name="Util_TableContains"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_TableContains( <span class="arg">Table</span> targetTable, <span class="arg">Object</span> obj )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Checks the first layer of a table and looks for a specified Object, returns true if found. </p>
                <p>Objects can be anything (Player, SGroup, Int, Table, String, etc.)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2978) </b></td>
            </tr>
          </table>
        </p><a name="Util_ToggleAllowIntelEvents"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_ToggleAllowIntelEvents(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Debug function used to toggle whether or not IntelEvents are played. Only works with -dev parameter </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (3713) </b></td>
            </tr>
          </table>
        </p><a name="Util_TriggerEvent"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_TriggerEvent( <span class="arg">PlayerID</span> playerid, <span class="arg">EGroupID</span> position, <span class="arg">Integer</span> range, <span class="arg">LuaFunction</span> func, <span class="arg">Boolean</span> non_combat, <span class="arg">Boolean</span> onscreen_only, <span class="arg">Integer</span> onscreen_duration )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Library function to trigger NIS event under a certain sets of conditions.  NOTE: if checking against a marker DO NOT specify a range.  The range of the marker set in the WorldBuilder will be used. </p>
                <p>triggering event when one of the player's squads come near a particular SGroup, EGroup, Marker, or Position and that squad is onscreen, and that squad is not in combat. 6 arguments when using marker, 7 arguments when using position, egroup and sgroup with the additional range value non_combat set to TRUE means the squad cannot be in combat if the event is to be triggered. onscreen_only set to TRUE means the squad must be onscreen if the event is to be triggered.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (1608) </b></td>
            </tr>
          </table>
        </p><a name="Util_UnitCounts"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Util_UnitCounts( <span class="arg">Boolean</span> world OR playerID player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a table containing either the total or a specific player's squad count, entity count, and vehicle count. </p>
                <p>table can be accessed as scene below Get Player Example:\n local t = Util_UnitCounts(player1)\n print(t.squad)\n print(t.entity)\n print(t.vehicle)\n Get World Example:\n local t = Util_UnitCounts(true)\n print(t.squad)\n print(t.entity)\n print(t.vehicle)\n Alternate Format:\n print(Util_UnitCounts(true).squad)\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2673) </b></td>
            </tr>
          </table>
        </p><a name="World_KillAllNeutralEntitesNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_KillAllNeutralEntitesNearMarker( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kills ALL world entities near a marker </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2326) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
      <p><a name="Group_scardoc;World"></a><table width="100%">
          <tr>
            <td width="100%" class="tabletitle"><b>scardoc;World</b></td>
          </tr>
          <tr>
            <td width="100%" class="tablesubtitle"><b>Functions</b></td>
          </tr>
        </table><a name="Marker_CleanUpTheDead"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Marker_CleanUpTheDead( <span class="arg">PlayerID</span> player, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kill off a specific player's dead bodies (enter ALL to clean them all up) in a marker radius </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2137) </b></td>
            </tr>
          </table>
        </p><a name="Vector_Length"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Vector_Length( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Calculates the length of the provided vector </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (439) </b></td>
            </tr>
          </table>
        </p><a name="Vector_Lerp"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Vector_Lerp( <span class="arg">Real</span> factor, <span class="arg">Position</span> pos1, <span class="arg">Position</span> pos2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Linearly interpolates between the two provided vectors based on the provided factor </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (445) </b></td>
            </tr>
          </table>
        </p><a name="Vector_Normalize"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 Vector_Normalize( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the normalized version of the provided vector </p>
                <p>Returns a vector pointing the same direction as the provided vector, but shortened/elongated to a length of 1. Don't pass in a vector of length 0, or you'll get a divide-by-zero error!</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (433) </b></td>
            </tr>
          </table>
        </p><a name="World_CalculateEntitiesAveragePositionInArea"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_CalculateEntitiesAveragePositionInArea( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> pos, <span class="arg">Real</span> radius, <a href="enum_list.htm#OwnerType">OwnerType</a> ownerType, <span class="arg">Boolean</span> onlyEntitiesInSquads )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the average positions of the entities in the area </p>
                <p>Owner type could be OT_Player, OT_Ally, OT_Enemy or OT_Neutral It filters out entities not belonging to a squad, when onlyEntitiesInSquads is true</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1205) </b></td>
            </tr>
          </table>
        </p><a name="World_ChangeZoneInteractivity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_ChangeZoneInteractivity( <span class="arg">Integer</span> targetInteractivity, <span class="arg">Integer</span> adjustedInteractivity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Changes target interactivity zones to adjusted interactivity (255 max), probably only safe to use post NIS </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1478) </b></td>
            </tr>
          </table>
        </p><a name="World_CleanUpTheDead"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_CleanUpTheDead( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Kill off a specific player's dead bodies (enter ALL to clean them all up) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2112) </b></td>
            </tr>
          </table>
        </p><a name="World_DestroyWallsNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_DestroyWallsNearMarker( <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Destroys walls (entities with a wall_ext) near a marker </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1485) </b></td>
            </tr>
          </table>
        </p><a name="World_DistanceEGroupToPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_DistanceEGroupToPoint( <span class="arg">EGroupID</span> egroup, <span class="arg">Position</span> p1, <span class="arg">Boolean</span> closest )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the distance between a squad group and a point. </p>
                <p>Pass in true for 3rd parameter to get the closest point and pass in false to get the furthest point.  The closest/furthest point is calculated on a per entity basis.  So the closest distance would be that of the closest entity.\n Also note, it is an error to call this function with an empty group.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (186) </b></td>
            </tr>
          </table>
        </p><a name="World_DistancePointToPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_DistancePointToPoint( <span class="arg">Position</span> p1, <span class="arg">Position</span> p2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the distance between two points. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (170) </b></td>
            </tr>
          </table>
        </p><a name="World_DistanceSGroupToPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_DistanceSGroupToPoint( <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> p1, <span class="arg">Boolean</span> closest )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the distance between a squad group and a point. </p>
                <p>Pass in true for 3rd parameter to get the closest point and pass in false to get the furthest point.  The closest/furthest point is calculated on a per squadron basis.  So the closest distance would be that of the closest squadron.\n It is an error to call this function with an empty group.  Check the group size with SquadGroup_Count( ) first.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (233) </b></td>
            </tr>
          </table>
        </p><a name="World_DistanceSquaredPointToPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_DistanceSquaredPointToPoint( <span class="arg">Position</span> p1, <span class="arg">Position</span> p2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the distance squared between two points. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (176) </b></td>
            </tr>
          </table>
        </p><a name="World_EnableReplacementObjectForEmptyPlayers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_EnableReplacementObjectForEmptyPlayers( <span class="arg">Boolean</span> enable )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Determines whether empty players get converted to null resource points. </p>
                <p>*** You must call this from OnGameSetup, otherwise it's too late *** see Attribute Editor under tuning/player/empty_player_replacement_object</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1536) </b></td>
            </tr>
          </table>
        </p><a name="World_EnableSharedLineOfSight"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_EnableSharedLineOfSight( <span class="arg">PlayerID</span> p0, <span class="arg">PlayerID</span> p1, <span class="arg">Boolean</span> enableSharedVision )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables shared line of sight between these two players </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (756) </b></td>
            </tr>
          </table>
        </p><a name="World_GetAllNeutralEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetAllNeutralEntities( <span class="arg">EGroupID</span> egroup )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the egroup, then finds and adds all neutral entities to it </p>
                <p>Returns the number of entities found</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1090) </b></td>
            </tr>
          </table>
        </p><a name="World_GetBlueprintEntities"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetBlueprintEntities( <span class="arg">ScarEntityPBG</span> pbg, <span class="arg">EGroupID</span> outEntities )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns all entities with this blueprint - warning this function iterates over all entities so it is slow </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (550) </b></td>
            </tr>
          </table>
        </p><a name="World_GetClosest"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetClosest( <span class="arg">Variable</span> var, <span class="arg">EGroupID</span> items )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the closest object from the table of marker/pos/egroup/sgroup to the closest marker/pos/egroup/sgroup specified </p>
                <p>The table may mix together objects of different types.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2013) </b></td>
            </tr>
          </table>
        </p><a name="World_GetCoverPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetCoverPoints( <span class="arg">EGroupID</span> group )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Appends all cover points to an egroup. </p>
                <p>Takes an egroup where you want to put the points. If this 'group' already contains a cover point, this cover point will not be added a second time. This function does not clear the contents of 'group'.\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (659) </b></td>
            </tr>
          </table>
        </p><a name="World_GetEntitiesNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetEntitiesNearMarker( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">MarkerID</span> marker, <a href="enum_list.htm#OwnerType">OwnerType</a> ownerType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the egroup, then finds and adds entities near the marker to the egroup </p>
                <p>Returns the number of entities found Owner type could be OT_Player, OT_Ally, OT_Enemy or OT_Neutral Entities belonging to a squad would not be added to the egroup</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1161) </b></td>
            </tr>
          </table>
        </p><a name="World_GetEntitiesNearPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetEntitiesNearPoint( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">Position</span> pos, <span class="arg">Real</span> radius, <a href="enum_list.htm#OwnerType">OwnerType</a> ownerType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the egroup, then finds and adds entities near the point to the egroup </p>
                <p>Returns the number of entities found Owner type could be OT_Player, OT_Ally, OT_Enemy or OT_Neutral Entities belonging to a squad would not be added to the egroup</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1046) </b></td>
            </tr>
          </table>
        </p><a name="World_GetEntitiesWithinTerritorySector"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetEntitiesWithinTerritorySector( <span class="arg">PlayerID</span> player, <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> inSectorID, <a href="enum_list.htm#OwnerType">OwnerType</a> ownerType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the egroup, then finds and adds entities within the territory sector to the egroup </p>
                <p>Returns the number of entities found Owner type could be OT_Player, OT_Ally, OT_Enemy or OT_Neutral Entities belonging to a squad would not be added to the egroup</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1352) </b></td>
            </tr>
          </table>
        </p><a name="World_GetFurthest"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetFurthest( <span class="arg">Variable</span> var, <span class="arg">LuaTable</span> items )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the furthest object from the table of marker/pos/egroup/sgroup to the furthest marker/pos/egroup/sgroup specified. </p>
                <p>The table may mix together objects of different types.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2065) </b></td>
            </tr>
          </table>
        </p><a name="World_GetGameTicks"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetGameTicks(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the total number of game (simulation) ticks elapsed. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (96) </b></td>
            </tr>
          </table>
        </p><a name="World_GetGameTime"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetGameTime(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the total game time in seconds. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (102) </b></td>
            </tr>
          </table>
        </p><a name="World_GetHeightAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetHeightAt( <span class="arg">Real</span> x, <span class="arg">Real</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns the height of ground at 2D pos x,y </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (408) </b></td>
            </tr>
          </table>
        </p><a name="World_GetInteractionStageAtPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetInteractionStageAtPoint( <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the interaction stage of the cell in the provided position </p>
                <p>Returns a value between 0 - 63</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (425) </b></td>
            </tr>
          </table>
        </p><a name="World_GetLength"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetLength(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total playable length of the game world (z coordinate) </p>
                <p>Since the center of the map is 0,0 the world z range is (-l/2 -&gt; l/2)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (402) </b></td>
            </tr>
          </table>
        </p><a name="World_GetMetadataBiomePBGName"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetMetadataBiomePBGName( <span class="arg">String</span> layerName, <span class="arg">Real</span> x, <span class="arg">Real</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the Biome PBG's name of the specified terrain metadata layer and the specified coordinates. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1632) </b></td>
            </tr>
          </table>
        </p><a name="World_GetMetadataLayerBoolean"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetMetadataLayerBoolean( <span class="arg">String</span> layerName, <span class="arg">Real</span> x, <span class="arg">Real</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the boolean value of the specified terrain metadata layer and the specified coordinates. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1562) </b></td>
            </tr>
          </table>
        </p><a name="World_GetMetadataLayerInteger"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetMetadataLayerInteger( <span class="arg">String</span> layerName, <span class="arg">Real</span> x, <span class="arg">Real</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the integer value of the specified terrain metadata layer and the specified coordinates. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1576) </b></td>
            </tr>
          </table>
        </p><a name="World_GetMetadataLayerNumber"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetMetadataLayerNumber( <span class="arg">String</span> layerName, <span class="arg">Real</span> x, <span class="arg">Real</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the numeric value of the specified terrain metadata layer and the specified coordinates. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1590) </b></td>
            </tr>
          </table>
        </p><a name="World_GetMetadataLayerPBG"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetMetadataLayerPBG( <span class="arg">String</span> layerName, <span class="arg">Real</span> x, <span class="arg">Real</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the PBG of the specified terrain metadata layer and the specified coordinates. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1618) </b></td>
            </tr>
          </table>
        </p><a name="World_GetMetadataLayerString"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetMetadataLayerString( <span class="arg">String</span> layerName, <span class="arg">Real</span> x, <span class="arg">Real</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Get the PBG of the specified terrain metadata layer and the specified coordinates. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1604) </b></td>
            </tr>
          </table>
        </p><a name="World_GetNearestInteractablePoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetNearestInteractablePoint( <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns the nearest intractable position to the supplied position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (414) </b></td>
            </tr>
          </table>
        </p><a name="World_GetNeutralEntitiesNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetNeutralEntitiesNearMarker( <span class="arg">EGroupID</span> egroup, <span class="arg">MarkerID</span> marker )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find and add neutral entities near the marker to the egroup </p>
                <p>Returns the number of entities found Entities belonging to a squad would not be added to the egroup</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1192) </b></td>
            </tr>
          </table>
        </p><a name="World_GetNeutralEntitiesNearPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetNeutralEntitiesNearPoint( <span class="arg">EGroupID</span> egroup, <span class="arg">Position</span> pos, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find and add neutral entities near the point to the egroup </p>
                <p>Returns the number of entities found Entities belonging to a squad would not be added to the egroup</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1083) </b></td>
            </tr>
          </table>
        </p><a name="World_GetNeutralEntitiesWithinTerritorySector"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetNeutralEntitiesWithinTerritorySector( <span class="arg">EGroupID</span> egroup, <span class="arg">Integer</span> sectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find and add neutral entities within the territory sector to the egroup </p>
                <p>Returns the number of entities found Entities belonging to a squad would not be added to the egroup</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1428) </b></td>
            </tr>
          </table>
        </p><a name="World_GetNumEntitiesNearPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetNumEntitiesNearPoint( <span class="arg">ScarEntityPBG</span> ebp, <span class="arg">Position</span> pos, <span class="arg">Real</span> radius )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the number of entities of the same ebp in the sphere volume </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (924) </b></td>
            </tr>
          </table>
        </p><a name="World_GetNumStrategicPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetNumStrategicPoints(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of strategic points on this map (does not count strat. objectives) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (580) </b></td>
            </tr>
          </table>
        </p><a name="World_GetOffsetPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetOffsetPosition( <span class="arg">Position</span> position, <span class="arg">Position</span> heading, <span class="arg">Integer</span> offset, <span class="arg">Real</span> distance )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a position that is offset a certain distance from the position/heading passed in. see ScarUtil.scar for explanation of 'offset' parameter. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (276) </b></td>
            </tr>
          </table>
        </p><a name="World_GetOffsetPositionRelativeToFacingTarget"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetOffsetPositionRelativeToFacingTarget( <span class="arg">Position</span> position, <span class="arg">Position</span> facingTarget, <span class="arg">Real</span> offset )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Offsets the input position relative to the facing target </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (307) </b></td>
            </tr>
          </table>
        </p><a name="World_GetOffsetVectorPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetOffsetVectorPosition( <span class="arg">Position</span> position, <span class="arg">Position</span> heading, <span class="arg">Position</span> offset )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a position that is offset from the input position by the offset vector rotated by the direction supplied </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (293) </b></td>
            </tr>
          </table>
        </p><a name="World_GetPlayerAt"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetPlayerAt( <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the player at a given index, numbers start at one </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (124) </b></td>
            </tr>
          </table>
        </p><a name="World_GetPlayerCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetPlayerCount(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the total number of players in the world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (108) </b></td>
            </tr>
          </table>
        </p><a name="World_GetPlayerIndex"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetPlayerIndex( <span class="arg">PlayerID</span> player )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the player index given the Player* </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (147) </b></td>
            </tr>
          </table>
        </p><a name="World_GetPossibleSquadsBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetPossibleSquadsBlueprint( <span class="arg">ScarRacePBG</span> racePBG, <span class="arg">Integer</span> index )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the blueprint of a chosen squad for a race </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (534) </b></td>
            </tr>
          </table>
        </p><a name="World_GetPossibleSquadsCount"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetPossibleSquadsCount( <span class="arg">ScarRacePBG</span> racePBG )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the number of types of squads a race can build </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (522) </b></td>
            </tr>
          </table>
        </p><a name="World_GetRaceBlueprint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetRaceBlueprint( <span class="arg">String</span> racename )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the race index of a race, given its name (from the ME). </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (711) </b></td>
            </tr>
          </table>
        </p><a name="World_GetRand"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetRand( <span class="arg">Integer</span> min, <span class="arg">Integer</span> max )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns a random integer with range [min, max] </p>
                <p>It is recommended you use this instead of luas math.random function</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (351) </b></td>
            </tr>
          </table>
        </p><a name="World_GetScenarioMaxPlayers"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetScenarioMaxPlayers(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns maximum number of players in this match </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (164) </b></td>
            </tr>
          </table>
        </p><a name="World_GetSpawnablePosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetSpawnablePosition( <span class="arg">Position</span> around, <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Given any position in the world, this function will return position safe for spawning a given entity </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (457) </b></td>
            </tr>
          </table>
        </p><a name="World_GetSquadsNearMarker"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetSquadsNearMarker( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">MarkerID</span> marker, <a href="enum_list.htm#OwnerType">OwnerType</a> ownerType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the sgroup, then finds and adds squads near the marker to the sgroup </p>
                <p>Returns the number of squads found Owner type could be OT_Player, OT_Ally, OT_Enemy or OT_Neutral This function is faster if radius is small and/or number of squads to search for is large</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1124) </b></td>
            </tr>
          </table>
        </p><a name="World_GetSquadsNearPoint"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetSquadsNearPoint( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Position</span> pos, <span class="arg">Real</span> radius, <a href="enum_list.htm#OwnerType">OwnerType</a> ownerType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the sgroup, then finds and adds squads near the point to the sgroup </p>
                <p>Returns the number of squads found Owner type could be OT_Player, OT_Ally, OT_Enemy or OT_Neutral This function is faster if radius is small and/or number of squads to search for is large</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (996) </b></td>
            </tr>
          </table>
        </p><a name="World_GetSquadsWithinTerritorySector"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetSquadsWithinTerritorySector( <span class="arg">PlayerID</span> player, <span class="arg">SGroupID</span> sgroup, <span class="arg">Integer</span> inSectorID, <a href="enum_list.htm#OwnerType">OwnerType</a> ownerType )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Clears the sgroup, then finds and adds squads within territory sector identified by sector ID </p>
                <p>Returns the number of squads found Owner type could be OT_Player, OT_Ally, OT_Enemy or OT_Neutral</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1267) </b></td>
            </tr>
          </table>
        </p><a name="World_GetStrategyPoints"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetStrategyPoints( <span class="arg">EGroupID</span> group, <span class="arg">Boolean</span> bIncludeVP )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Appends all the strategic resource points to an egroup. </p>
                <p>takes the egroup where you want to put the points, and 2nd parameter is a bool which indicates if you want to include VPs or not If 'group' already contains an entity from 'grouptoadd' it will not be added.\n This function does not clear the contents of 'group'.\n Example: World_GetStrategyPoints(mypointgroup, true) --puts all the points including vps into mypointgroup</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (607) </b></td>
            </tr>
          </table>
        </p><a name="World_GetTeamTerritoryGaps"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetTeamTerritoryGaps( <span class="arg">Integer</span> sectorID1, <span class="arg">Integer</span> sectorID2, <span class="arg">StackVarTable</span> results )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns one or more sector IDs that would connect two unconnected pieces of territory. return value is through a table (since there can be more than one way to connect territory) - each entry in this table is a table of sector IDs. </p>
                <p>Currently only finds single gaps - i.e. if two territories are 'almost' connected.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (810) </b></td>
            </tr>
          </table>
        </p><a name="World_GetTerrainCellType"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetTerrainCellType( <span class="arg">Real</span> x, <span class="arg">Real</span> y )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>returns the cell type of the cell in the specified coordinates. 0 = Sky, 1 = Land, 2 = Water. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1556) </b></td>
            </tr>
          </table>
        </p><a name="World_GetTerritorySectorID"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetTerritorySectorID( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Return the sector ID from the position </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1434) </b></td>
            </tr>
          </table>
        </p><a name="World_GetTerritorySectorPosition"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetTerritorySectorPosition( <span class="arg">Integer</span> inSectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the position of a sectors generator point. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1441) </b></td>
            </tr>
          </table>
        </p><a name="World_GetWidth"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_GetWidth(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns the total playable width of the game world (x coordinate) </p>
                <p>Since the center of the map is 0,0 the world x range is (-w/2 -&gt; w/2)</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (395) </b></td>
            </tr>
          </table>
        </p><a name="World_IsCurrentInteractionStageActive"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_IsCurrentInteractionStageActive( <span class="arg">Integer</span> stage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether the interaction stage is currently active </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1454) </b></td>
            </tr>
          </table>
        </p><a name="World_IsInSupply"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_IsInSupply( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if position is in-supply for the given player </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (885) </b></td>
            </tr>
          </table>
        </p><a name="World_IsMultiplayerGame"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_IsMultiplayerGame(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether or not the game type of this world is multiplayer </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (90) </b></td>
            </tr>
          </table>
        </p><a name="World_IsPointInPlayerTerritory"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_IsPointInPlayerTerritory( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> position )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if position if part of the entity territory </p>
                <p>Note that this does not care if territory is in supply or not</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (912) </b></td>
            </tr>
          </table>
        </p><a name="World_IsPosOnWalkableWall"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_IsPosOnWalkableWall( <span class="arg">Position</span> p )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns if a position is on walkable wall </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1664) </b></td>
            </tr>
          </table>
        </p><a name="World_IsReplay"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_IsReplay(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns TRUE if the game is currently in a replay state. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (114) </b></td>
            </tr>
          </table>
        </p><a name="World_IsTerritorySectorOwnedByPlayer"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_IsTerritorySectorOwnedByPlayer( <span class="arg">PlayerID</span> player, <span class="arg">Integer</span> inSectorID )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Find if player has ownership to this territory sector. </p>
                <p>Other players on the same team would also have the ownership to the sector</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1250) </b></td>
            </tr>
          </table>
        </p><a name="World_OwnsEGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_OwnsEGroup( <span class="arg">EGroupID</span> egroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ANY or ALL of the entities in the group are owned by the world (i.e. neutral) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2099) </b></td>
            </tr>
          </table>
        </p><a name="World_OwnsEntity"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_OwnsEntity( <span class="arg">EntityID</span> entity )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is owned by the world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (338) </b></td>
            </tr>
          </table>
        </p><a name="World_OwnsSGroup"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_OwnsSGroup( <span class="arg">SGroupID</span> sgroup, <span class="arg">Boolean</span> all )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns whether ANY or ALL of the squads in the group are owned by the world (i.e. neutral) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\assets\engine\scar\scarutil.scar] (2086) </b></td>
            </tr>
          </table>
        </p><a name="World_OwnsSquad"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_OwnsSquad( <span class="arg">SquadID</span> squad )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the squad is owned by the world </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (344) </b></td>
            </tr>
          </table>
        </p><a name="World_PointPointProx"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_PointPointProx( <span class="arg">Position</span> p1, <span class="arg">Position</span> p2, <span class="arg">Real</span> prox )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if two world positions are in proximity to each other </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (791) </b></td>
            </tr>
          </table>
        </p><a name="World_Pos"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_Pos( <span class="arg">Real</span> x, <span class="arg">Real</span> y, <span class="arg">Real</span> z )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Creates a new Position object. </p>
                <p>A position object is basically a table with an x, y, and z attribute.  You can directly access the individual components in the same way that you would access a field in a table.\n\n Example:\n --* lua script snip\n local pos = World_Pos(2, 0, 0)\n pos.x = pos.x + 1\n print pos.x -- this will print 3\n --* lua script snip\n</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (326) </b></td>
            </tr>
          </table>
        </p><a name="World_PosInBounds"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_PosInBounds( <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns if given position is in playable area. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (332) </b></td>
            </tr>
          </table>
        </p><a name="World_Reset"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_Reset(  )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>DO NOT CALL UNLESS YOU DO AUTOMATED TESTING </p>
                <p>This resets the world into a state comparable to a fresh scenario start. Used in automated testing to avoid tests being dependent on each other.</p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (384) </b></td>
            </tr>
          </table>
        </p><a name="World_SetAllInteractiveStagesVisibility"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_SetAllInteractiveStagesVisibility( <span class="arg">Boolean</span> visibilityStatus )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Unlocks all the interaction stages </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1471) </b></td>
            </tr>
          </table>
        </p><a name="World_SetDesignerSupply"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_SetDesignerSupply( <span class="arg">Position</span> point, <span class="arg">Boolean</span> bSupply )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Sets a particular sector in the world as a supply provider (or not) </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (901) </b></td>
            </tr>
          </table>
        </p><a name="World_SetInteractionStage"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_SetInteractionStage( <span class="arg">Integer</span> stage )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Set current interaction stage to value supplied, must be &gt;= 0 </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1460) </b></td>
            </tr>
          </table>
        </p><a name="World_SetSharedLineOfSightEnabledAndMergeExploredMaps"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_SetSharedLineOfSightEnabledAndMergeExploredMaps( <span class="arg">PlayerID</span> p0, <span class="arg">PlayerID</span> p1, <span class="arg">Boolean</span> enableSharedVision )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Enables or disables shared line of sight between these two players, and merges explored maps when needed </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (765) </b></td>
            </tr>
          </table>
        </p><a name="World_SpawnDemolitionCharge"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_SpawnDemolitionCharge( <span class="arg">PlayerID</span> player, <span class="arg">Position</span> pos )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>spawn a demolitions charge at a position, 'player' is the one that owns the demolitions and can detonate them. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (1115) </b></td>
            </tr>
          </table>
        </p><a name="World_TeamTerritoryPointsConnected"></a><p>
          <table width="100%" border="0">
            <tr>
              <td colspan="2"><span class="function"><span class="arg"></span>
		 World_TeamTerritoryPointsConnected( <span class="arg">Integer</span> team_index, <span class="arg">Position</span> p1, <span class="arg">Position</span> p2 )
	</span></td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td>
                <p>Returns true if the two points are in the same territory region, and owned by the specified territory team, Returns false otherwise. </p>
              </td>
            </tr>
            <tr>
              <td width="3%"> </td>
              <td><em>Source: </em><b>[E:\cardinal_BuildSystem_incoming\engine\source\runtime\presentation\public\presentation\lua\lualibs\unsorted\luaworld.cpp] (799) </b></td>
            </tr>
          </table>
        </p>
      </p>
      <p> </p>
      <p> </p>
    </p>
  </body>
</html>