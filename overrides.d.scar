---@diagnostic disable: missing-return

--- Create a table that will be interpreted as a data context for UI properties.
---@param table table
--- @return unknown
function UI_CreateDataContext(table) end

--- Create a table that will be interpreted as a command for UI properties.
--- @param cmd string
--- @return unknown
function UI_CreateCommand(cmd) end

---@alias ResourceType number

---@type ResourceType
RT_Manpower = 0
---@type ResourceType
RT_Fuel = 0
---@type ResourceType
RT_Munition = 0
---@type ResourceType
RT_Command = 0
---@type ResourceType
RT_Action = 0

---@alias PBGType number

---@type PBGType
PBGTYPE_Entity = 0
---@type PBGType
PBGTYPE_Squad = 0
---@type PBGType
PBG_Race = 0
---@type PBGType
PBG_Ability = 0
---@type PBGType
PBGTYPE_Upgrade = 0
---@type PBGType
PBG_Weapon = 0

---@alias OwnerType number
---@type OwnerType
OT_Player = 0
---@type OwnerType
OT_Ally = 0
---@type OwnerType
OT_Enemy = 0
---@type OwnerType
OT_Neutral = 0

---@class LocString : table

---@param team TeamID
---@return TeamID
function Team_GetEnemyTeam(team) end

--? @shortdesc Converts a colour table to an ARGB hex string (e.g. {a=0, r=255, g=204, b=136} => #00FFCC88).
---@param color table
---@return string
function UI_GetColourAsString(color) end

---@param message  string
function fatal(message) end

--- Use capType CT_Personnel to get max squad cap or CT_VehicleCap to get max vehicle cap.
---@param player Player
---@param capType CapType
---@return number
function Player_GetMaxPopulation(player, capType) end


---@param locId string | number | LocString
---@return string
function Loc_ToAnsi(locId) end

---@class UIInfo
---Icon names are WITHOUT .png extension
---@field helpText LocString
---@field revealDecrypt boolean
---@field screenNameShort LocString
---@field extraTextWorld LocString
---@field tooltipDataTemplate string
---@field iconName string
---@field helpTextWorld LocString
---@field debugText string
---@field briefText LocString
---@field iconAlternateName string
---@field hotkeyName string
---@field extraText LocString
---@field screenName LocString
---@field screenNameWorld LocString
---@field portraitIconName string
---@field symbolIconName string
---@field showInBuildLog boolean
---@field uiCombineType userdata
---@field screenNameAlternate LocString
---@field helpTextAlternate LocString

---@class SquadPBG : userdata

---@param sbp SquadPBG
---@param raceBP ScarRacePBG
---@return UIInfo
function BP_GetSquadUIInfo(sbp, raceBP) end

---@param ebp ScarEntityPBG
---@return UIInfo
function BP_GetEntityUIInfo(ebp) end

---@param blueprint  string
---@return ScarRacePBG
function World_GetRaceBlueprint(blueprint) end


---@class RaceInfo
---Icon names are WITHOUT .png extension
---@field name LocString
---@field icon string
---@field faction_type number
---@field loadout table
---@field flag_icon string
---@field image string
---@field image_small string
---@field icon_secondary string
---@field path_name string
---@field name_abbreviated LocString

---@param raceBP ScarRacePBG
---@return RaceInfo
function BP_GetRaceInfo(raceBP) end


---@param entity Entity
---@param extension string
---@return boolean
function Entity_ExtensionExist(entity, extension) end


--- Sends a stop command to egroup or sgroup.
--- @param group EGroupID | SGroupID
--- @return unknown
function Cmd_Stop(group) end

---@param techtree_type  string
---@return PBG
function BP_GetTechTreeBlueprintsByType(techtree_type) end

---@class TEchTreeInfo
---@field activation_upgrade Upgrade
---@field branches TechTreeBranch[]
---@field name LocString

---@class TechTreeBranch
---@field upgrades Upgrade[]

---@param pbg PBG
---@return TEchTreeInfo
function BP_GetTechTreeBPInfo(pbg) end

---@param types string[]
---@param all boolean
---@return EntityPBG[]
function BP_GetEntityBlueprintsWithType_Internal(types, all) end

---@param types string[]
---@param all boolean
---@return SquadPBG[]
function BP_GetSquadBlueprintsWithType_Internal(types, all) end

--? @shortdesc Creates a reticule drawn on the ground
--? @extdesc 'target' can be an entity, marker, position, or squad.
--? @args StackVar target, float radius, BP reticuleBP
--? @result reticuleID
---@param target Entity | Marker | Position | Squad
---@param radius number
---@param reticuleBP PBG
---@return number
function UI_CreateReticule(target, radius, reticuleBP) end

---@param entity Entity
---@param reticuleBP PBG
---@return number
function UI_CreateReticuleOnEntity(entity, radius, reticuleBP) end

---@param position Position
---@param radius number
---@param reticuleBP PBG
---@return number
function UI_CreateReticuleOnPosition(position, radius, reticuleBP) end

---@param squad Squad
---@param radius number
---@param reticuleBP PBG
---@return number
function UI_CreateReticuleOnSquad(squad, radius, reticuleBP) end

---@param id number
function UI_DestroyReticule(id) end
