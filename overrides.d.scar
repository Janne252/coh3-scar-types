--- Create a table that will be interpreted as a data context for UI properties.
---@param table table
--- @return unknown
function UI_CreateDataContext(table) end

--- Create a table that will be interpreted as a command for UI properties.
--- @param cmd string
--- @return unknown
function UI_CreateCommand(cmd) end

---@class ResourceType : userdata

---@type ResourceType
RT_Manpower = {}
---@type ResourceType
RT_Fuel = {}
---@type ResourceType
RT_Munition = {}
---@type ResourceType
RT_Command = {}
---@type ResourceType
RT_Action = {}

---@class LocString : table


---@param team TeamID
---@return TeamID
function Team_GetEnemyTeam(team) end

--? @shortdesc Converts a colour table to an ARGB hex string (e.g. {a=0, r=255, g=204, b=136} => #00FFCC88).
---@param color table
---@return string
function UI_GetColourAsString(color) end

---@param message  string
function fatal(message) end

--- Use capType CT_Personnel to get max squad cap or CT_VehicleCap to get max vehicle cap.
---@param player Player
---@param capType CapType
---@return number
function Player_GetMaxPopulation(player, capType) end


---@param locId string | number | LocString
---@return string
function Loc_ToAnsi(locId) end

---@class UIInfo
---Icon names are WITHOUT .png extension
---@field helpText LocString
---@field revealDecrypt boolean
---@field screenNameShort LocString
---@field extraTextWorld LocString
---@field tooltipDataTemplate string
---@field iconName string
---@field helpTextWorld LocString
---@field debugText string
---@field briefText LocString
---@field iconAlternateName string
---@field hotkeyName string
---@field extraText LocString
---@field screenName LocString
---@field screenNameWorld LocString
---@field portraitIconName string
---@field symbolIconName string
---@field showInBuildLog boolean
---@field uiCombineType userdata
---@field screenNameAlternate LocString
---@field helpTextAlternate LocString


---@param sbp ScarSquadPBG
---@param raceBP ScarRacePBG
---@return UIInfo
function BP_GetSquadUIInfo(sbp, raceBP) end

---@param ebp ScarEntityPBG
---@return UIInfo
function BP_GetEntityUIInfo(ebp) end

---@param blueprint  string
---@return ScarRacePBG
function World_GetRaceBlueprint(blueprint) end


---@class RaceInfo
---Icon names are WITHOUT .png extension
---@field name LocString
---@field icon string
---@field faction_type number
---@field loadout table
---@field flag_icon string
---@field image string
---@field image_small string
---@field icon_secondary string
---@field path_name string
---@field name_abbreviated LocString

---@param raceBP ScarRacePBG
---@return RaceInfo
function BP_GetRaceInfo(raceBP) end


---@param entity Entity
---@param extension string
---@return boolean
function Entity_ExtensionExist(entity, extension) end


--- Order a squad group to retreat, optionally to a specific location. The sgroup can be deleted when in proximity of a marker (it assumes a proximity of 5 if you forget to set one on the marker)
--- vulnerableRetreat will make retreating squads take more damage
--- @param sgroup SGroupID
--- @param OPT_location Position
--- @param OPT_deleteWhenNearMarker boolean
--- @param OPT_queued boolean
--- @param OPT_saveEncounters boolean
--- @param OPT_vulnerableRetreat boolean
--- @return unknown
---@overload fun(sgroup: SGroupID)
---@overload fun(sgroup: SGroupID, OPT_location: Position)
function Cmd_Retreat(sgroup, OPT_location, OPT_deleteWhenNearMarker, OPT_queued, OPT_saveEncounters, OPT_vulnerableRetreat) end

--- Add a rule to be executed every frame.
--- Returns the ID of the rule just added.
--- @param f function
--- @param OPT_data table
--- @param OPT_group EGroupID
--- @return unknown
---@overload fun(f: function)
function Rule_Add(f, OPT_data, OPT_group) end

--- Add a rule to be executed once, after 'delay' seconds.
--- Returns the ID of the rule just added.
--- @param rule function
--- @param OPT_delay number
--- @param OPT_data table
--- @param OPT_group EGroupID
--- @return unknown
---@overload fun(rule: function, OPT_delay: number)
function Rule_AddOneShot(rule, OPT_delay, OPT_data, OPT_group) end

--- Sends a stop command to egroup or sgroup.
--- @param group EGroupID | SGroupID
--- @return unknown
function Cmd_Stop(group) end